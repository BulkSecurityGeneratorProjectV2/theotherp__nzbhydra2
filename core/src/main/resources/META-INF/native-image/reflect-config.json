[
  {
    "name": "boolean",
    "allDeclaredMethods": true
  },
  {
    "name": "boolean[]"
  },
  {
    "name": "byte[]"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MarkerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.Appender"
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.filter.Filter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isStarted",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.ReplacingCompositeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAwareBase",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addError",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addInfo",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addStatus",
        "parameterTypes": [
          "ch.qos.logback.core.status.Status"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWarn",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getStatusManager",
        "parameterTypes": []
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "ch.qos.logback.core.Context"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.LifeCycle",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "char",
    "allDeclaredMethods": true
  },
  {
    "name": "char[]"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonFormat",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonFormat$Shape"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.DeserializationFeature",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.JsonSerializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "acceptJsonFormatVisitor",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
          "com.fasterxml.jackson.databind.JavaType"
        ]
      },
      {
        "name": "getDelegatee",
        "parameterTypes": []
      },
      {
        "name": "handledType",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.SerializerProvider",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isUnwrappingSerializer",
        "parameterTypes": []
      },
      {
        "name": "properties",
        "parameterTypes": []
      },
      {
        "name": "replaceDelegatee",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "serializeWithType",
        "parameterTypes": [
          "java.lang.Object",
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.databind.SerializerProvider",
          "com.fasterxml.jackson.databind.jsontype.TypeSerializer"
        ]
      },
      {
        "name": "unwrappingSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.util.NameTransformer"
        ]
      },
      {
        "name": "usesObjectId",
        "parameterTypes": []
      },
      {
        "name": "withFilterId",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.Deserializers[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.Serializers[]"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Cache"
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.gson.Gson",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.el.ExpressionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "allPublicMethods": true,
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ]
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getSystemCpuLoad",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getMaxFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getOpenFileDescriptorCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.VMOption",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy128",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.proxy.$Proxy133",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.sun.proxy.$Proxy138",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllByTitleLike",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllByTitleLikeIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findAllIdsByIdIn",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy140",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findByExternalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByExternalIdIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findBySearchResultIdIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "findBySearchResultIndexerOrderByTimeDesc",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findBySearchResultTitleOrderByTimeDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByStatusInAndTimeAfterOrderByTimeDesc",
        "parameterTypes": [
          "java.util.Collection",
          "java.time.Instant"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy142",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteByTimeBefore",
        "parameterTypes": [
          "java.time.Instant"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllByIndexerIdAndApiAccessTypeOrderByTimeDesc",
        "parameterTypes": [
          "int",
          "org.nzbhydra.indexers.IndexerApiAccessType",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy143",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByNameNotIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByNameNotIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy144",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy147",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllByDisplayedFalseOrderByTimeDesc",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByNotificationEventType",
        "parameterTypes": [
          "org.nzbhydra.notifications.NotificationEventType"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy148",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIndexerIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIndexer",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "findByIndexerOrderByTimeDesc",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy150",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByImdbIdOrTmdbId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "findByTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTmdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy151",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByImdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTvdbId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTvmazeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTvrageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTvrageIdOrTvmazeIdOrTvdbIdOrImdbId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy169",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllByTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findForUserSearchHistory",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findForUserSearchHistory",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy170",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllByIndexerEntityIn",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findByIndexerEntityAndSearchEntity",
        "parameterTypes": [
          "org.nzbhydra.indexers.IndexerEntity",
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "findBySearchEntity",
        "parameterTypes": [
          "org.nzbhydra.searching.db.SearchEntity"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy171",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy175",
    "methods": [
      {
        "name": "addAdvice",
        "parameterTypes": [
          "int",
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "int",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "addAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAllInBatch",
        "parameterTypes": []
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteInBatch",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": []
      },
      {
        "name": "getAdvisorCount",
        "parameterTypes": []
      },
      {
        "name": "getAdvisors",
        "parameterTypes": []
      },
      {
        "name": "getDecoratedClass",
        "parameterTypes": []
      },
      {
        "name": "getOne",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxiedInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getTargetClass",
        "parameterTypes": []
      },
      {
        "name": "getTargetSource",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isInterfaceProxied",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isPreFiltered",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "removeAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "replaceAdvisor",
        "parameterTypes": [
          "org.springframework.aop.Advisor",
          "org.springframework.aop.Advisor"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAndFlush",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreFiltered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTargetSource",
        "parameterTypes": [
          "org.springframework.aop.TargetSource"
        ]
      },
      {
        "name": "toProxyConfigString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.bind.v2.ContextFactory",
    "methods": [
      {
        "name": "createContext",
        "parameterTypes": [
          "java.lang.Class[]",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "com.sun.xml.bind.v2.model.nav.ReflectionNavigator",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.xml.bind.v2.runtime.reflect.Accessor"
  },
  {
    "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.uwetrottmann.tmdb2.Tmdb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "apiKey",
        "parameterTypes": []
      },
      {
        "name": "apiKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectionService",
        "parameterTypes": []
      },
      {
        "name": "configurationService",
        "parameterTypes": []
      },
      {
        "name": "discoverMovie",
        "parameterTypes": []
      },
      {
        "name": "discoverService",
        "parameterTypes": []
      },
      {
        "name": "discoverTv",
        "parameterTypes": []
      },
      {
        "name": "findService",
        "parameterTypes": []
      },
      {
        "name": "genreService",
        "parameterTypes": []
      },
      {
        "name": "moviesService",
        "parameterTypes": []
      },
      {
        "name": "personService",
        "parameterTypes": []
      },
      {
        "name": "reviewsService",
        "parameterTypes": []
      },
      {
        "name": "searchService",
        "parameterTypes": []
      },
      {
        "name": "tvEpisodesService",
        "parameterTypes": []
      },
      {
        "name": "tvSeasonsService",
        "parameterTypes": []
      },
      {
        "name": "tvService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "double",
    "allDeclaredMethods": true
  },
  {
    "name": "double[]"
  },
  {
    "name": "float",
    "allDeclaredMethods": true
  },
  {
    "name": "float[]"
  },
  {
    "name": "int[]"
  },
  {
    "name": "io.micrometer.core.annotation.Timed"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
  },
  {
    "name": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleConfig",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "io.micrometer.core.lang.NonNullApi",
    "allDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.lang.NonNullFields",
    "allDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.lang.Nullable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.beans.PropertyVetoException"
  },
  {
    "name": "java.io.Closeable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.ObjectInputStream",
    "allPublicMethods": true
  },
  {
    "name": "java.io.Serializable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.io.Serializable[]"
  },
  {
    "name": "java.lang.AutoCloseable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.CharSequence[]"
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Class[]"
  },
  {
    "name": "java.lang.Cloneable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Comparable[]"
  },
  {
    "name": "java.lang.Double",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Enum",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Integer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Iterable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Long",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isExported",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNamed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ModuleLayer",
    "methods": [
      {
        "name": "boot",
        "parameterTypes": []
      },
      {
        "name": "configuration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Object[]"
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StackTraceElement",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getSuppressed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.annotation.Annotation[]"
  },
  {
    "name": "java.lang.annotation.Documented",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Target",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.module.Configuration",
    "methods": [
      {
        "name": "modules",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.module.ModuleReference",
    "methods": [
      {
        "name": "location",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.module.ResolvedModule",
    "methods": [
      {
        "name": "reference",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AccessibleObject",
    "fields": [
      {
        "name": "override"
      }
    ],
    "methods": [
      {
        "name": "canAccess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.reflect.InaccessibleObjectException"
  },
  {
    "name": "java.lang.reflect.Proxy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getInvocationHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxyClass",
        "parameterTypes": [
          "java.lang.ClassLoader",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "isProxyClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newProxyInstance",
        "parameterTypes": [
          "java.lang.ClassLoader",
          "java.lang.Class[]",
          "java.lang.reflect.InvocationHandler"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "allPublicMethods": true
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.URLConnection",
    "methods": [
      {
        "name": "setDefaultUseCaches",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Connection",
    "methods": [
      {
        "name": "createClob",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Statement[]"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.sql.Wrapper",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.Instant"
  },
  {
    "name": "java.time.LocalDate"
  },
  {
    "name": "java.time.LocalDateTime"
  },
  {
    "name": "java.time.LocalTime"
  },
  {
    "name": "java.time.OffsetDateTime"
  },
  {
    "name": "java.time.OffsetTime"
  },
  {
    "name": "java.time.Period"
  },
  {
    "name": "java.time.ZonedDateTime"
  },
  {
    "name": "java.util.AbstractMap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.ArrayList",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Collection",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.Date",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Dictionary",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.EventListener",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.HashMap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.HashSet",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Hashtable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.LinkedHashMap",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.LinkedHashSet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Map",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.Optional",
    "methods": [
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isPresent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Properties",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.util.ServiceLoader",
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.ServiceLoader$Provider",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Set",
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.concurrent.Callable",
    "methods": [
      {
        "name": "call",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.Executor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.concurrent.Flow$Publisher"
  },
  {
    "name": "java.util.concurrent.ScheduledExecutorService"
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.function.Supplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.jar.JarFile",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.io.File",
          "boolean",
          "int",
          "java.lang.Runtime$Version"
        ]
      },
      {
        "name": "isMultiRelease",
        "parameterTypes": []
      },
      {
        "name": "runtimeVersion",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "allPublicMethods": true
  },
  {
    "name": "java.util.logging.SimpleFormatter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.annotation.ManagedBean"
  },
  {
    "name": "javax.annotation.PostConstruct",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.annotation.PreDestroy",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Resource"
  },
  {
    "name": "javax.cache.Cache"
  },
  {
    "name": "javax.cache.CacheManager"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "allPublicMethods": true
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.CompositeData[]"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.naming.Referenceable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.net.ssl.SSLEngine",
    "methods": [
      {
        "name": "getApplicationProtocol",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLParameters",
    "methods": [
      {
        "name": "setApplicationProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLSocket",
    "methods": [
      {
        "name": "getApplicationProtocol",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.persistence.AttributeConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.Column",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Convert",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Converter",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Entity",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.EntityManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.EntityManagerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.Enumerated",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.persistence.ForeignKey",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.GeneratedValue",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Id",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Index",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.JoinColumn",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.ManyToOne",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.OneToMany",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.OneToOne",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Persistence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.persistence.PersistenceContext",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.PersistenceProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Table",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.UniqueConstraint",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.servlet.Filter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.FilterChain"
  },
  {
    "name": "javax.servlet.GenericFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.servlet.GenericServlet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getServletConfig",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "getServletInfo",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "javax.servlet.ServletConfig"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "javax.servlet.MultipartConfigElement",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.Servlet",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.ServletConfig",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.ServletContext",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.servlet.ServletRegistration"
  },
  {
    "name": "javax.servlet.ServletRequest"
  },
  {
    "name": "javax.servlet.ServletResponse"
  },
  {
    "name": "javax.servlet.http.HttpServlet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "service",
        "parameterTypes": [
          "javax.servlet.ServletRequest",
          "javax.servlet.ServletResponse"
        ]
      }
    ]
  },
  {
    "name": "javax.servlet.http.HttpServletRequest",
    "methods": [
      {
        "name": "getHttpServletMapping",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.servlet.http.PushBuilder"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "javax.transaction.Transaction"
  },
  {
    "name": "javax.transaction.TransactionManager"
  },
  {
    "name": "javax.transaction.Transactional"
  },
  {
    "name": "javax.validation.Constraint",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.ConstraintViolation"
  },
  {
    "name": "javax.validation.Validator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.ValidatorFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "javax.validation.constraints.NotEmpty",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.constraints.NotNull",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.validation.executable.ExecutableValidator"
  },
  {
    "name": "javax.websocket.Endpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.websocket.server.ServerContainer"
  },
  {
    "name": "javax.xml.bind.Binder"
  },
  {
    "name": "javax.xml.bind.annotation.XmlAccessType"
  },
  {
    "name": "javax.xml.bind.annotation.XmlAccessorType",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.xml.bind.annotation.XmlElement",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.xml.bind.annotation.XmlNs",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.xml.bind.annotation.XmlNsForm"
  },
  {
    "name": "javax.xml.bind.annotation.XmlRootElement",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.xml.bind.annotation.XmlSchema",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.xml.bind.annotation.XmlSeeAlso",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.xml.bind.annotation.XmlType",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "factoryClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "allPublicConstructors": true
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "allPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "allPublicMethods": true
  },
  {
    "name": "long[]"
  },
  {
    "name": "net.logstash.logback.encoder.LogstashEncoder",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.catalina.Manager"
  },
  {
    "name": "org.apache.catalina.core.ApplicationContextFacade",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "java.lang.String",
          "javax.servlet.Filter"
        ]
      },
      {
        "name": "addJspFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addListener",
        "parameterTypes": [
          "java.util.EventListener"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addServlet",
        "parameterTypes": [
          "java.lang.String",
          "javax.servlet.Servlet"
        ]
      },
      {
        "name": "createFilter",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createListener",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "createServlet",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "declareRoles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributeNames",
        "parameterTypes": []
      },
      {
        "name": "getClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getEffectiveSessionTrackingModes",
        "parameterTypes": []
      },
      {
        "name": "getFilterRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getInitParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameterNames",
        "parameterTypes": []
      },
      {
        "name": "getJspConfigDescriptor",
        "parameterTypes": []
      },
      {
        "name": "getMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getNamedDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRealPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRequestCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getRequestDispatcher",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceAsStream",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourcePaths",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResponseCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getServerInfo",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletContextName",
        "parameterTypes": []
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getServletRegistrations",
        "parameterTypes": []
      },
      {
        "name": "getServlets",
        "parameterTypes": []
      },
      {
        "name": "getSessionCookieConfig",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVirtualServerName",
        "parameterTypes": []
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.Exception",
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "removeAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.catalina.util.CharsetMapper",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.coyote.UpgradeProtocol"
  },
  {
    "name": "org.apache.coyote.http11.Http11NioProtocol",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.LogManager"
  },
  {
    "name": "org.apache.logging.log4j.Logger"
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.message.ParameterizedMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.spi.AbstractLogger"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.slf4j.MDCContextMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JLoggerContextFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.apache.tomcat.util.net.NioEndpoint",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsSci"
  },
  {
    "name": "org.flywaydb.core.Flyway",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.graalvm.nativeimage.ImageInfo",
    "methods": [
      {
        "name": "inImageCode",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.engine.Constants",
    "fields": [
      {
        "name": "BUILD_ID"
      },
      {
        "name": "VERSION_MAJOR"
      },
      {
        "name": "VERSION_MINOR"
      }
    ]
  },
  {
    "name": "org.h2.engine.Engine",
    "methods": [
      {
        "name": "getInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.jdbc.JdbcClob"
  },
  {
    "name": "org.h2.jdbc.JdbcLob",
    "methods": [
      {
        "name": "free",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.jdbcx.JdbcDataSource"
  },
  {
    "name": "org.h2.mvstore.db.MVTableEngine",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.server.web.WebServlet"
  },
  {
    "name": "org.h2.store.fs.FilePathAsync",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathDisk",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathMem",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathMemLZF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathNio",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathNioMapped",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathNioMem",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathNioMemLZF",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathRetryOnInterrupt",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathSplit",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.store.fs.FilePathZip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.Session",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.SessionFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.annotations.GenericGenerator",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.LazyCollection",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.OnDelete",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.Parameter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.annotations.common.reflection.ReflectionManager",
    "methods": [
      {
        "name": "reset",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.reflection.java.JavaReflectionManager",
    "methods": [
      {
        "name": "getXAnnotatedElement",
        "parameterTypes": [
          "java.lang.Package"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.reflection.java.JavaXMember",
    "methods": [
      {
        "name": "getMember",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.util.impl.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.internal.none.BytecodeProviderImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.internal.none.NoProxyFactoryFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.DisabledCaching",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cfg.beanvalidation.TypeSafeActivator",
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.cfg.beanvalidation.ActivationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.collection.internal.AbstractPersistentCollection",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.collection.internal.PersistentSet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.collection.spi.PersistentCollection",
    "allDeclaredMethods": true
  },
  {
    "name": "org.hibernate.dialect.H2Dialect",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.batch.internal.BatchBuilderImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.event.internal.EntityCopyNotAllowedObserver$$Lambda$1708/0x0000000840d8cc40",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.event.service.internal.EventListenerRegistryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.event.spi.AutoFlushEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.DeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.DirtyCheckEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.event.spi.EvictEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.FlushEntityEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.FlushEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.InitializeCollectionEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.LoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.LockEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.MergeEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PersistEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostDeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostInsertEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostLoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreDeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreInsertEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreLoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.RefreshEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.ReplicateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.SaveOrUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.HqlToken",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.BooleanLiteralNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.CountNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.DotNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromElement",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IdentNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.LiteralNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.Node",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.OrderByClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.ParameterNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.QueryNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlFragment",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.Assigned",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.enhanced.NoopOptimizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.id.enhanced.SequenceStyleGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.jmx.internal.DisabledJmxServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManagerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.metamodel.internal.MetamodelImpl"
  },
  {
    "name": "org.hibernate.persister.collection.BasicCollectionPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.persister.spi.PersisterCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.persister.spi.PersisterCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.tuple.entity.PojoEntityTuplizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.tuple.entity.EntityMetamodel",
          "org.hibernate.mapping.PersistentClass"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.type.EnumType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.javers.core.metamodel.annotation.DiffIgnore",
    "allDeclaredMethods": true
  },
  {
    "name": "org.joda.time.ReadableInstant"
  },
  {
    "name": "org.joda.time.YearMonth"
  },
  {
    "name": "org.jsoup.Jsoup"
  },
  {
    "name": "org.nzbhydra.DevEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.DevEndpoint$$EnhancerBySpringCGLIB$$ca8f9208",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.InstanceCounter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.NzbHydra",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "allDeclaredClasses": true
  },
  {
    "name": "org.nzbhydra.api.CapsGenerator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.CategoryConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.ExternalApi",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.MockSearch",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.NewznabJsonTransformer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.NewznabXmlTransformer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.api.stats.ExternalApiStats",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.AuthAndAccessEventHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.AuthWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.HydraEmbeddedServletContainer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$550748fa",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$550748fa$$FastClassBySpringCGLIB$$bd304f01",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration$$FastClassBySpringCGLIB$$3971005e",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.HydraUserDetailsManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.LoginAndAccessAttemptService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.PersistentLoginsEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSeries",
        "parameterTypes": []
      },
      {
        "name": "setSeries",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$EnhancerBySpringCGLIB$$8669770c",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$EnhancerBySpringCGLIB$$8669770c$$FastClassBySpringCGLIB$$e7256add",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.SecurityConfig$$FastClassBySpringCGLIB$$3f5abe30",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.auth.UserInfosProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.backup.BackupAndRestore$$EnhancerBySpringCGLIB$$783a0599",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.backup.BackupTask",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.backup.BackupWeb$$EnhancerBySpringCGLIB$$6d92ecc",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.BaseConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "initializeNewConfig",
        "parameterTypes": []
      },
      {
        "name": "prepareForSaving",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "updateAfterLoading",
        "parameterTypes": []
      },
      {
        "name": "validateConfig",
        "parameterTypes": [
          "org.nzbhydra.config.BaseConfig",
          "java.lang.Object",
          "org.nzbhydra.config.BaseConfig"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigChangedEvent"
  },
  {
    "name": "org.nzbhydra.config.ConfigProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$EnhancerBySpringCGLIB$$c0360e4f",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$EnhancerBySpringCGLIB$$c0360e4f$$FastClassBySpringCGLIB$$2867757d",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigSpringConfiguration$$FastClassBySpringCGLIB$$b5839013",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.ConfigWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.FileSystemBrowser",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.HistoryUserInfoType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.LoggingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.MainConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfig$AppriseType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfigEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.NotificationConfigEntry$MessageType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.RestartRequired",
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.SearchSourceRestriction",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.SearchingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.ValidatingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.auth.AuthConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.auth.AuthType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.auth.UserAuthConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.category.CategoriesConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.category.Category",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.category.Category$Subtype",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.category.NewznabCategoriesDeserializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.category.NewznabCategoriesSerializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloadType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloaderConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloaderType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.DownloadingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.downloading.FileDownloadAccessType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.NzbAddingType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.downloading.ProxyType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.indexer.IndexerConfig$State",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.indexer.SearchModuleType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep003to004",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep004to005",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep005to006",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep006to007",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep007to008",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep008to009",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep009to010",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep010to011",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep011to012",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep012to013",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep013to014",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep014to015",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep015to016",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep016to017",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.migration.ConfigMigrationStep017to018",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeCategoriesConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeCategory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeDownloaderConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeDownloadingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeIndexerConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeLoggingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeNotificationConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.safeconfig.SafeSearchingConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.config.sensitive.SensitiveData",
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.database.FlywayMigration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.database.FlywayMigration$$EnhancerBySpringCGLIB$$62836453",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.FlywayMigration$$EnhancerBySpringCGLIB$$62836453$$FastClassBySpringCGLIB$$26c42695",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.FlywayMigration$$FastClassBySpringCGLIB$$55a6a997",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.FlywayMigration$1",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.database.migration.V2__MOVE_GENERIC_STORAGE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.database.migration.V3__MOVE_GENERIC_STORAGE",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$EnhancerBySpringCGLIB$$40b63da7",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$EnhancerBySpringCGLIB$$40b63da7$$FastClassBySpringCGLIB$$b465eb09",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$FastClassBySpringCGLIB$$ec04cbe7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$EnhancerBySpringCGLIB$$da78a8fb",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$EnhancerBySpringCGLIB$$da78a8fb$$FastClassBySpringCGLIB$$338f8827",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$FastClassBySpringCGLIB$$2a878483",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.FileDownloadStatus"
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.FileHandler$$EnhancerBySpringCGLIB$$c98a2778",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver$$EnhancerBySpringCGLIB$$6f3b8e0c",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.Downloader",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "addBySearchResultIds",
        "parameterTypes": [
          "java.util.List",
          "java.lang.String"
        ]
      },
      {
        "name": "checkForStatusUpdates",
        "parameterTypes": [
          "java.util.List",
          "org.nzbhydra.downloading.downloaders.Downloader$StatusCheckType"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "org.nzbhydra.config.downloading.DownloaderConfig"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.Downloader$$FastClassBySpringCGLIB$$2d05c211",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatus$State",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.nzbget.NzbGet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.nzbget.NzbGet$$EnhancerBySpringCGLIB$$65419128",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.nzbget.NzbGet$$EnhancerBySpringCGLIB$$65419128$$FastClassBySpringCGLIB$$8b8d1be1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.nzbget.NzbGet$$FastClassBySpringCGLIB$$2daf4d72",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.Sabnzbd",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.Sabnzbd$$EnhancerBySpringCGLIB$$ec7efd40",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.downloaders.sabnzbd.Sabnzbd$$EnhancerBySpringCGLIB$$ec7efd40$$FastClassBySpringCGLIB$$7c8196e5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler$$EnhancerBySpringCGLIB$$7fb22ac9",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalTools",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.externaltools.ExternalToolsWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.fortests.DebugWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorage",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.genericstorage.GenericStorageWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.FilterDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.FilterModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.History",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.HistoryWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.SortModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.Stats",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.Stats$$EnhancerBySpringCGLIB$$f0bf8bee",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.Stats$$EnhancerBySpringCGLIB$$f0bf8bee$$FastClassBySpringCGLIB$$385e815d",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.Stats$$FastClassBySpringCGLIB$$62d3d5f4",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.historystats.StatsResponse",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.StatsWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.AverageResponseTime",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.CountPerDayOfWeek",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.CountPerHourOfDay",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadOrSearchSharePerUserOrIp",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadPerAge",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.DownloadPerAgeStats",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.HistoryRequest",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerApiAccessStatsEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerDownloadShare",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.IndexerScore",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.StatsRequest",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.historystats.stats.UserAgentShare",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Anizb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Binsearch",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Indexer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "cleanUpTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "getIndexerEntity",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "handleNewConfig",
        "parameterTypes": [
          "org.nzbhydra.config.ConfigChangedEvent"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "org.nzbhydra.config.indexer.IndexerConfig",
          "org.nzbhydra.indexers.IndexerEntity"
        ]
      },
      {
        "name": "search",
        "parameterTypes": [
          "org.nzbhydra.searching.searchrequests.SearchRequest",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "tryParseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.indexers.Indexer$BackendType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerAccessResult"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerApiAccessType"
  },
  {
    "name": "org.nzbhydra.indexers.IndexerEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerHandlingStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerSearchRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerStatusesCleanupTask",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.IndexerWebAccess",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Newznab",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbGeek",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbIndex",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.QueryGenerator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.QueryGenerator$QueryFormat",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerChecker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.IndexerWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimit",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerLimitRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits$IndexerStatus",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.status.IndexerStatusesWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.torznab.Torznab",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.EceptionFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.LogAnonymizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.LogContentProvider$JsonLogResponse",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.LoggingMarkerFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.logging.MdcLogConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.SemanticVersion",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.changelog.ChangelogChangeEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.changelog.ChangelogVersionEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.github.Asset",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.github.Release",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.ActionAttribute",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse$JaxbAccessorM_getSearchType_setSearchType_org_nzbhydra_mapping_newznab_NewznabResponse$SearchType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "JSON"
      },
      {
        "name": "NEWZNAB"
      },
      {
        "name": "TORZNAB"
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateDeserializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateSerializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.Xml",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.CustomTmdb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.InfoProvider$$EnhancerBySpringCGLIB$$3b5f4925",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaIdType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MediaInfoWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfo",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.MovieInfoRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TmdbHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfo",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvInfoRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.mediainfo.TvMazeHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.misc.BrowserOpener",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.misc.UserAgentMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.misc.WebHooks",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.misc.WebHooks$$EnhancerBySpringCGLIB$$85f2d64",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.WebHooks$$EnhancerBySpringCGLIB$$85f2d64$$FastClassBySpringCGLIB$$4ed1e9e6",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.misc.WebHooks$$FastClassBySpringCGLIB$$78e61806",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.news.NewsProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.NewsProvider$NewsEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.NewsWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.NewsWeb$NewsEntryForWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.ShownNews",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.news.ShownNewsRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEntity$MessageType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationEventType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.notifications.NotificationsWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OutOfMemoryDetector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.OutdatedWrapperDetector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.ProblemDetector",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.problemdetection.ProblemDetectorTask",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryData",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryDataEntry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.CategoryProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.DuplicateDetector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$EnhancerBySpringCGLIB$$4cf79c5b",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$EnhancerBySpringCGLIB$$4cf79c5b$$FastClassBySpringCGLIB$$37223073",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.IndexerForSearchSelector$$FastClassBySpringCGLIB$$396b2a7d",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider$$EnhancerBySpringCGLIB$$5b097bc5",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider$$EnhancerBySpringCGLIB$$5b097bc5$$FastClassBySpringCGLIB$$f585883b",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchModuleProvider$$FastClassBySpringCGLIB$$dce10131",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.SearchResultAcceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.SearchWeb$SearchState",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.Searcher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.HistoryCleanupTask",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$EnhancerBySpringCGLIB$$3f48f35e",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$EnhancerBySpringCGLIB$$9b2bafcf",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.searching.db.SearchResultSequenceGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchRequestParameters",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
  },
  {
    "name": "org.nzbhydra.searching.dtoseventsenums.SearchType",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchRequest$SearchSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$EnhancerBySpringCGLIB$$f335cbf8",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$EnhancerBySpringCGLIB$$f335cbf8$$FastClassBySpringCGLIB$$3e7b837d",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.AppConfig$$FastClassBySpringCGLIB$$abfce19c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.springconfig.ControllerAdvices",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.springconfig.GracefulSpringShutdown",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTask",
    "allDeclaredMethods": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$EnhancerBySpringCGLIB$$b1c63683",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "taskExecutor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$EnhancerBySpringCGLIB$$b1c63683$$FastClassBySpringCGLIB$$d91e7f72",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskConfiguration$$FastClassBySpringCGLIB$$fb9f65c7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTaskScheduler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.tasks.HydraTasksWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.AutomaticUpdater$$EnhancerBySpringCGLIB$$139c5bf3",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.update.UpdateData",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.UpdateManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.UpdatesWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.update.UpdatesWeb$VersionsInfo",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.BootstrappedDataTO",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.ControlWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.ErrorHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.HelpWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.Interceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.MainWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.NzbDetailsWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.UrlCalculator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$EnhancerBySpringCGLIB$$303d7970",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$EnhancerBySpringCGLIB$$303d7970$$FastClassBySpringCGLIB$$b09eca8e",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebConfiguration$$FastClassBySpringCGLIB$$ea575814",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "configureClientInboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureClientOutboundChannel",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.ChannelRegistration"
        ]
      },
      {
        "name": "configureMessageBroker",
        "parameterTypes": [
          "org.springframework.messaging.simp.config.MessageBrokerRegistry"
        ]
      },
      {
        "name": "onShutdown",
        "parameterTypes": [
          "org.nzbhydra.ShutdownEvent"
        ]
      },
      {
        "name": "registerStompEndpoints",
        "parameterTypes": [
          "org.springframework.web.socket.config.annotation.StompEndpointRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WebSocketConfig$$EnhancerBySpringCGLIB$$a5d7cc73",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "org.nzbhydra.web.WelcomeWeb",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.webaccess.Ssl",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.nzbhydra.webaccess.WebAccess",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.LoggerFactory"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.RawTargetAccess",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeforeExistingAdvisors",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.scope.ScopedProxyFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aot.StaticSpringFactories"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory"
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider"
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "allPublicFields": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventRepository"
  },
  {
    "name": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getShowComponents",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$JCacheCacheMeterBinderProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.orm.jpa.HibernateMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$1356/0x0000000840acf840",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEndpoints",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEndpoints",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterContributor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.EnvironmentInfoContributor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoContributor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.cache.JCacheCacheMeterBinderProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
  },
  {
    "name": "org.springframework.boot.actuate.trace.http.HttpTraceRepository"
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration$BootstrapExecutorCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1445/0x0000000840b06840",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration$$Lambda$1446/0x0000000840b06c40",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayDslContextDependsOnPostProcessor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayEntityManagerFactoryDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayJdbcOperationsDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayMigrationInitializerDslContextDependsOnPostProcessor"
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayMigrationInitializerEntityManagerFactoryDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayMigrationInitializerJdbcOperationsDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayMigrationInitializerNamedParameterJdbcOperationsDependsOnPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayNamedParameterJdbcOperationsDependencyConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayDataSource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$900/0x0000000840618440",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$DataSourceInitializationCompletionListener",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$ReactiveUserDetailsServiceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.WebSecurityEnablerConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.AtomikosJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.BitronixJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ResourceProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "hasBeenCustomized",
        "parameterTypes": []
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration$$Lambda$1454/0x0000000840b04040",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudPlatform"
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation[]"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.info.BuildProperties"
  },
  {
    "name": "org.springframework.boot.info.GitProperties"
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SchemaManagementProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystem"
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$550/0x00000008404bd440",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addServletNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "addServletRegistrationBeans",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
        ]
      },
      {
        "name": "addUrlPatterns",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getServletNames",
        "parameterTypes": []
      },
      {
        "name": "getServletRegistrationBeans",
        "parameterTypes": []
      },
      {
        "name": "getUrlPatterns",
        "parameterTypes": []
      },
      {
        "name": "isMatchAfter",
        "parameterTypes": []
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "javax.servlet.DispatcherType",
          "javax.servlet.DispatcherType[]"
        ]
      },
      {
        "name": "setMatchAfter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setServletRegistrationBeans",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addInitParameter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "isAsyncSupported",
        "parameterTypes": []
      },
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.RegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "isEnabled",
        "parameterTypes": []
      },
      {
        "name": "onStartup",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getMultipartConfig",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "getUrlMappings",
        "parameterTypes": []
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMultipartConfig",
        "parameterTypes": [
          "javax.servlet.MultipartConfigElement"
        ]
      },
      {
        "name": "setServlet",
        "parameterTypes": [
          "javax.servlet.Servlet"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addInitializers",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.ServletContextInitializer[]"
        ]
      },
      {
        "name": "addWebListeners",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDocumentRoot",
        "parameterTypes": []
      },
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getLocaleCharsetMappings",
        "parameterTypes": []
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": []
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDocumentRoot",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJsp",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Jsp"
        ]
      },
      {
        "name": "setLocaleCharsetMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "org.springframework.boot.web.server.MimeMappings"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.server.Session"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.CacheManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.annotation.Cacheable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.CachingConfigurationSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.annotation.EnableCaching",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.caffeine.CaffeineCache"
  },
  {
    "name": "org.springframework.cache.caffeine.CaffeineCacheManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.ehcache.EhCacheCache"
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getErrorHandler",
        "parameterTypes": []
      },
      {
        "name": "setErrorHandler",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheErrorHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheOperations",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "configure",
        "parameterTypes": [
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "getCacheResolver",
        "parameterTypes": []
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.springframework.cache.CacheManager"
        ]
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource"
        ]
      },
      {
        "name": "setCacheOperationSources",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheOperationSource[]"
        ]
      },
      {
        "name": "setCacheResolver",
        "parameterTypes": [
          "org.springframework.cache.interceptor.CacheResolver"
        ]
      },
      {
        "name": "setKeyGenerator",
        "parameterTypes": [
          "org.springframework.cache.interceptor.KeyGenerator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.interceptor.CacheOperationSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.jcache.JCacheCache"
  },
  {
    "name": "org.springframework.cache.jcache.config.AbstractJCacheConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.AbstractFallbackJCacheOperationSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheOperation",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.JCacheAspectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getCacheOperationSource",
        "parameterTypes": []
      },
      {
        "name": "setCacheOperationSource",
        "parameterTypes": [
          "org.springframework.cache.jcache.interceptor.JCacheOperationSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.JCacheInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.jcache.interceptor.JCacheOperationSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cache.transaction.TransactionAwareCacheDecorator"
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cglib.proxy.Dispatcher"
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cglib.proxy.Factory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.proxy.MethodInterceptor"
  },
  {
    "name": "org.springframework.cglib.proxy.NoOp"
  },
  {
    "name": "org.springframework.context.ApplicationContext"
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.MessageSourceAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListener",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AnnotationAttributes[]"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.TypeMappedAnnotation[]"
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.GenericConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]"
  },
  {
    "name": "org.springframework.core.io.Resource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.Resource[]",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.type.AnnotationMetadata"
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.AbstractPageRequest",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Chunk",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Page",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.PageImpl",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.PageRequest",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Pageable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Slice",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Sort",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.domain.Sort$Order[]"
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Modifying",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.Param"
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "isFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setFallbackPageable",
        "parameterTypes": [
          "org.springframework.data.domain.Pageable"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getPropertyDelimiter",
        "parameterTypes": []
      },
      {
        "name": "setFallbackSort",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "setPropertyDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus"
  },
  {
    "name": "org.springframework.http.client.AsyncClientHttpRequestFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.ClientHttpRequestFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.support.HttpAccessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getClientHttpRequestInitializers",
        "parameterTypes": []
      },
      {
        "name": "setClientHttpRequestInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getRequestFactory",
        "parameterTypes": []
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRequestFactory",
        "parameterTypes": [
          "org.springframework.http.client.ClientHttpRequestFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.mail.javamail.JavaMailSenderImpl"
  },
  {
    "name": "org.springframework.messaging.MessageChannel",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.MessageHandler",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.SubscribableChannel",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.CompositeMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.MessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.converter.SmartMessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.Map",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "convertAndSend",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.core.MessagePostProcessor"
        ]
      },
      {
        "name": "getDefaultDestination",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "send",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setDefaultDestination",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.core.MessageSendingOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.MessageMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.SendTo",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomArgumentResolvers",
        "parameterTypes": []
      },
      {
        "name": "getCustomReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getReturnValueHandlers",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomArgumentResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessageSendingOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.SimpMessagingTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getHeaderInitializer",
        "parameterTypes": []
      },
      {
        "name": "getMessageConverter",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setDestinationPrefixes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setHeaderInitializer",
        "parameterTypes": [
          "org.springframework.messaging.support.MessageHeaderInitializer"
        ]
      },
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationEventPublisher",
        "parameterTypes": []
      },
      {
        "name": "getBrokerChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientInboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getClientOutboundChannel",
        "parameterTypes": []
      },
      {
        "name": "getDestinationPrefixes",
        "parameterTypes": []
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "isBrokerAvailable",
        "parameterTypes": []
      },
      {
        "name": "isPreservePublishOrder",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPreservePublishOrder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserDestinationPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.simp.config.ChannelRegistration"
  },
  {
    "name": "org.springframework.messaging.simp.config.MessageBrokerRegistry"
  },
  {
    "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.SimpUserRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.simp.user.UserDestinationResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.support.AbstractMessageChannel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getLogger",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "org.springframework.messaging.support.ChannelInterceptor"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "send",
        "parameterTypes": [
          "org.springframework.messaging.Message",
          "long"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogger",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.AbstractSubscribableChannel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getSubscribers",
        "parameterTypes": []
      },
      {
        "name": "hasSubscription",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "subscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      },
      {
        "name": "unsubscribe",
        "parameterTypes": [
          "org.springframework.messaging.MessageHandler"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.support.ExecutorSubscribableChannel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.support.InterceptableChannel",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.nativex.NativeListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.hibernate5.SpringSessionContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.engine.spi.SessionFactoryImplementor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "javax.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "javax.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "javax.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.GenericMarshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.GenericUnmarshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.Marshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.Unmarshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.jaxb.Jaxb2Marshaller",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.mime.MimeMarshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.oxm.mime.MimeUnmarshaller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Async",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncConfigurationSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableAsync",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "requiresDestruction",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allDeclaredClasses": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer"
  },
  {
    "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "newThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setAwaitTerminationMillis",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setAwaitTerminationSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRejectedExecutionHandler",
        "parameterTypes": [
          "java.util.concurrent.RejectedExecutionHandler"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWaitForTasksToCompleteOnShutdown",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.annotation.Secured",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createEvaluationContext",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "java.lang.Object"
        ]
      },
      {
        "name": "getExpressionParser",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setExpressionParser",
        "parameterTypes": [
          "org.springframework.expression.ExpressionParser"
        ]
      },
      {
        "name": "setPermissionEvaluator",
        "parameterTypes": [
          "org.springframework.security.access.PermissionEvaluator"
        ]
      },
      {
        "name": "setRoleHierarchy",
        "parameterTypes": [
          "org.springframework.security.access.hierarchicalroles.RoleHierarchy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.intercept.AbstractSecurityInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getAccessDecisionManager",
        "parameterTypes": []
      },
      {
        "name": "getAfterInvocationManager",
        "parameterTypes": []
      },
      {
        "name": "getAuthenticationManager",
        "parameterTypes": []
      },
      {
        "name": "getRunAsManager",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysReauthenticate",
        "parameterTypes": []
      },
      {
        "name": "isRejectPublicInvocations",
        "parameterTypes": []
      },
      {
        "name": "isValidateConfigAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAccessDecisionManager",
        "parameterTypes": [
          "org.springframework.security.access.AccessDecisionManager"
        ]
      },
      {
        "name": "setAfterInvocationManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.AfterInvocationManager"
        ]
      },
      {
        "name": "setAlwaysReauthenticate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPublishAuthorizationSuccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRejectPublicInvocations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunAsManager",
        "parameterTypes": [
          "org.springframework.security.access.intercept.RunAsManager"
        ]
      },
      {
        "name": "setValidateConfigAttributes",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.access.method.AbstractMethodSecurityMetadataSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getAttributes",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.method.MethodSecurityMetadataSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationDetailsSource"
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.ReactiveAuthenticationManager"
  },
  {
    "name": "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "authenticate",
        "parameterTypes": [
          "org.springframework.security.core.Authentication"
        ]
      },
      {
        "name": "getUserCache",
        "parameterTypes": []
      },
      {
        "name": "isForcePrincipalAsString",
        "parameterTypes": []
      },
      {
        "name": "isHideUserNotFoundExceptions",
        "parameterTypes": []
      },
      {
        "name": "setAuthoritiesMapper",
        "parameterTypes": [
          "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
        ]
      },
      {
        "name": "setForcePrincipalAsString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHideUserNotFoundExceptions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageSource",
        "parameterTypes": [
          "org.springframework.context.MessageSource"
        ]
      },
      {
        "name": "setPostAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setPreAuthenticationChecks",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserDetailsChecker"
        ]
      },
      {
        "name": "setUserCache",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.UserCache"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurer"
        ]
      },
      {
        "name": "apply",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
        ]
      },
      {
        "name": "getConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getOrBuild",
        "parameterTypes": []
      },
      {
        "name": "getSharedObject",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSharedObjects",
        "parameterTypes": []
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "removeConfigurer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "removeConfigurers",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSharedObject",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationEventPublisher"
        ]
      },
      {
        "name": "authenticationProvider",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationProvider"
        ]
      },
      {
        "name": "eraseCredentials",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultUserDetailsService",
        "parameterTypes": []
      },
      {
        "name": "isConfigured",
        "parameterTypes": []
      },
      {
        "name": "ldapAuthentication",
        "parameterTypes": []
      },
      {
        "name": "parentAuthenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.AuthenticationManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.SecurityBuilder"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "postProcess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$FastClassBySpringCGLIB$$84b6d1a7",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecuritySelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.MethodSecurityMetadataSourceAdvisorRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.WebSecurityConfigurer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity"
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.SpringWebMvcImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.http.SessionCreationPolicy"
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetails"
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.provisioning.UserDetailsManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.FilterChainProxy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain"
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandlerImpl",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setErrorPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "onAuthentication",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "javax.servlet.http.HttpServletRequest",
          "javax.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setAlwaysCreateSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
  },
  {
    "name": "org.springframework.security.web.context.SecurityContextPersistenceFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.firewall.DefaultHttpFirewall",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.firewall.HttpFirewall",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.header.HeaderWriterFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.session.SessionManagementFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.util.matcher.RequestMatcher"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager"
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allPublicFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getPointcut",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "currentTransactionStatus",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "org.aopalliance.intercept.MethodInvocation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionSynchronization",
        "parameterTypes": []
      },
      {
        "name": "isFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": []
      },
      {
        "name": "isGlobalRollbackOnParticipationFailure",
        "parameterTypes": []
      },
      {
        "name": "isNestedTransactionAllowed",
        "parameterTypes": []
      },
      {
        "name": "isRollbackOnCommitFailure",
        "parameterTypes": []
      },
      {
        "name": "isValidateExistingTransaction",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGlobalRollbackOnParticipationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNestedTransactionAllowed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionSynchronization",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTransactionSynchronizationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateExistingTransaction",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "setIsolationLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIsolationLevelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropagationBehavior",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPropagationBehaviorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.util.AntPathMatcher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
  },
  {
    "name": "org.springframework.util.CustomizableThreadCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createThread",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "getThreadGroup",
        "parameterTypes": []
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "getThreadPriority",
        "parameterTypes": []
      },
      {
        "name": "isDaemon",
        "parameterTypes": []
      },
      {
        "name": "setDaemon",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadGroup",
        "parameterTypes": [
          "java.lang.ThreadGroup"
        ]
      },
      {
        "name": "setThreadGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPriority",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setValidatedAnnotationType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "javax.validation.Validator"
        ]
      },
      {
        "name": "setValidatorFactory",
        "parameterTypes": [
          "javax.validation.ValidatorFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.InitBinder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod[]"
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.client.RestOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.annotation.RequestScope",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setServletContext",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceRequestEncoding",
        "parameterTypes": []
      },
      {
        "name": "isForceResponseEncoding",
        "parameterTypes": []
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequestEncoding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponseEncoding",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.DelegatingFilterProxy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.ForwardedHeaderFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.GenericFilterBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": [
          "javax.servlet.FilterConfig"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.filter.OncePerRequestFilter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "doFilter",
        "parameterTypes": [
          "javax.servlet.ServletRequest",
          "javax.servlet.ServletResponse",
          "javax.servlet.FilterChain"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.commons.CommonsMultipartResolver"
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.AsyncHandlerInterceptor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FrameworkServlet",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getContextAttribute",
        "parameterTypes": []
      },
      {
        "name": "getContextClass",
        "parameterTypes": []
      },
      {
        "name": "getContextConfigLocation",
        "parameterTypes": []
      },
      {
        "name": "getContextId",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getServletContextAttributeName",
        "parameterTypes": []
      },
      {
        "name": "getWebApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "isEnableLoggingRequestDetails",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.event.ContextRefreshedEvent"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setContextAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setContextConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializerClasses",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextInitializers",
        "parameterTypes": [
          "org.springframework.context.ApplicationContextInitializer[]"
        ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableLoggingRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPublishEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setThreadContextInheritable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerInterceptor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HttpServletBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getServletName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "PATH_VARIABLES"
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.CorsRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.EnableWebMvc",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": []
      },
      {
        "name": "flashMapManager",
        "parameterTypes": []
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getServletContext",
        "parameterTypes": []
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "localeResolver",
        "parameterTypes": []
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": []
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": []
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": []
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": []
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "mvcValidator",
        "parameterTypes": []
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setServletContext",
        "parameterTypes": [
          "javax.servlet.ServletContext"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "themeResolver",
        "parameterTypes": []
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$$FastClassBySpringCGLIB$$69f69f7c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "initApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setDetectHandlersInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsConfigurationSource",
        "parameterTypes": []
      },
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getDefaultHandler",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathMatcher",
        "parameterTypes": []
      },
      {
        "name": "getPatternParser",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysUseFullPath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.CorsProcessor"
        ]
      },
      {
        "name": "setDefaultHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPathMatcher",
        "parameterTypes": [
          "org.springframework.util.PathMatcher"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRemoveSemicolonContent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlDecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      },
      {
        "name": "usesPathPatterns",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerMethodsForMappingName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setDetectHandlerMethodsInAncestorContexts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHandlerMethodMappingNamingStrategy",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerMap",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternHandlerMap",
        "parameterTypes": []
      },
      {
        "name": "getRootHandler",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest",
          "java.lang.String"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPatternParser",
        "parameterTypes": [
          "org.springframework.web.util.pattern.PathPatternParser"
        ]
      },
      {
        "name": "setRootHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useTrailingSlashMatch",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerInterceptorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastModified",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest",
          "javax.servlet.http.HttpServletResponse",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getFlashMapTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUrlPathHelper",
        "parameterTypes": []
      },
      {
        "name": "retrieveAndUpdate",
        "parameterTypes": [
          "javax.servlet.http.HttpServletRequest",
          "javax.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "saveOutputFlashMap",
        "parameterTypes": [
          "org.springframework.web.servlet.FlashMap",
          "javax.servlet.http.HttpServletRequest",
          "javax.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "setFlashMapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlPathHelper",
        "parameterTypes": [
          "org.springframework.web.util.UrlPathHelper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.WebContentGenerator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getCacheControl",
        "parameterTypes": []
      },
      {
        "name": "getCacheSeconds",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMethods",
        "parameterTypes": []
      },
      {
        "name": "getVaryByRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "isAlwaysMustRevalidate",
        "parameterTypes": []
      },
      {
        "name": "isRequireSession",
        "parameterTypes": []
      },
      {
        "name": "isUseCacheControlHeader",
        "parameterTypes": []
      },
      {
        "name": "isUseCacheControlNoStore",
        "parameterTypes": []
      },
      {
        "name": "isUseExpiresHeader",
        "parameterTypes": []
      },
      {
        "name": "setAlwaysMustRevalidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheControl",
        "parameterTypes": [
          "org.springframework.http.CacheControl"
        ]
      },
      {
        "name": "setCacheSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRequireSession",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSupportedMethods",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setUseCacheControlHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseCacheControlNoStore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseExpiresHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVaryByRequestHeaders",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getDefaultThemeName",
        "parameterTypes": []
      },
      {
        "name": "setDefaultThemeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheFilter",
        "parameterTypes": []
      },
      {
        "name": "getCacheLimit",
        "parameterTypes": []
      },
      {
        "name": "isCache",
        "parameterTypes": []
      },
      {
        "name": "isCacheUnresolved",
        "parameterTypes": []
      },
      {
        "name": "removeFromCache",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "resolveViewName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Locale"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheFilter",
        "parameterTypes": [
          "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
        ]
      },
      {
        "name": "setCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCacheUnresolved",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ViewResolverComposite",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.SubProtocolCapable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.WebSocketHandler",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration"
  },
  {
    "name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.ITemplateEngine",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.TemplateEngine",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addDialect",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "addLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "addMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "addTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "clearDialects",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCache",
        "parameterTypes": []
      },
      {
        "name": "clearTemplateCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheManager",
        "parameterTypes": []
      },
      {
        "name": "getConfiguration",
        "parameterTypes": []
      },
      {
        "name": "getDecoupledTemplateLogicResolver",
        "parameterTypes": []
      },
      {
        "name": "getDialects",
        "parameterTypes": []
      },
      {
        "name": "getDialectsByPrefix",
        "parameterTypes": []
      },
      {
        "name": "getEngineContextFactory",
        "parameterTypes": []
      },
      {
        "name": "getLinkBuilders",
        "parameterTypes": []
      },
      {
        "name": "getMessageResolvers",
        "parameterTypes": []
      },
      {
        "name": "getTemplateResolvers",
        "parameterTypes": []
      },
      {
        "name": "isInitialized",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "process",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext",
          "java.io.Writer"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "java.lang.String",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "processThrottled",
        "parameterTypes": [
          "org.thymeleaf.TemplateSpec",
          "org.thymeleaf.context.IContext"
        ]
      },
      {
        "name": "setAdditionalDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheManager",
        "parameterTypes": [
          "org.thymeleaf.cache.ICacheManager"
        ]
      },
      {
        "name": "setDecoupledTemplateLogicResolver",
        "parameterTypes": [
          "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.thymeleaf.dialect.IDialect"
        ]
      },
      {
        "name": "setDialects",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDialectsByPrefix",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEngineContextFactory",
        "parameterTypes": [
          "org.thymeleaf.context.IEngineContextFactory"
        ]
      },
      {
        "name": "setLinkBuilder",
        "parameterTypes": [
          "org.thymeleaf.linkbuilder.ILinkBuilder"
        ]
      },
      {
        "name": "setLinkBuilders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMessageResolver",
        "parameterTypes": [
          "org.thymeleaf.messageresolver.IMessageResolver"
        ]
      },
      {
        "name": "setMessageResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplateResolver",
        "parameterTypes": [
          "org.thymeleaf.templateresolver.ITemplateResolver"
        ]
      },
      {
        "name": "setTemplateResolvers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "threadIndex",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.dialect.AbstractDialect",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.dialect.IDialect",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.dialect.IExpressionObjectDialect",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.extras.java8time.dialect.Java8TimeDialect",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.ISpringTemplateEngine",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.SpringTemplateEngine",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.spring5.view.AbstractThymeleafView",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addStaticVariable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getForceContentType",
        "parameterTypes": []
      },
      {
        "name": "getProducePartialOutputWhileProcessing",
        "parameterTypes": []
      },
      {
        "name": "getStaticVariables",
        "parameterTypes": []
      },
      {
        "name": "getTemplateName",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceContentType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring5.view.ThymeleafView",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.thymeleaf.spring5.view.ThymeleafViewResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.thymeleaf.standard.expression.AndExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.EqualsNotEqualsExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.GreaterLesserExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.MultiplicationDivisionRemainderExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.standard.expression.OrExpression",
    "methods": [
      {
        "name": "isLeftAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      },
      {
        "name": "isRightAllowed",
        "parameterTypes": [
          "org.thymeleaf.standard.expression.IStandardExpression"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templatemode.TemplateMode"
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addTemplateAlias",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearTemplateAliases",
        "parameterTypes": []
      },
      {
        "name": "getCSSTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getCSSTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getCacheTTLMs",
        "parameterTypes": []
      },
      {
        "name": "getCacheablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getCacheablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getCharacterEncoding",
        "parameterTypes": []
      },
      {
        "name": "getForceSuffix",
        "parameterTypes": []
      },
      {
        "name": "getForceTemplateMode",
        "parameterTypes": []
      },
      {
        "name": "getHtml5TemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getHtml5TemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getHtmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getHtmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getJavaScriptTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getJavaScriptTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getLegacyHtml5TemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getLegacyHtml5TemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getNonCacheablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getNonCacheablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRawTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getRawTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getSuffix",
        "parameterTypes": []
      },
      {
        "name": "getTemplateAliases",
        "parameterTypes": []
      },
      {
        "name": "getTemplateMode",
        "parameterTypes": []
      },
      {
        "name": "getTextTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getTextTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getValidXhtmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getValidXhtmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getValidXmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getValidXmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getXhtmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getXhtmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "getXmlTemplateModePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getXmlTemplateModePatterns",
        "parameterTypes": []
      },
      {
        "name": "isCacheable",
        "parameterTypes": []
      },
      {
        "name": "setCSSTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCacheTTLMs",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setCacheable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setCharacterEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceSuffix",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceTemplateMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHtml5TemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHtmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setJavaScriptTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLegacyHtml5TemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setNonCacheablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateAliases",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTemplateMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTemplateMode",
        "parameterTypes": [
          "org.thymeleaf.templatemode.TemplateMode"
        ]
      },
      {
        "name": "setTextTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValidXhtmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValidXmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setXhtmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setXmlTemplateModePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getCheckExistence",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getResolvablePatternSpec",
        "parameterTypes": []
      },
      {
        "name": "getResolvablePatterns",
        "parameterTypes": []
      },
      {
        "name": "getUseDecoupledLogic",
        "parameterTypes": []
      },
      {
        "name": "resolveTemplate",
        "parameterTypes": [
          "org.thymeleaf.IEngineConfiguration",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setCheckExistence",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResolvablePatterns",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseDecoupledLogic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.thymeleaf.templateresolver.ITemplateResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "short[]"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "allPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ]
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "sun.security.pkcs.SignerInfo[]"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SecureRandom",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA384withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
