[
    {
        "name": "[B"
    },
    {
        "name": "[C"
    },
    {
        "name": "[D"
    },
    {
        "name": "[F"
    },
    {
        "name": "[I"
    },
    {
        "name": "[J"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
        "name": "[Ljava.io.Serializable;"
    },
    {
        "name": "[Ljava.lang.CharSequence;"
    },
    {
        "name": "[Ljava.lang.Class;"
    },
    {
        "name": "[Ljava.lang.Comparable;"
    },
    {
        "name": "[Ljava.lang.Object;"
    },
    {
        "name": "[Ljava.lang.String;"
    },
    {
        "name": "[Ljava.lang.constant.Constable;"
    },
    {
        "name": "[Ljava.lang.constant.ConstantDesc;"
    },
    {
        "name": "[Ljava.sql.Statement;"
    },
    {
        "name": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.AutoFlushEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.DeleteEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.DirtyCheckEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.EvictEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.FlushEntityEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.FlushEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.InitializeCollectionEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.LoadEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.LockEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.MergeEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PersistEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PostDeleteEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PostInsertEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PostLoadEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PostUpdateEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PreDeleteEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PreInsertEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PreLoadEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.PreUpdateEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.RefreshEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.ReplicateEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.ResolveNaturalIdEventListener;"
    },
    {
        "name": "[Lorg.hibernate.event.spi.SaveOrUpdateEventListener;"
    },
    {
        "name": "[Lorg.springframework.boot.context.config.ConfigDataLocation;"
    },
    {
        "name": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
        "name": "[Lorg.springframework.core.io.InputStreamSource;"
    },
    {
        "name": "[Lorg.springframework.core.io.Resource;",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
        "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
        "name": "[S"
    },
    {
        "name": "[Z"
    },
    {
        "name": "boolean",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "ch.qos.logback.classic.LoggerContext"
    },
    {
        "name": "ch.qos.logback.classic.filter.ThresholdFilter",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setLevel",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.DateConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LevelConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LoggerConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.MarkerConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.MessageConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.ThreadConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.ConsoleAppender",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.OutputStreamAppender",
        "methods": [
            {
                "name": "setEncoder",
                "parameterTypes": [
                    "ch.qos.logback.core.encoder.Encoder"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.UnsynchronizedAppenderBase",
        "methods": [
            {
                "name": "addFilter",
                "parameterTypes": [
                    "ch.qos.logback.core.filter.Filter"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
        "methods": [
            {
                "name": "setParent",
                "parameterTypes": [
                    "ch.qos.logback.core.spi.ContextAware"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.filter.Filter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "isStarted",
                "parameterTypes": []
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "start",
                "parameterTypes": []
            },
            {
                "name": "stop",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
        "methods": [
            {
                "name": "setPattern",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.ReplacingCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.rolling.RollingFileAppender",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setFile",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRollingPolicy",
                "parameterTypes": [
                    "ch.qos.logback.core.rolling.RollingPolicy"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.rolling.RollingPolicyBase",
        "methods": [
            {
                "name": "setFileNamePattern",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setParent",
                "parameterTypes": [
                    "ch.qos.logback.core.FileAppender"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setMaxHistory",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.spi.ContextAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "ch.qos.logback.core.spi.ContextAwareBase",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addError",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "addError",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "addInfo",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "addInfo",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "addStatus",
                "parameterTypes": [
                    "ch.qos.logback.core.status.Status"
                ]
            },
            {
                "name": "addWarn",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "addWarn",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Throwable"
                ]
            },
            {
                "name": "getContext",
                "parameterTypes": []
            },
            {
                "name": "getStatusManager",
                "parameterTypes": []
            },
            {
                "name": "setContext",
                "parameterTypes": [
                    "ch.qos.logback.core.Context"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.spi.LifeCycle",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "char",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonFormat",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "lenient",
                "parameterTypes": []
            },
            {
                "name": "shape",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonFormat$Shape"
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonIgnore",
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonInclude",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.annotation.JsonSetter",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "contentNulls",
                "parameterTypes": []
            },
            {
                "name": "nulls",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
        "name": "com.fasterxml.jackson.core.ObjectCodec",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getJsonFactory",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.core.TreeCodec",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.core.Versioned",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.DeserializationFeature",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.Module",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getDependencies",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ObjectMapper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.SerializationFeature",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "as",
                "parameterTypes": []
            },
            {
                "name": "contentAs",
                "parameterTypes": []
            },
            {
                "name": "contentConverter",
                "parameterTypes": []
            },
            {
                "name": "contentUsing",
                "parameterTypes": []
            },
            {
                "name": "converter",
                "parameterTypes": []
            },
            {
                "name": "include",
                "parameterTypes": []
            },
            {
                "name": "keyAs",
                "parameterTypes": []
            },
            {
                "name": "keyUsing",
                "parameterTypes": []
            },
            {
                "name": "nullsUsing",
                "parameterTypes": []
            },
            {
                "name": "typing",
                "parameterTypes": []
            },
            {
                "name": "using",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.module.SimpleModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addAbstractTypeMapping",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class"
                ]
            },
            {
                "name": "addDeserializer",
                "parameterTypes": [
                    "java.lang.Class",
                    "com.fasterxml.jackson.databind.JsonDeserializer"
                ]
            },
            {
                "name": "addKeyDeserializer",
                "parameterTypes": [
                    "java.lang.Class",
                    "com.fasterxml.jackson.databind.KeyDeserializer"
                ]
            },
            {
                "name": "addKeySerializer",
                "parameterTypes": [
                    "java.lang.Class",
                    "com.fasterxml.jackson.databind.JsonSerializer"
                ]
            },
            {
                "name": "addSerializer",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.JsonSerializer"
                ]
            },
            {
                "name": "addSerializer",
                "parameterTypes": [
                    "java.lang.Class",
                    "com.fasterxml.jackson.databind.JsonSerializer"
                ]
            },
            {
                "name": "addValueInstantiator",
                "parameterTypes": [
                    "java.lang.Class",
                    "com.fasterxml.jackson.databind.deser.ValueInstantiator"
                ]
            },
            {
                "name": "getModuleName",
                "parameterTypes": []
            },
            {
                "name": "getTypeId",
                "parameterTypes": []
            },
            {
                "name": "registerSubtypes",
                "parameterTypes": [
                    "java.util.Collection"
                ]
            },
            {
                "name": "registerSubtypes",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.jsontype.NamedType[]"
                ]
            },
            {
                "name": "registerSubtypes",
                "parameterTypes": [
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "setAbstractTypes",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
                ]
            },
            {
                "name": "setDeserializerModifier",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
                ]
            },
            {
                "name": "setDeserializers",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleDeserializers"
                ]
            },
            {
                "name": "setKeyDeserializers",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
                ]
            },
            {
                "name": "setKeySerializers",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleSerializers"
                ]
            },
            {
                "name": "setMixInAnnotation",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class"
                ]
            },
            {
                "name": "setSerializerModifier",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
                ]
            },
            {
                "name": "setSerializers",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleSerializers"
                ]
            },
            {
                "name": "setValueInstantiators",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
                ]
            },
            {
                "name": "setupModule",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.Module$SetupContext"
                ]
            },
            {
                "name": "version",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.dataformat.cbor$CBORFactory"
    },
    {
        "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
        "name": "com.fasterxml.jackson.dataformat.smile$SmileFactory"
    },
    {
        "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
        "name": "com.fasterxml.jackson.dataformat.xml$XmlMapper"
    },
    {
        "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
        "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.datatype.joda$JodaModule"
    },
    {
        "name": "com.fasterxml.jackson.datatype.joda.JodaModule"
    },
    {
        "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.module.kotlin$KotlinModule"
    },
    {
        "name": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    {
        "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.google.common.base.Optional"
    },
    {
        "name": "com.google.gson.Gson",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.google.gson.GsonBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.ibm.icu.text.Collator"
    },
    {
        "name": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
        "name": "com.ibm.websphere.wsoc$WsWsocServerContainer"
    },
    {
        "name": "com.ibm.websphere.wsoc.WsWsocServerContainer"
    },
    {
        "name": "com.querydsl.core.types$Predicate"
    },
    {
        "name": "com.querydsl.core.types.Predicate"
    },
    {
        "name": "com.rometools.rome.feed$WireFeed"
    },
    {
        "name": "com.rometools.rome.feed.WireFeed"
    },
    {
        "name": "com.sun.crypto.provider.AESCipher$General",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.ARCFOURCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.DESCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.DESedeCipher",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
        "name": "com.sun.management.GarbageCollectorMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.GcInfo",
        "queryAllPublicMethods": true,
        "fields": [
            {
                "name": "builder"
            },
            {
                "name": "extAttributes"
            }
        ]
    },
    {
        "name": "com.sun.management.HotSpotDiagnosticMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.OperatingSystemMXBean",
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "getCpuLoad",
                "parameterTypes": []
            },
            {
                "name": "getProcessCpuLoad",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.management.ThreadMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
        "name": "com.sun.management.VMOption",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.internal.GarbageCollectorExtImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.HotSpotDiagnostic",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.HotSpotThreadImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.OperatingSystemImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.xml.bind.v2.model.nav.ReflectionNavigator",
        "methods": [
            {
                "name": "getInstance",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.ArrayElementLeafProperty",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.ArrayElementNodeProperty",
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.sun.xml.bind.v2.runtime.JAXBContextImpl",
                    "com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo"
                ]
            }
        ]
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.ArrayReferenceNodeProperty",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.SingleElementLeafProperty",
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.sun.xml.bind.v2.runtime.JAXBContextImpl",
                    "com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo"
                ]
            }
        ]
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.SingleElementNodeProperty",
        "queryAllPublicConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.sun.xml.bind.v2.runtime.JAXBContextImpl",
                    "com.sun.xml.bind.v2.model.runtime.RuntimeElementPropertyInfo"
                ]
            }
        ]
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.SingleMapNodeProperty",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.xml.bind.v2.runtime.property.SingleReferenceNodeProperty",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.uwetrottmann.tmdb2.Tmdb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "apiKey",
                "parameterTypes": []
            },
            {
                "name": "apiKey",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "collectionService",
                "parameterTypes": []
            },
            {
                "name": "configurationService",
                "parameterTypes": []
            },
            {
                "name": "discoverMovie",
                "parameterTypes": []
            },
            {
                "name": "discoverService",
                "parameterTypes": []
            },
            {
                "name": "discoverTv",
                "parameterTypes": []
            },
            {
                "name": "findService",
                "parameterTypes": []
            },
            {
                "name": "genreService",
                "parameterTypes": []
            },
            {
                "name": "moviesService",
                "parameterTypes": []
            },
            {
                "name": "personService",
                "parameterTypes": []
            },
            {
                "name": "reviewsService",
                "parameterTypes": []
            },
            {
                "name": "searchService",
                "parameterTypes": []
            },
            {
                "name": "tvEpisodesService",
                "parameterTypes": []
            },
            {
                "name": "tvSeasonsService",
                "parameterTypes": []
            },
            {
                "name": "tvService",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.zaxxer.hikari.HikariConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addDataSourceProperty",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Object"
                ]
            },
            {
                "name": "addHealthCheckProperty",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            },
            {
                "name": "copyStateTo",
                "parameterTypes": [
                    "com.zaxxer.hikari.HikariConfig"
                ]
            },
            {
                "name": "getCatalog",
                "parameterTypes": []
            },
            {
                "name": "getConnectionInitSql",
                "parameterTypes": []
            },
            {
                "name": "getConnectionTestQuery",
                "parameterTypes": []
            },
            {
                "name": "getConnectionTimeout",
                "parameterTypes": []
            },
            {
                "name": "getDataSource",
                "parameterTypes": []
            },
            {
                "name": "getDataSourceClassName",
                "parameterTypes": []
            },
            {
                "name": "getDataSourceJNDI",
                "parameterTypes": []
            },
            {
                "name": "getDataSourceProperties",
                "parameterTypes": []
            },
            {
                "name": "getDriverClassName",
                "parameterTypes": []
            },
            {
                "name": "getExceptionOverrideClassName",
                "parameterTypes": []
            },
            {
                "name": "getHealthCheckProperties",
                "parameterTypes": []
            },
            {
                "name": "getHealthCheckRegistry",
                "parameterTypes": []
            },
            {
                "name": "getIdleTimeout",
                "parameterTypes": []
            },
            {
                "name": "getInitializationFailTimeout",
                "parameterTypes": []
            },
            {
                "name": "getJdbcUrl",
                "parameterTypes": []
            },
            {
                "name": "getKeepaliveTime",
                "parameterTypes": []
            },
            {
                "name": "getLeakDetectionThreshold",
                "parameterTypes": []
            },
            {
                "name": "getMaxLifetime",
                "parameterTypes": []
            },
            {
                "name": "getMaximumPoolSize",
                "parameterTypes": []
            },
            {
                "name": "getMetricRegistry",
                "parameterTypes": []
            },
            {
                "name": "getMetricsTrackerFactory",
                "parameterTypes": []
            },
            {
                "name": "getMinimumIdle",
                "parameterTypes": []
            },
            {
                "name": "getPassword",
                "parameterTypes": []
            },
            {
                "name": "getPoolName",
                "parameterTypes": []
            },
            {
                "name": "getScheduledExecutor",
                "parameterTypes": []
            },
            {
                "name": "getSchema",
                "parameterTypes": []
            },
            {
                "name": "getThreadFactory",
                "parameterTypes": []
            },
            {
                "name": "getTransactionIsolation",
                "parameterTypes": []
            },
            {
                "name": "getUsername",
                "parameterTypes": []
            },
            {
                "name": "getValidationTimeout",
                "parameterTypes": []
            },
            {
                "name": "isAllowPoolSuspension",
                "parameterTypes": []
            },
            {
                "name": "isAutoCommit",
                "parameterTypes": []
            },
            {
                "name": "isIsolateInternalQueries",
                "parameterTypes": []
            },
            {
                "name": "isReadOnly",
                "parameterTypes": []
            },
            {
                "name": "isRegisterMbeans",
                "parameterTypes": []
            },
            {
                "name": "setAllowPoolSuspension",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setAutoCommit",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setCatalog",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setConnectionInitSql",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setConnectionTestQuery",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setConnectionTimeout",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setDataSource",
                "parameterTypes": [
                    "javax.sql.DataSource"
                ]
            },
            {
                "name": "setDataSourceClassName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDataSourceJNDI",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDataSourceProperties",
                "parameterTypes": [
                    "java.util.Properties"
                ]
            },
            {
                "name": "setDriverClassName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setExceptionOverrideClassName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setHealthCheckProperties",
                "parameterTypes": [
                    "java.util.Properties"
                ]
            },
            {
                "name": "setIdleTimeout",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setInitializationFailTimeout",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setIsolateInternalQueries",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setJdbcUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setKeepaliveTime",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setLeakDetectionThreshold",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setMaxLifetime",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setMaximumPoolSize",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setMinimumIdle",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPoolName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setReadOnly",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRegisterMbeans",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setScheduledExecutor",
                "parameterTypes": [
                    "java.util.concurrent.ScheduledExecutorService"
                ]
            },
            {
                "name": "setSchema",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setThreadFactory",
                "parameterTypes": [
                    "java.util.concurrent.ThreadFactory"
                ]
            },
            {
                "name": "setTransactionIsolation",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setValidationTimeout",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "validate",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.zaxxer.hikari.HikariConfigMXBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "com.zaxxer.hikari.HikariDataSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
        "queriedMethods": [
            {
                "name": "getSchema",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "float",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.Clock",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.Clock$1",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.MeterRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "close",
                "parameterTypes": []
            }
        ],
        "queriedMethods": [
            {
                "name": "clear",
                "parameterTypes": []
            },
            {
                "name": "config",
                "parameterTypes": []
            },
            {
                "name": "counter",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable"
                ]
            },
            {
                "name": "counter",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String[]"
                ]
            },
            {
                "name": "find",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "forEachMeter",
                "parameterTypes": [
                    "java.util.function.Consumer"
                ]
            },
            {
                "name": "gauge",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable",
                    "java.lang.Number"
                ]
            },
            {
                "name": "gauge",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable",
                    "java.lang.Object",
                    "java.util.function.ToDoubleFunction"
                ]
            },
            {
                "name": "gauge",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Number"
                ]
            },
            {
                "name": "gauge",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Object",
                    "java.util.function.ToDoubleFunction"
                ]
            },
            {
                "name": "gaugeCollectionSize",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable",
                    "java.util.Collection"
                ]
            },
            {
                "name": "gaugeMapSize",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable",
                    "java.util.Map"
                ]
            },
            {
                "name": "get",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getMeters",
                "parameterTypes": []
            },
            {
                "name": "isClosed",
                "parameterTypes": []
            },
            {
                "name": "more",
                "parameterTypes": []
            },
            {
                "name": "remove",
                "parameterTypes": [
                    "io.micrometer.core.instrument.Meter$Id"
                ]
            },
            {
                "name": "remove",
                "parameterTypes": [
                    "io.micrometer.core.instrument.Meter"
                ]
            },
            {
                "name": "removeByPreFilterId",
                "parameterTypes": [
                    "io.micrometer.core.instrument.Meter$Id"
                ]
            },
            {
                "name": "summary",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable"
                ]
            },
            {
                "name": "summary",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String[]"
                ]
            },
            {
                "name": "timer",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Iterable"
                ]
            },
            {
                "name": "timer",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "io.micrometer.core.instrument.binder.MeterBinder",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.config.MeterFilter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.config.MeterFilter$9",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.simple.SimpleConfig",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.micrometer.core.lang.NonNullApi",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.micrometer.core.lang.NonNullFields",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.micrometer.core.lang.Nullable",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.reactivex$Flowable"
    },
    {
        "name": "io.reactivex.Flowable"
    },
    {
        "name": "io.reactivex.rxjava3.core$Flowable"
    },
    {
        "name": "io.reactivex.rxjava3.core.Flowable"
    },
    {
        "name": "io.smallrye.mutiny$Multi"
    },
    {
        "name": "io.smallrye.mutiny.Multi"
    },
    {
        "name": "io.swagger.v3.core.converter.ModelConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "io.swagger.v3.core.converter.ModelConverters",
        "fields": [
            {
                "name": "converters"
            }
        ]
    },
    {
        "name": "io.swagger.v3.core.filter.SpecFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "filter",
                "parameterTypes": [
                    "io.swagger.v3.oas.models.OpenAPI",
                    "io.swagger.v3.core.filter.OpenAPISpecFilter",
                    "java.util.Map",
                    "java.util.Map",
                    "java.util.Map"
                ]
            }
        ]
    },
    {
        "name": "io.swagger.v3.core.util.ObjectMapperFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "buildStrictGenericObjectMapper",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "io.swagger.v3.oas.annotations.ExternalDocumentation",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.Hidden",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.Operation",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.Parameter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.extensions.Extension",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.headers.Header",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.links.Link",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.links.LinkParameter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.ArraySchema",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.Content",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.Encoding",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.ExampleObject",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.Schema",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.media.SchemaProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.parameters.RequestBody",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.responses.ApiResponse",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.security.SecurityRequirement",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.servers.Server",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.swagger.v3.oas.annotations.servers.ServerVariable",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "io.undertow.websockets.jsr$ServerWebSocketContainer"
    },
    {
        "name": "io.undertow.websockets.jsr.ServerWebSocketContainer"
    },
    {
        "name": "io.vavr.control$Option"
    },
    {
        "name": "io.vavr.control$Try"
    },
    {
        "name": "io.vavr.control.Option"
    },
    {
        "name": "io.vavr.control.Try"
    },
    {
        "name": "java.beans.PropertyVetoException"
    },
    {
        "name": "java.io.Closeable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.io.FilePermission"
    },
    {
        "name": "java.io.ObjectInputStream",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.io.Serializable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.AutoCloseable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Boolean",
        "queryAllDeclaredMethods": true,
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Byte",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Character",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Class",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getModule",
                "parameterTypes": []
            },
            {
                "name": "isSealed",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.ClassLoader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.Cloneable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Comparable",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "java.lang.Deprecated",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Double",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Enum",
        "methods": [
            {
                "name": "valueOf",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.Float",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Integer",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Iterable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Long",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Module",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "getLayer",
                "parameterTypes": []
            },
            {
                "name": "isNamed",
                "parameterTypes": []
            }
        ],
        "queriedMethods": [
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "isExported",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.ModuleLayer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "boot",
                "parameterTypes": []
            },
            {
                "name": "configuration",
                "parameterTypes": []
            },
            {
                "name": "findLoader",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "parents",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.Number",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.Object",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.ObjectCustomizer"
    },
    {
        "name": "java.lang.Runtime",
        "methods": [
            {
                "name": "version",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.Runtime$Version",
        "methods": [
            {
                "name": "major",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.RuntimePermission"
    },
    {
        "name": "java.lang.Short",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.StackTraceElement",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.StackWalker",
        "methods": [
            {
                "name": "forEach",
                "parameterTypes": [
                    "java.util.function.Consumer"
                ]
            },
            {
                "name": "getInstance",
                "parameterTypes": [
                    "java.lang.StackWalker$Option"
                ]
            }
        ]
    },
    {
        "name": "java.lang.StackWalker$Option"
    },
    {
        "name": "java.lang.StackWalker$StackFrame",
        "methods": [
            {
                "name": "getDeclaringClass",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.String",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.System",
        "methods": [
            {
                "name": "getSecurityManager",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.Throwable",
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "getSuppressed",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.Void",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.WrongThreadException"
    },
    {
        "name": "java.lang.annotation.Annotation",
        "methods": [
            {
                "name": "annotationType",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.constant.Constable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.constant.ConstantDesc",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.invoke.MethodHandles",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "privateLookupIn",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.invoke.MethodHandles$Lookup"
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.MethodHandles$Lookup",
        "methods": [
            {
                "name": "defineClass",
                "parameterTypes": [
                    "byte[]"
                ]
            }
        ]
    },
    {
        "name": "java.lang.invoke.TypeDescriptor",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.invoke.TypeDescriptor$OfField",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.BufferPoolMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.ClassLoadingMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.CompilationMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.LockInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.ManagementFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "getRuntimeMXBean",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.management.ManagementPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.management.MemoryMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryManagerMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryPoolMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryUsage",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "from",
                "parameterTypes": [
                    "javax.management.openmbean.CompositeData"
                ]
            }
        ]
    },
    {
        "name": "java.lang.management.MonitorInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.PlatformLoggingMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.PlatformManagedObject",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.management.RuntimeMXBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getInputArguments",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.management.ThreadInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.module.Configuration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "modules",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.module.ModuleDescriptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "name",
                "parameterTypes": []
            },
            {
                "name": "packages",
                "parameterTypes": []
            },
            {
                "name": "rawVersion",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.module.ModuleReader",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "list",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.module.ModuleReference",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "descriptor",
                "parameterTypes": []
            },
            {
                "name": "location",
                "parameterTypes": []
            },
            {
                "name": "open",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.module.ResolvedModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "reference",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.reflect.AccessibleObject",
        "methods": [
            {
                "name": "canAccess",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "trySetAccessible",
                "parameterTypes": []
            }
        ],
        "queriedMethods": [
            {
                "name": "isAccessible",
                "parameterTypes": []
            },
            {
                "name": "setAccessible",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "java.lang.reflect.AnnotatedElement",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.reflect.GenericDeclaration",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.reflect.InaccessibleObjectException"
    },
    {
        "name": "java.lang.reflect.ParameterizedType",
        "methods": [
            {
                "name": "getActualTypeArguments",
                "parameterTypes": []
            },
            {
                "name": "getRawType",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.reflect.Proxy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.lang.reflect.Type",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.reflect.TypeVariable",
        "methods": [
            {
                "name": "getBounds",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.lang.reflect.WildcardType",
        "methods": [
            {
                "name": "getLowerBounds",
                "parameterTypes": []
            },
            {
                "name": "getUpperBounds",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.math.BigDecimal"
    },
    {
        "name": "java.math.BigInteger"
    },
    {
        "name": "java.net.NetPermission"
    },
    {
        "name": "java.net.SocketPermission"
    },
    {
        "name": "java.net.URLClassLoader",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.net.URLConnection",
        "queriedMethods": [
            {
                "name": "setDefaultUseCaches",
                "parameterTypes": [
                    "java.lang.String",
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "java.net.URLPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.net.UnixDomainSocketAddress",
        "queriedMethods": [
            {
                "name": "of",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.nio.channels.ServerSocketChannel",
        "queriedMethods": [
            {
                "name": "open",
                "parameterTypes": [
                    "java.net.ProtocolFamily"
                ]
            }
        ]
    },
    {
        "name": "java.nio.channels.SocketChannel",
        "queriedMethods": [
            {
                "name": "open",
                "parameterTypes": [
                    "java.net.ProtocolFamily"
                ]
            }
        ]
    },
    {
        "name": "java.security.AccessController",
        "methods": [
            {
                "name": "doPrivileged",
                "parameterTypes": [
                    "java.security.PrivilegedAction"
                ]
            }
        ]
    },
    {
        "name": "java.security.AlgorithmParametersSpi"
    },
    {
        "name": "java.security.AllPermission"
    },
    {
        "name": "java.security.KeyStoreSpi"
    },
    {
        "name": "java.security.PrivilegedAction"
    },
    {
        "name": "java.security.SecureClassLoader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.security.SecureRandomParameters"
    },
    {
        "name": "java.security.SecurityPermission"
    },
    {
        "name": "java.sql.Connection",
        "methods": [
            {
                "name": "createClob",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.sql.Date"
    },
    {
        "name": "java.sql.Timestamp"
    },
    {
        "name": "java.sql.Wrapper",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.time.Duration"
    },
    {
        "name": "java.time.Instant"
    },
    {
        "name": "java.time.LocalDate"
    },
    {
        "name": "java.time.LocalDateTime"
    },
    {
        "name": "java.time.LocalTime"
    },
    {
        "name": "java.time.OffsetDateTime"
    },
    {
        "name": "java.time.OffsetTime"
    },
    {
        "name": "java.time.Period"
    },
    {
        "name": "java.time.ZonedDateTime"
    },
    {
        "name": "java.util.ArrayList",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.Date"
    },
    {
        "name": "java.util.Dictionary",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.EventListener",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.HashMap",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.Hashtable",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.LinkedHashSet",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.Map",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.Optional",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "get",
                "parameterTypes": []
            },
            {
                "name": "isPresent",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.Properties",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.PropertyPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.util.ServiceLoader",
        "methods": [
            {
                "name": "stream",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.ServiceLoader$Provider",
        "queriedMethods": [
            {
                "name": "type",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.concurrent.Executor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.concurrent.Flow$Publisher"
    },
    {
        "name": "java.util.concurrent.Flow.Publisher"
    },
    {
        "name": "java.util.concurrent.ThreadFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.function.Consumer"
    },
    {
        "name": "java.util.function.Supplier",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.jar.JarFile",
        "methods": [
            {
                "name": "runtimeVersion",
                "parameterTypes": []
            }
        ],
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.io.File",
                    "boolean",
                    "int",
                    "java.lang.Runtime$Version"
                ]
            },
            {
                "name": "isMultiRelease",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.logging.LogManager",
        "methods": [
            {
                "name": "getLoggingMXBean",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.logging.LoggingMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.util.logging.SimpleFormatter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.stream.AbstractPipeline",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.stream.BaseStream",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.stream.Collector"
    },
    {
        "name": "java.util.stream.Collectors",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "toList",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "java.util.stream.PipelineHelper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.stream.ReferencePipeline",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.stream.ReferencePipeline$Head",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "java.util.stream.Stream",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "collect",
                "parameterTypes": [
                    "java.util.stream.Collector"
                ]
            }
        ]
    },
    {
        "name": "javafx.beans.value.ObservableValue"
    },
    {
        "name": "javax.annotation.Nonnull",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "when",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.annotation.Nullable",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.annotation.PostConstruct",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.annotation.PreDestroy",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.annotation.meta.TypeQualifier",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "applicableTo",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.annotation.meta.TypeQualifierDefault",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.ejb$Asynchronous"
    },
    {
        "name": "javax.ejb$TransactionAttribute"
    },
    {
        "name": "javax.ejb.Asynchronous"
    },
    {
        "name": "javax.ejb.EJB"
    },
    {
        "name": "javax.ejb.TransactionAttribute"
    },
    {
        "name": "javax.enterprise.concurrent$ManagedExecutorService"
    },
    {
        "name": "javax.enterprise.concurrent$ManagedScheduledExecutorService"
    },
    {
        "name": "javax.enterprise.concurrent.ManagedExecutorService"
    },
    {
        "name": "javax.enterprise.concurrent.ManagedScheduledExecutorService"
    },
    {
        "name": "javax.faces.context$FacesContext"
    },
    {
        "name": "javax.faces.context.FacesContext"
    },
    {
        "name": "javax.inject.Provider"
    },
    {
        "name": "javax.inject.Qualifier"
    },
    {
        "name": "javax.json.bind$Jsonb"
    },
    {
        "name": "javax.json.bind.Jsonb"
    },
    {
        "name": "javax.management.MBeanOperationInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.management.MBeanServerBuilder",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.management.ObjectName"
    },
    {
        "name": "javax.management.openmbean.CompositeData"
    },
    {
        "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
        "name": "javax.management.openmbean.TabularData"
    },
    {
        "name": "javax.money$MonetaryAmount"
    },
    {
        "name": "javax.money.MonetaryAmount"
    },
    {
        "name": "javax.naming.InitialContext"
    },
    {
        "name": "javax.naming.Referenceable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.net.ssl.SSLEngine",
        "queriedMethods": [
            {
                "name": "getApplicationProtocol",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.net.ssl.SSLParameters",
        "queriedMethods": [
            {
                "name": "setApplicationProtocols",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "javax.persistence.AttributeConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.persistence.Column",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "updatable",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.Convert",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "converter",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.Converter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.Entity",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.EntityManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getDelegate",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.EntityManagerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "createEntityManager",
                "parameterTypes": []
            },
            {
                "name": "getCriteriaBuilder",
                "parameterTypes": []
            },
            {
                "name": "getMetamodel",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.Enumerated",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.ForeignKey",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.GeneratedValue",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "strategy",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.Id",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.Index",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.JoinColumn",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.ManyToOne",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "fetch",
                "parameterTypes": []
            },
            {
                "name": "optional",
                "parameterTypes": []
            },
            {
                "name": "targetEntity",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.OneToMany",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "fetch",
                "parameterTypes": []
            },
            {
                "name": "targetEntity",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.OneToOne",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "fetch",
                "parameterTypes": []
            },
            {
                "name": "mappedBy",
                "parameterTypes": []
            },
            {
                "name": "targetEntity",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.Persistence",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getPersistenceUtil",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.PersistenceContext",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "synchronization",
                "parameterTypes": []
            },
            {
                "name": "type",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.persistence.PersistenceProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.Table",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.persistence.UniqueConstraint",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.security.auth.x500.X500Principal",
        "fields": [
            {
                "name": "thisX500Name"
            }
        ],
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "sun.security.x509.X500Name"
                ]
            }
        ]
    },
    {
        "name": "javax.servlet.Filter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.servlet.GenericFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.servlet.GenericServlet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getInitParameter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getInitParameterNames",
                "parameterTypes": []
            },
            {
                "name": "getServletConfig",
                "parameterTypes": []
            },
            {
                "name": "getServletContext",
                "parameterTypes": []
            },
            {
                "name": "getServletInfo",
                "parameterTypes": []
            },
            {
                "name": "init",
                "parameterTypes": [
                    "javax.servlet.ServletConfig"
                ]
            },
            {
                "name": "log",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "log",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Throwable"
                ]
            }
        ]
    },
    {
        "name": "javax.servlet.MultipartConfigElement",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.servlet.Servlet",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.servlet.ServletConfig",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.servlet.http.HttpServlet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "service",
                "parameterTypes": [
                    "javax.servlet.ServletRequest",
                    "javax.servlet.ServletResponse"
                ]
            }
        ]
    },
    {
        "name": "javax.servlet.http.HttpServletRequest",
        "queriedMethods": [
            {
                "name": "getHttpServletMapping",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.servlet.http.PushBuilder"
    },
    {
        "name": "javax.smartcardio.CardPermission"
    },
    {
        "name": "javax.sql.CommonDataSource",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.sql.DataSource",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.transaction.Transactional"
    },
    {
        "name": "javax.validation.Constraint",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "validatedBy",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.validation.ConstraintViolation"
    },
    {
        "name": "javax.validation.Validator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.validation.ValidatorFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.validation.bootstrap.GenericBootstrap"
    },
    {
        "name": "javax.validation.constraints.NotNull",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "groups",
                "parameterTypes": []
            },
            {
                "name": "message",
                "parameterTypes": []
            },
            {
                "name": "payload",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.bind.Binder"
    },
    {
        "name": "javax.xml.bind.annotation.XmlAccessType"
    },
    {
        "name": "javax.xml.bind.annotation.XmlAccessorType",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.bind.annotation.XmlElement",
        "methods": [
            {
                "name": "type",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.bind.annotation.XmlNs",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.xml.bind.annotation.XmlNsForm"
    },
    {
        "name": "javax.xml.bind.annotation.XmlRootElement",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.xml.bind.annotation.XmlSchema",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "javax.xml.bind.annotation.XmlSeeAlso",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.bind.annotation.XmlType",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "factoryClass",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
        "methods": [
            {
                "name": "type",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "javax.xml.ws.WebServiceRef"
    },
    {
        "name": "jdk.internal.loader.BuiltinClassLoader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.internal.module.ModuleReferenceImpl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.internal.module.SystemModuleFinders$SystemModuleReader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "jdk.management.jfr.ConfigurationInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.EventTypeInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.FlightRecorderMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "jdk.management.jfr.RecordingInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.SettingDescriptorInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "kotlin.Metadata"
    },
    {
        "name": "kotlin.coroutines.Continuation"
    },
    {
        "name": "kotlin.reflect.full$KClasses"
    },
    {
        "name": "kotlin.reflect.full.KClasses"
    },
    {
        "name": "kotlinx.coroutines.reactor$MonoKt"
    },
    {
        "name": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
        "name": "kotlinx.serialization.json$Json"
    },
    {
        "name": "kotlinx.serialization.json.Json"
    },
    {
        "name": "net.logstash.logback.encoder.LogstashEncoder",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setIncludeContext",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.AbstractLogbackAccessInstaller",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "customize",
                "parameterTypes": [
                    "org.springframework.boot.web.server.ConfigurableWebServerFactory"
                ]
            },
            {
                "name": "customize",
                "parameterTypes": [
                    "org.springframework.boot.web.server.WebServerFactory"
                ]
            }
        ]
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.LogbackAccessAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.LogbackAccessAutoConfiguration$ForSpringSecurity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.LogbackAccessAutoConfiguration$ForTomcat",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "net.rakugakibox.spring.boot.logback.access.LogbackAccessProperties",
                    "org.springframework.core.env.Environment",
                    "org.springframework.context.ApplicationEventPublisher"
                ]
            }
        ]
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.LogbackAccessProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.LogbackAccessSecurityAttributesSaveFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "net.rakugakibox.spring.boot.logback.access.tomcat.TomcatLogbackAccessInstaller",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "net.sf.jsqlparser.parser.JSqlParser"
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.AntClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.ClassGraphClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.CxfContainerClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.EquinoxClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.EquinoxContextFinderClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.FallbackClassLoaderHandler",
        "queriedMethods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.FelixClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.JBossClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.JPMSClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.OSGiDefaultClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.ParentLastDelegationOrderTestClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.PlexusClassWorldsClassRealmClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.QuarkusClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.SpringBootRestartClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.TomcatWebappClassLoaderBaseHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.URLClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.UnoOneJarClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.WeblogicClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.WebsphereLibertyClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.classloaderhandler.WebsphereTraditionalClassLoaderHandler",
        "methods": [
            {
                "name": "canHandle",
                "parameterTypes": [
                    "java.lang.Class",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "findClassLoaderOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClassLoaderOrder",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            },
            {
                "name": "findClasspathOrder",
                "parameterTypes": [
                    "java.lang.ClassLoader",
                    "nonapi.io.github.classgraph.classpath.ClasspathOrder",
                    "nonapi.io.github.classgraph.scanspec.ScanSpec",
                    "nonapi.io.github.classgraph.utils.LogNode"
                ]
            }
        ]
    },
    {
        "name": "nonapi.io.github.classgraph.scanspec.ScanSpec",
        "allDeclaredFields": true
    },
    {
        "name": "org.aopalliance.aop.Advice",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.aopalliance.intercept.Interceptor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.aopalliance.intercept.MethodInterceptor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.apache.catalina.util.CharsetMapper",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.coyote.AbstractProtocol",
        "methods": [
            {
                "name": "getAddress",
                "parameterTypes": []
            },
            {
                "name": "getLocalPort",
                "parameterTypes": []
            },
            {
                "name": "setPort",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setProperty",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.apache.coyote.http11.AbstractHttp11Protocol",
        "methods": [
            {
                "name": "isSSLEnabled",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.coyote.http11.Http11NioProtocol",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.apache.el.ExpressionFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.logging.log4j.LogManager"
    },
    {
        "name": "org.apache.logging.log4j.Logger"
    },
    {
        "name": "org.apache.logging.log4j.core.impl$Log4jContextFactory"
    },
    {
        "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
        "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.logging.log4j.message.ParameterizedMessageFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.logging.log4j.spi.AbstractLogger"
    },
    {
        "name": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
        "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.apache.logging.slf4j.MDCContextMap",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.logging.slf4j.SLF4JLoggerContextFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
        "name": "org.apache.tomcat.util.net.AbstractEndpoint",
        "methods": [
            {
                "name": "setBindOnInit",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.apache.tomcat.util.net.NioEndpoint",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.apache.tomcat.websocket.server.WsFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
    },
    {
        "name": "org.eclipse.collections.api.list$ImmutableList"
    },
    {
        "name": "org.eclipse.collections.api.list.ImmutableList"
    },
    {
        "name": "org.eclipse.core.runtime$FileLocator"
    },
    {
        "name": "org.eclipse.core.runtime.FileLocator"
    },
    {
        "name": "org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
    },
    {
        "name": "org.eclipse.jetty.websocket.server$WebSocketServerFactory"
    },
    {
        "name": "org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
    },
    {
        "name": "org.eclipse.jetty.websocket.server.WebSocketServerFactory"
    },
    {
        "name": "org.flywaydb.core.Flyway",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.flywaydb.core.internal.logging.slf4j.Slf4jLogCreator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.glassfish.tyrus.servlet$TyrusHttpUpgradeHandler"
    },
    {
        "name": "org.glassfish.tyrus.servlet.TyrusHttpUpgradeHandler"
    },
    {
        "name": "org.graalvm.nativeimage.ImageInfo",
        "methods": [
            {
                "name": "inImageCode",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.Driver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.engine.Constants",
        "fields": [
            {
                "name": "BUILD_ID"
            },
            {
                "name": "VERSION_MAJOR"
            },
            {
                "name": "VERSION_MINOR"
            }
        ]
    },
    {
        "name": "org.h2.engine.Engine",
        "methods": [
            {
                "name": "getInstance",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.jdbc.JdbcClob"
    },
    {
        "name": "org.h2.jdbc.JdbcLob",
        "methods": [
            {
                "name": "free",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.mvstore.db.MVTableEngine",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathAsync",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathDisk",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathMem",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathMemLZF",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathNio",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathNioMapped",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathNioMem",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathNioMemLZF",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathRetryOnInterrupt",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathSplit",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.store.fs.FilePathZip",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.h2.upgrade.v1_1.Driver"
    },
    {
        "name": "org.hibernate.Session",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "createQuery",
                "parameterTypes": [
                    "javax.persistence.criteria.CriteriaQuery"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.SessionFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "close",
                "parameterTypes": []
            },
            {
                "name": "getTypeHelper",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.SharedSessionContract",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "close",
                "parameterTypes": []
            },
            {
                "name": "createQuery",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "isOpen",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.annotations.GenericGenerator",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.hibernate.annotations.LazyCollection",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.annotations.OnDelete",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "action",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.annotations.Parameter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.hibernate.annotations.common.util.impl.Log_$logger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.jboss.logging.Logger"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.annotations.common.util.impl.Log_$logger_en"
    },
    {
        "name": "org.hibernate.annotations.common.util.impl.Log_$logger_en_US"
    },
    {
        "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.boot.model.relational.ExportableProducer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.jboss.logging.Logger"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en"
    },
    {
        "name": "org.hibernate.bytecode.enhance.spi.interceptor.BytecodeInterceptorLogging_$logger_en_US"
    },
    {
        "name": "org.hibernate.bytecode.internal.none.BytecodeProviderImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.bytecode.internal.none.NoProxyFactoryFactory",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.cache.internal.DisabledCaching",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.cfg.beanvalidation.TypeSafeActivator",
        "methods": [
            {
                "name": "activate",
                "parameterTypes": [
                    "org.hibernate.cfg.beanvalidation.ActivationContext"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.dialect.H2Dialect",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setJndiService",
                "parameterTypes": [
                    "org.hibernate.engine.jndi.spi.JndiService"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.event.spi.EventType",
        "allDeclaredFields": true
    },
    {
        "name": "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.hql.internal.ast.HqlToken",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.CountNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.DotNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.FromClause",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.FromElement",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.IdentNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.InLogicOperatorNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.LiteralNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.Node",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.OrderByClause",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.ParameterNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.QueryNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.SelectClause",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.SqlFragment",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.hql.internal.ast.tree.SqlNode",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.id.Assigned",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.id.BulkInsertionCapableIdentifierGenerator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.id.Configurable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.id.IdentifierGenerator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.id.PersistentIdentifierGenerator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.id.enhanced.NoopOptimizer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class",
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.id.enhanced.SequenceStyleGenerator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.internal.CoreMessageLogger_$logger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.jboss.logging.Logger"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.internal.CoreMessageLogger_$logger_en"
    },
    {
        "name": "org.hibernate.internal.CoreMessageLogger_$logger_en_US"
    },
    {
        "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.jboss.logging.Logger"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en"
    },
    {
        "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger_en_US"
    },
    {
        "name": "org.hibernate.jmx.internal.DisabledJmxServiceImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.jpa.HibernateEntityManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.jpa.HibernateEntityManagerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getMetamodel",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.metamodel.internal.MetamodelImpl"
    },
    {
        "name": "org.hibernate.persister.collection.BasicCollectionPersister",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.hibernate.mapping.Collection",
                    "org.hibernate.cache.spi.access.CollectionDataAccess",
                    "org.hibernate.persister.spi.PersisterCreationContext"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.hibernate.mapping.PersistentClass",
                    "org.hibernate.cache.spi.access.EntityDataAccess",
                    "org.hibernate.cache.spi.access.NaturalIdDataAccess",
                    "org.hibernate.persister.spi.PersisterCreationContext"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.proxy.HibernateProxy"
    },
    {
        "name": "org.hibernate.query.QueryProducer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "createNamedQuery",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
    },
    {
        "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.stat.internal.StatisticsImpl",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.hibernate.tuple.entity.PojoEntityTuplizer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.hibernate.tuple.entity.EntityMetamodel",
                    "org.hibernate.mapping.PersistentClass"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.type.EnumType",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
        "methods": [
            {
                "name": "externalClassLoader",
                "parameterTypes": [
                    "java.lang.ClassLoader"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
        "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.jboss.logging.Logger"
                ]
            }
        ]
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
        "fields": [
            {
                "name": "INSTANCE"
            }
        ]
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
        "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
    },
    {
        "name": "org.jboss.logmanager.LogManager"
    },
    {
        "name": "org.jmolecules.ddd.annotation$Identity"
    },
    {
        "name": "org.jmolecules.ddd.annotation.Identity"
    },
    {
        "name": "org.jmolecules.ddd.types$Association"
    },
    {
        "name": "org.jmolecules.ddd.types.Association"
    },
    {
        "name": "org.joda.time.ReadableInstant"
    },
    {
        "name": "org.joda.time.YearMonth"
    },
    {
        "name": "org.jsoup.Jsoup"
    },
    {
        "name": "org.locationtech.jts.geom.Geometry"
    },
    {
        "name": "org.nzbhydra.DevEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.DevEndpoint$$EnhancerBySpringCGLIB$$d00143b1",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.InstanceCounter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "downloadInstanceCounter",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.NzbHydra",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "addTrayIconIfApplicable",
                "parameterTypes": []
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "main",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "startupDone",
                "parameterTypes": [
                    "org.springframework.boot.context.event.ApplicationReadyEvent"
                ]
            },
            {
                "name": "warnIfSettingsOverwritten",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.api.CapsGenerator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.CategoryConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.ExternalApi",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.MockSearch",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.NewznabJsonTransformer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.NewznabXmlTransformer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.api.stats.ExternalApiStats",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.AsyncSupportFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.AuthAndAccessEventHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.AuthWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.HydraAnonymousAuthenticationFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.auth.HydraEmbeddedServletContainer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.HydraGlobalMethodSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "methodSecurityMetadataSource",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.auth.HydraUserDetailsManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.auth.LoginAndAccessAttemptService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.PersistentLoginsEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "queriedMethods": [
            {
                "name": "getSeries",
                "parameterTypes": []
            },
            {
                "name": "setSeries",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.auth.PersistentLoginsEntity_"
    },
    {
        "name": "org.nzbhydra.auth.SecurityConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.auth.UserInfosProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.backup.BackupAndRestore",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "init",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.backup.BackupAndRestore$$EnhancerBySpringCGLIB$$7dabb742",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.backup.BackupTask",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.backup.BackupWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.backup.BackupWeb$$EnhancerBySpringCGLIB$$c4ae075",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.BaseConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAuth",
                "parameterTypes": []
            },
            {
                "name": "getCategoriesConfig",
                "parameterTypes": []
            },
            {
                "name": "getDownloading",
                "parameterTypes": []
            },
            {
                "name": "getGenericStorage",
                "parameterTypes": []
            },
            {
                "name": "getIndexers",
                "parameterTypes": []
            },
            {
                "name": "getMain",
                "parameterTypes": []
            },
            {
                "name": "getNotificationConfig",
                "parameterTypes": []
            },
            {
                "name": "getSearching",
                "parameterTypes": []
            },
            {
                "name": "init",
                "parameterTypes": []
            },
            {
                "name": "onShutdown",
                "parameterTypes": [
                    "org.nzbhydra.ShutdownEvent"
                ]
            },
            {
                "name": "setAuth",
                "parameterTypes": [
                    "org.nzbhydra.config.auth.AuthConfig"
                ]
            },
            {
                "name": "setCategoriesConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.category.CategoriesConfig"
                ]
            },
            {
                "name": "setDownloading",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloadingConfig"
                ]
            },
            {
                "name": "setGenericStorage",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setIndexers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setMain",
                "parameterTypes": [
                    "org.nzbhydra.config.MainConfig"
                ]
            },
            {
                "name": "setNotificationConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.NotificationConfig"
                ]
            },
            {
                "name": "setSearching",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchingConfig"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "initializeNewConfig",
                "parameterTypes": []
            },
            {
                "name": "prepareForSaving",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            },
            {
                "name": "updateAfterLoading",
                "parameterTypes": []
            },
            {
                "name": "validateConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.BaseConfig",
                    "java.lang.Object",
                    "org.nzbhydra.config.BaseConfig"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.ConfigProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.config.ConfigSpringConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.config.ConfigWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.config.FileSystemBrowser",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.config.HistoryUserInfoType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.LoggingConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getConsolelevel",
                "parameterTypes": []
            },
            {
                "name": "getHistoryUserInfoType",
                "parameterTypes": []
            },
            {
                "name": "getLogMaxHistory",
                "parameterTypes": []
            },
            {
                "name": "getLogfilelevel",
                "parameterTypes": []
            },
            {
                "name": "getMarkersToLog",
                "parameterTypes": []
            },
            {
                "name": "isLogGc",
                "parameterTypes": []
            },
            {
                "name": "isLogIpAddresses",
                "parameterTypes": []
            },
            {
                "name": "isLogUsername",
                "parameterTypes": []
            },
            {
                "name": "isMapIpToHost",
                "parameterTypes": []
            },
            {
                "name": "setConsolelevel",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setHistoryUserInfoType",
                "parameterTypes": [
                    "org.nzbhydra.config.HistoryUserInfoType"
                ]
            },
            {
                "name": "setLogGc",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLogIpAddresses",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLogMaxHistory",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setLogUsername",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLogfilelevel",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setMapIpToHost",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMarkersToLog",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.MainConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getApiKey",
                "parameterTypes": []
            },
            {
                "name": "getBackupEveryXDays",
                "parameterTypes": []
            },
            {
                "name": "getBackupFolder",
                "parameterTypes": []
            },
            {
                "name": "getConfigVersion",
                "parameterTypes": []
            },
            {
                "name": "getDatabaseCompactTime",
                "parameterTypes": []
            },
            {
                "name": "getDatabaseRetentionTime",
                "parameterTypes": []
            },
            {
                "name": "getDatabaseWriteDelay",
                "parameterTypes": []
            },
            {
                "name": "getDeleteBackupsAfterWeeks",
                "parameterTypes": []
            },
            {
                "name": "getDereferer",
                "parameterTypes": []
            },
            {
                "name": "getHost",
                "parameterTypes": []
            },
            {
                "name": "getKeepHistoryForWeeks",
                "parameterTypes": []
            },
            {
                "name": "getKeepStatsForWeeks",
                "parameterTypes": []
            },
            {
                "name": "getLogging",
                "parameterTypes": []
            },
            {
                "name": "getPort",
                "parameterTypes": []
            },
            {
                "name": "getProxyHost",
                "parameterTypes": []
            },
            {
                "name": "getProxyIgnoreDomains",
                "parameterTypes": []
            },
            {
                "name": "getProxyPassword",
                "parameterTypes": []
            },
            {
                "name": "getProxyPort",
                "parameterTypes": []
            },
            {
                "name": "getProxyType",
                "parameterTypes": []
            },
            {
                "name": "getProxyUsername",
                "parameterTypes": []
            },
            {
                "name": "getRepositoryBase",
                "parameterTypes": []
            },
            {
                "name": "getSniDisabledFor",
                "parameterTypes": []
            },
            {
                "name": "getSslKeyStore",
                "parameterTypes": []
            },
            {
                "name": "getSslKeyStorePassword",
                "parameterTypes": []
            },
            {
                "name": "getTheme",
                "parameterTypes": []
            },
            {
                "name": "getUrlBase",
                "parameterTypes": []
            },
            {
                "name": "getVerifySslDisabledFor",
                "parameterTypes": []
            },
            {
                "name": "getXmx",
                "parameterTypes": []
            },
            {
                "name": "isBackupBeforeUpdate",
                "parameterTypes": []
            },
            {
                "name": "isDisableSslLocally",
                "parameterTypes": []
            },
            {
                "name": "isInstanceCounterDownloaded",
                "parameterTypes": []
            },
            {
                "name": "isKeepHistory",
                "parameterTypes": []
            },
            {
                "name": "isProxyIgnoreLocal",
                "parameterTypes": []
            },
            {
                "name": "isShowNews",
                "parameterTypes": []
            },
            {
                "name": "isShowUpdateBannerOnDocker",
                "parameterTypes": []
            },
            {
                "name": "isShowWhatsNewBanner",
                "parameterTypes": []
            },
            {
                "name": "isShutdownForRestart",
                "parameterTypes": []
            },
            {
                "name": "isSsl",
                "parameterTypes": []
            },
            {
                "name": "isStartupBrowser",
                "parameterTypes": []
            },
            {
                "name": "isUpdateAutomatically",
                "parameterTypes": []
            },
            {
                "name": "isUpdateCheckEnabled",
                "parameterTypes": []
            },
            {
                "name": "isUpdateToPrereleases",
                "parameterTypes": []
            },
            {
                "name": "isUseCsrf",
                "parameterTypes": []
            },
            {
                "name": "isVerifySsl",
                "parameterTypes": []
            },
            {
                "name": "isWelcomeShown",
                "parameterTypes": []
            },
            {
                "name": "setApiKey",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setBackupBeforeUpdate",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setBackupEveryXDays",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setBackupFolder",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setConfigVersion",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setDatabaseCompactTime",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setDatabaseRetentionTime",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setDatabaseWriteDelay",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setDeleteBackupsAfterWeeks",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setDereferer",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDisableSslLocally",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setHost",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setInstanceCounterDownloaded",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setKeepHistory",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setKeepHistoryForWeeks",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setKeepStatsForWeeks",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setLogging",
                "parameterTypes": [
                    "org.nzbhydra.config.LoggingConfig"
                ]
            },
            {
                "name": "setPort",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setProxyHost",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setProxyIgnoreDomains",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setProxyIgnoreLocal",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setProxyPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setProxyPort",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setProxyType",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.ProxyType"
                ]
            },
            {
                "name": "setProxyUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRepositoryBase",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setShowNews",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShowUpdateBannerOnDocker",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShowWhatsNewBanner",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShutdownForRestart",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setSniDisabledFor",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSsl",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setSslKeyStore",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSslKeyStorePassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setStartupBrowser",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setTheme",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUpdateAutomatically",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUpdateCheckEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUpdateToPrereleases",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUrlBase",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUseCsrf",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setVerifySsl",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setVerifySslDisabledFor",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setWelcomeShown",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setXmx",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.NotificationConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAppriseApiUrl",
                "parameterTypes": []
            },
            {
                "name": "getAppriseCliPath",
                "parameterTypes": []
            },
            {
                "name": "getAppriseType",
                "parameterTypes": []
            },
            {
                "name": "getDisplayNotificationsMax",
                "parameterTypes": []
            },
            {
                "name": "getEntries",
                "parameterTypes": []
            },
            {
                "name": "getFilterOuts",
                "parameterTypes": []
            },
            {
                "name": "isDisplayNotifications",
                "parameterTypes": []
            },
            {
                "name": "setAppriseApiUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setAppriseCliPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setAppriseType",
                "parameterTypes": [
                    "org.nzbhydra.config.NotificationConfig$AppriseType"
                ]
            },
            {
                "name": "setDisplayNotifications",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setDisplayNotificationsMax",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setEntries",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setFilterOuts",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.NotificationConfig$AppriseType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.NotificationConfigEntry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAppriseUrls",
                "parameterTypes": []
            },
            {
                "name": "getBodyTemplate",
                "parameterTypes": []
            },
            {
                "name": "getEventType",
                "parameterTypes": []
            },
            {
                "name": "getMessageType",
                "parameterTypes": []
            },
            {
                "name": "getTitleTemplate",
                "parameterTypes": []
            },
            {
                "name": "setAppriseUrls",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setBodyTemplate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setEventType",
                "parameterTypes": [
                    "org.nzbhydra.notifications.NotificationEventType"
                ]
            },
            {
                "name": "setMessageType",
                "parameterTypes": [
                    "org.nzbhydra.config.NotificationConfigEntry$MessageType"
                ]
            },
            {
                "name": "setTitleTemplate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.NotificationConfigEntry$MessageType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.RestartRequired",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.SearchSourceRestriction",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.SearchingConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAlwaysConvertIds",
                "parameterTypes": []
            },
            {
                "name": "getApplyRestrictions",
                "parameterTypes": []
            },
            {
                "name": "getCoverSize",
                "parameterTypes": []
            },
            {
                "name": "getCustomMappings",
                "parameterTypes": []
            },
            {
                "name": "getCustomQuickFilterButtons",
                "parameterTypes": []
            },
            {
                "name": "getDuplicateAgeThreshold",
                "parameterTypes": []
            },
            {
                "name": "getDuplicateSizeThresholdInPercent",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenGroups",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenPosters",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenRegex",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenWords",
                "parameterTypes": []
            },
            {
                "name": "getGenerateQueries",
                "parameterTypes": []
            },
            {
                "name": "getGenerateQueriesFormat",
                "parameterTypes": []
            },
            {
                "name": "getGlobalCacheTimeMinutes",
                "parameterTypes": []
            },
            {
                "name": "getIdFallbackToQueryGeneration",
                "parameterTypes": []
            },
            {
                "name": "getKeepSearchResultsForDays",
                "parameterTypes": []
            },
            {
                "name": "getLanguage",
                "parameterTypes": []
            },
            {
                "name": "getLanguagesToKeep",
                "parameterTypes": []
            },
            {
                "name": "getLoadLimitInternal",
                "parameterTypes": []
            },
            {
                "name": "getMaxAge",
                "parameterTypes": []
            },
            {
                "name": "getMinSeeders",
                "parameterTypes": []
            },
            {
                "name": "getPreselectQuickFilterButtons",
                "parameterTypes": []
            },
            {
                "name": "getRemoveTrailing",
                "parameterTypes": []
            },
            {
                "name": "getRequiredRegex",
                "parameterTypes": []
            },
            {
                "name": "getRequiredWords",
                "parameterTypes": []
            },
            {
                "name": "getTimeout",
                "parameterTypes": []
            },
            {
                "name": "getUserAgent",
                "parameterTypes": []
            },
            {
                "name": "getUserAgents",
                "parameterTypes": []
            },
            {
                "name": "isAlwaysShowQuickFilterButtons",
                "parameterTypes": []
            },
            {
                "name": "isIgnoreLoadLimitingForInternalSearches",
                "parameterTypes": []
            },
            {
                "name": "isIgnorePassworded",
                "parameterTypes": []
            },
            {
                "name": "isIgnoreTemporarilyDisabled",
                "parameterTypes": []
            },
            {
                "name": "isLoadAllCachedOnInternal",
                "parameterTypes": []
            },
            {
                "name": "isSendTorznabCategories",
                "parameterTypes": []
            },
            {
                "name": "isShowQuickFilterButtons",
                "parameterTypes": []
            },
            {
                "name": "isTransformNewznabCategories",
                "parameterTypes": []
            },
            {
                "name": "isUseOriginalCategories",
                "parameterTypes": []
            },
            {
                "name": "isWrapApiErrors",
                "parameterTypes": []
            },
            {
                "name": "setAlwaysConvertIds",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setAlwaysShowQuickFilterButtons",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setApplyRestrictions",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setCoverSize",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setCustomMappings",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setCustomQuickFilterButtons",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setDuplicateAgeThreshold",
                "parameterTypes": [
                    "float"
                ]
            },
            {
                "name": "setDuplicateSizeThresholdInPercent",
                "parameterTypes": [
                    "float"
                ]
            },
            {
                "name": "setForbiddenGroups",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setForbiddenPosters",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setForbiddenRegex",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setForbiddenWords",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setGenerateQueries",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setGenerateQueriesFormat",
                "parameterTypes": [
                    "org.nzbhydra.indexers.QueryGenerator$QueryFormat"
                ]
            },
            {
                "name": "setGlobalCacheTimeMinutes",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setIdFallbackToQueryGeneration",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setIgnoreLoadLimitingForInternalSearches",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setIgnorePassworded",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setIgnoreTemporarilyDisabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setKeepSearchResultsForDays",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setLanguage",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLanguagesToKeep",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setLoadAllCachedOnInternal",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLoadLimitInternal",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setMaxAge",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setMinSeeders",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setPreselectQuickFilterButtons",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setRemoveTrailing",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setRequiredRegex",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRequiredWords",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSendTorznabCategories",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShowQuickFilterButtons",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setTimeout",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setTransformNewznabCategories",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUseOriginalCategories",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUserAgent",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUserAgents",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setWrapApiErrors",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.ValidatingConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.auth.AuthConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAuthHeader",
                "parameterTypes": []
            },
            {
                "name": "getAuthHeaderIpRanges",
                "parameterTypes": []
            },
            {
                "name": "getAuthType",
                "parameterTypes": []
            },
            {
                "name": "getRememberMeValidityDays",
                "parameterTypes": []
            },
            {
                "name": "getUsers",
                "parameterTypes": []
            },
            {
                "name": "isAllowApiStats",
                "parameterTypes": []
            },
            {
                "name": "isRememberUsers",
                "parameterTypes": []
            },
            {
                "name": "isRestrictAdmin",
                "parameterTypes": []
            },
            {
                "name": "isRestrictDetailsDl",
                "parameterTypes": []
            },
            {
                "name": "isRestrictIndexerSelection",
                "parameterTypes": []
            },
            {
                "name": "isRestrictSearch",
                "parameterTypes": []
            },
            {
                "name": "isRestrictStats",
                "parameterTypes": []
            },
            {
                "name": "setAllowApiStats",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setAuthHeader",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setAuthHeaderIpRanges",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setAuthType",
                "parameterTypes": [
                    "org.nzbhydra.config.auth.AuthType"
                ]
            },
            {
                "name": "setRememberMeValidityDays",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setRememberUsers",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRestrictAdmin",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRestrictDetailsDl",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRestrictIndexerSelection",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRestrictSearch",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRestrictStats",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUsers",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.auth.AuthType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.auth.UserAuthConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getPassword",
                "parameterTypes": []
            },
            {
                "name": "getUsername",
                "parameterTypes": []
            },
            {
                "name": "isMaySeeAdmin",
                "parameterTypes": []
            },
            {
                "name": "isMaySeeDetailsDl",
                "parameterTypes": []
            },
            {
                "name": "isMaySeeStats",
                "parameterTypes": []
            },
            {
                "name": "isShowIndexerSelection",
                "parameterTypes": []
            },
            {
                "name": "setMaySeeAdmin",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMaySeeDetailsDl",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMaySeeStats",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setShowIndexerSelection",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.category.CategoriesConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getCategories",
                "parameterTypes": []
            },
            {
                "name": "getDefaultCategory",
                "parameterTypes": []
            },
            {
                "name": "isEnableCategorySizes",
                "parameterTypes": []
            },
            {
                "name": "setCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setDefaultCategory",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setEnableCategorySizes",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.category.Category",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getApplyRestrictionsType",
                "parameterTypes": []
            },
            {
                "name": "getDescription",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenRegex",
                "parameterTypes": []
            },
            {
                "name": "getForbiddenWords",
                "parameterTypes": []
            },
            {
                "name": "getIgnoreResultsFrom",
                "parameterTypes": []
            },
            {
                "name": "getMaxSizePreset",
                "parameterTypes": []
            },
            {
                "name": "getMinSizePreset",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getNewznabCategories",
                "parameterTypes": []
            },
            {
                "name": "getRequiredRegex",
                "parameterTypes": []
            },
            {
                "name": "getRequiredWords",
                "parameterTypes": []
            },
            {
                "name": "getSearchType",
                "parameterTypes": []
            },
            {
                "name": "getSubtype",
                "parameterTypes": []
            },
            {
                "name": "isApplySizeLimitsToApi",
                "parameterTypes": []
            },
            {
                "name": "isMayBeSelected",
                "parameterTypes": []
            },
            {
                "name": "isPreselect",
                "parameterTypes": []
            },
            {
                "name": "setApplyRestrictionsType",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setApplySizeLimitsToApi",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setDescription",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setForbiddenRegex",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setForbiddenWords",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setIgnoreResultsFrom",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setMaxSizePreset",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setMayBeSelected",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMinSizePreset",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setNewznabCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setPreselect",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRequiredRegex",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRequiredWords",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSearchType",
                "parameterTypes": [
                    "org.nzbhydra.searching.dtoseventsenums.SearchType"
                ]
            },
            {
                "name": "setSubtype",
                "parameterTypes": [
                    "org.nzbhydra.config.category.Category$Subtype"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.category.Category$Subtype",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.category.NewznabCategoriesDeserializer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.category.NewznabCategoriesSerializer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.downloading.DownloadType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.downloading.DownloaderConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getApiKey",
                "parameterTypes": []
            },
            {
                "name": "getDefaultCategory",
                "parameterTypes": []
            },
            {
                "name": "getDownloadType",
                "parameterTypes": []
            },
            {
                "name": "getDownloaderType",
                "parameterTypes": []
            },
            {
                "name": "getIconCssClass",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getNzbAddingType",
                "parameterTypes": []
            },
            {
                "name": "getPassword",
                "parameterTypes": []
            },
            {
                "name": "getUrl",
                "parameterTypes": []
            },
            {
                "name": "getUsername",
                "parameterTypes": []
            },
            {
                "name": "isAddPaused",
                "parameterTypes": []
            },
            {
                "name": "isEnabled",
                "parameterTypes": []
            },
            {
                "name": "setAddPaused",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setApiKey",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDefaultCategory",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDownloadType",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloadType"
                ]
            },
            {
                "name": "setDownloaderType",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloaderType"
                ]
            },
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setIconCssClass",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setNzbAddingType",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.NzbAddingType"
                ]
            },
            {
                "name": "setPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.downloading.DownloaderType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.downloading.DownloadingConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getDownloaders",
                "parameterTypes": []
            },
            {
                "name": "getExternalUrl",
                "parameterTypes": []
            },
            {
                "name": "getFallbackForFailed",
                "parameterTypes": []
            },
            {
                "name": "getNzbAccessType",
                "parameterTypes": []
            },
            {
                "name": "getPrimaryDownloader",
                "parameterTypes": []
            },
            {
                "name": "getSaveNzbsTo",
                "parameterTypes": []
            },
            {
                "name": "getSaveTorrentsTo",
                "parameterTypes": []
            },
            {
                "name": "isSendMagnetLinks",
                "parameterTypes": []
            },
            {
                "name": "isShowDownloaderStatus",
                "parameterTypes": []
            },
            {
                "name": "isUpdateStatuses",
                "parameterTypes": []
            },
            {
                "name": "setDownloaders",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setExternalUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setFallbackForFailed",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setNzbAccessType",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.FileDownloadAccessType"
                ]
            },
            {
                "name": "setPrimaryDownloader",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSaveNzbsTo",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSaveTorrentsTo",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSendMagnetLinks",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShowDownloaderStatus",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUpdateStatuses",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.downloading.FileDownloadAccessType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.downloading.NzbAddingType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.downloading.ProxyType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getAnime",
                "parameterTypes": []
            },
            {
                "name": "getAudiobook",
                "parameterTypes": []
            },
            {
                "name": "getCategories",
                "parameterTypes": []
            },
            {
                "name": "getComic",
                "parameterTypes": []
            },
            {
                "name": "getEbook",
                "parameterTypes": []
            },
            {
                "name": "getMagazine",
                "parameterTypes": []
            },
            {
                "name": "setAnime",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setAudiobook",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setComic",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setEbook",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setMagazine",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$MainCategory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getId",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getSubCategories",
                "parameterTypes": []
            },
            {
                "name": "setId",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSubCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.indexer.IndexerCategoryConfig$SubCategory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getId",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "setId",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.indexer.IndexerConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "getApiKey",
                "parameterTypes": []
            },
            {
                "name": "getApiPath",
                "parameterTypes": []
            },
            {
                "name": "getBackend",
                "parameterTypes": []
            },
            {
                "name": "getCategoryMapping",
                "parameterTypes": []
            },
            {
                "name": "getColor",
                "parameterTypes": []
            },
            {
                "name": "getCustomParameters",
                "parameterTypes": []
            },
            {
                "name": "getDisabledAt",
                "parameterTypes": []
            },
            {
                "name": "getDisabledLevel",
                "parameterTypes": []
            },
            {
                "name": "getDisabledUntil",
                "parameterTypes": []
            },
            {
                "name": "getDownloadLimit",
                "parameterTypes": []
            },
            {
                "name": "getEnabledCategories",
                "parameterTypes": []
            },
            {
                "name": "getEnabledForSearchSource",
                "parameterTypes": []
            },
            {
                "name": "getGeneralMinSize",
                "parameterTypes": []
            },
            {
                "name": "getHitLimit",
                "parameterTypes": []
            },
            {
                "name": "getHitLimitResetTime",
                "parameterTypes": []
            },
            {
                "name": "getHost",
                "parameterTypes": []
            },
            {
                "name": "getLastError",
                "parameterTypes": []
            },
            {
                "name": "getLoadLimitOnRandom",
                "parameterTypes": []
            },
            {
                "name": "getMinSeeders",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getPassword",
                "parameterTypes": []
            },
            {
                "name": "getSchedule",
                "parameterTypes": []
            },
            {
                "name": "getScore",
                "parameterTypes": []
            },
            {
                "name": "getSearchModuleType",
                "parameterTypes": []
            },
            {
                "name": "getState",
                "parameterTypes": []
            },
            {
                "name": "getSupportedSearchIds",
                "parameterTypes": []
            },
            {
                "name": "getSupportedSearchTypes",
                "parameterTypes": []
            },
            {
                "name": "getTimeout",
                "parameterTypes": []
            },
            {
                "name": "getUserAgent",
                "parameterTypes": []
            },
            {
                "name": "getUsername",
                "parameterTypes": []
            },
            {
                "name": "getVipExpirationDate",
                "parameterTypes": []
            },
            {
                "name": "isAllCapsChecked",
                "parameterTypes": []
            },
            {
                "name": "isConfigComplete",
                "parameterTypes": []
            },
            {
                "name": "isPreselect",
                "parameterTypes": []
            },
            {
                "name": "isShowOnSearch",
                "parameterTypes": []
            },
            {
                "name": "setAllCapsChecked",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setApiKey",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setApiPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setBackend",
                "parameterTypes": [
                    "org.nzbhydra.indexers.Indexer$BackendType"
                ]
            },
            {
                "name": "setCategoryMapping",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.IndexerCategoryConfig"
                ]
            },
            {
                "name": "setColor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setConfigComplete",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setCustomParameters",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setDisabledAt",
                "parameterTypes": [
                    "java.time.Instant"
                ]
            },
            {
                "name": "setDisabledLevel",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setDisabledUntil",
                "parameterTypes": [
                    "java.lang.Long"
                ]
            },
            {
                "name": "setDownloadLimit",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setEnabledCategories",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setEnabledForSearchSource",
                "parameterTypes": [
                    "org.nzbhydra.config.SearchSourceRestriction"
                ]
            },
            {
                "name": "setGeneralMinSize",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setHitLimit",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setHitLimitResetTime",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setHost",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLastError",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLoadLimitOnRandom",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setMinSeeders",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPreselect",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setSchedule",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setScore",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setSearchModuleType",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.SearchModuleType"
                ]
            },
            {
                "name": "setShowOnSearch",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setState",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.IndexerConfig$State"
                ]
            },
            {
                "name": "setSupportedSearchIds",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSupportedSearchTypes",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setTimeout",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setUserAgent",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setVipExpirationDate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.indexer.IndexerConfig$State",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.indexer.SearchModuleType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep003to004",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep004to005",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep005to006",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep006to007",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep007to008",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep008to009",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep009to010",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep010to011",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep011to012",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep012to013",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep013to014",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep014to015",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep015to016",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep016to017",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep017to018",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.config.migration.ConfigMigrationStep018to019",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.database.FlywayMigration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.database.FlywayMigration$1",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.database.migration.V2__MOVE_GENERIC_STORAGE",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.database.migration.V3__MOVE_GENERIC_STORAGE",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "logMetrics",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosProvider$$EnhancerBySpringCGLIB$$4627ef50",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.debuginfos.DebugInfosWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "checkQueueStatus",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$EnhancerBySpringCGLIB$$dfea5aa4",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$EnhancerBySpringCGLIB$$dfea5aa4$$FastClassBySpringCGLIB$$8cbbf973",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.DownloadStatusUpdater$$FastClassBySpringCGLIB$$2a878483",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadEntity_"
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.FileDownloadStatus"
    },
    {
        "name": "org.nzbhydra.downloading.FileHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.downloading.FileHandler$$EnhancerBySpringCGLIB$$cefbd921",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.IndexerSpecificDownloadExceptions",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.downloading.IndexerUniquenessScoreSaver$$EnhancerBySpringCGLIB$$74ad3fb5",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.Downloader",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "queriedMethods": [
            {
                "name": "addBySearchResultIds",
                "parameterTypes": [
                    "java.util.List",
                    "java.lang.String"
                ]
            },
            {
                "name": "checkForStatusUpdates",
                "parameterTypes": [
                    "java.util.List",
                    "org.nzbhydra.downloading.downloaders.Downloader$StatusCheckType"
                ]
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getUrl",
                "parameterTypes": []
            },
            {
                "name": "initialize",
                "parameterTypes": [
                    "org.nzbhydra.config.downloading.DownloaderConfig"
                ]
            },
            {
                "name": "isEnabled",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.Downloader$$FastClassBySpringCGLIB$$2d05c211",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderStatusRetrieval",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.DownloaderWebSocket",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.NzbGet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.NzbGet$$EnhancerBySpringCGLIB$$e0eb616f",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.NzbGet$$EnhancerBySpringCGLIB$$e0eb616f$$FastClassBySpringCGLIB$$7d9070b0",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.NzbGet$$FastClassBySpringCGLIB$$7eb6a83c",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.Sabnzbd",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.Sabnzbd$$EnhancerBySpringCGLIB$$461f7d8d",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.downloaders.Sabnzbd$$EnhancerBySpringCGLIB$$461f7d8d$$FastClassBySpringCGLIB$$8d6ca143",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.nzbs.NzbHandlingWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.downloading.torrents.TorrentFileHandler$$EnhancerBySpringCGLIB$$8523dc72",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.downloading.torrents.TorrentHandlingWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.externaltools.ExternalTools",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.externaltools.ExternalToolsWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.fortests.DebugWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.genericstorage.GenericStorage",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.genericstorage.GenericStorageWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.historystats.History",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.historystats.HistoryWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.historystats.Stats",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.historystats.Stats$$EnhancerBySpringCGLIB$$f6313d97",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.historystats.StatsWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.Anizb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.Anizb$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.Binsearch",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.Binsearch$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.DevIndexer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.DevIndexer$DevIndexerHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.DogNzb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.DogNzb$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.Indexer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "cleanUpTitle",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "getConfig",
                "parameterTypes": []
            },
            {
                "name": "getIndexerEntity",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "handleNewConfig",
                "parameterTypes": [
                    "org.nzbhydra.config.ConfigChangedEvent"
                ]
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "initialize",
                "parameterTypes": [
                    "org.nzbhydra.config.indexer.IndexerConfig",
                    "org.nzbhydra.indexers.IndexerEntity"
                ]
            },
            {
                "name": "search",
                "parameterTypes": [
                    "org.nzbhydra.searching.searchrequests.SearchRequest",
                    "int",
                    "java.lang.Integer"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            },
            {
                "name": "tryParseDate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.Indexer$BackendType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerAccessResult"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShortCustomizer"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShortRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntityShort_"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessEntity_"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerApiAccessType"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.IndexerEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerEntity_"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerHandlingStrategy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerSearchEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.IndexerSearchEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerSearchEntity_"
    },
    {
        "name": "org.nzbhydra.indexers.IndexerSearchRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.IndexerStatusesCleanupTask",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.nzbhydra.config.ConfigProvider"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.IndexerWebAccess",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.Newznab",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.Newznab$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.NzbGeek",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.NzbGeek$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.NzbIndex",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.NzbIndex$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.QueryGenerator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.QueryGenerator$QueryFormat",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.capscheck.IndexerChecker",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.capscheck.IndexerWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.capscheck.JacketConfigRetriever",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.capscheck.SimpleConnectionChecker",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerLimit",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerLimitCustomizer"
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerLimitRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerLimit_"
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerStatusesAndLimits",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.status.IndexerStatusesWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.indexers.torznab.Torznab",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.indexers.torznab.Torznab$NewznabHandlingStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.logging.ColorConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.logging.EceptionFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "updateMarkersFilter",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.logging.LogAnonymizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.logging.LogContentProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.logging.LoggingMarkerFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "updateMarkersFilter",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.logging.MdcLogConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.logging.SensitiveDataRemovingPatternLayoutEncoder",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setCharset",
                "parameterTypes": [
                    "java.nio.charset.Charset"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.ActionAttribute",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.mapping.newznab.NewznabResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.NewznabResponse$SearchType",
        "allDeclaredFields": true,
        "fields": [
            {
                "name": "JSON"
            },
            {
                "name": "NEWZNAB"
            },
            {
                "name": "TORZNAB"
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateDeserializer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.json.JsonPubdateSerializer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabAttribute",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlApilimits",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlChannel",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlEnclosure",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlError",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlGuid",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlItem",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlResponse",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.NewznabXmlRoot",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.Xml",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategories",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlCategory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlLimits",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRetention",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlRoot",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearch",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlSearching",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.CapsXmlServer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlIndexer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.caps.jackett.JacketCapsXmlRoot",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mapping.newznab.xml.package-info"
    },
    {
        "name": "org.nzbhydra.mediainfo.CustomTmdb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "initWithApiKey",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mediainfo.InfoProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.mediainfo.InfoProvider$$EnhancerBySpringCGLIB$$f0632ba1",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.mediainfo.MediaIdType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.mediainfo.MediaInfoWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.mediainfo.MovieInfo",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mediainfo.MovieInfoCustomizer"
    },
    {
        "name": "org.nzbhydra.mediainfo.MovieInfoRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.mediainfo.MovieInfo_"
    },
    {
        "name": "org.nzbhydra.mediainfo.TmdbHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.mediainfo.TvInfo",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.mediainfo.TvInfoCustomizer"
    },
    {
        "name": "org.nzbhydra.mediainfo.TvInfoRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.mediainfo.TvInfo_"
    },
    {
        "name": "org.nzbhydra.mediainfo.TvMazeHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.misc.BrowserOpener",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.misc.UserAgentMapper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.misc.WebHooks",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.misc.WebHooks$$EnhancerBySpringCGLIB$$dd0df0d",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.news.NewsProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.news.NewsWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.news.ShownNews",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.news.ShownNewsCustomizer"
    },
    {
        "name": "org.nzbhydra.news.ShownNewsRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.news.ShownNews_"
    },
    {
        "name": "org.nzbhydra.notifications.NotificationEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.notifications.NotificationEntity$MessageType"
    },
    {
        "name": "org.nzbhydra.notifications.NotificationEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.notifications.NotificationEntity_"
    },
    {
        "name": "org.nzbhydra.notifications.NotificationEventType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.notifications.NotificationHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.notifications.NotificationRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.notifications.NotificationsWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.problemdetection.OutOfMemoryDetector",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.problemdetection.OutdatedWrapperDetector",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.problemdetection.ProblemDetector",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.problemdetection.ProblemDetectorTask",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "init",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.problemdetection.VipExpiryDetector",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryData",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.problemdetection.VipExpiryDetector$VipExpiryDataEntry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setExpiryDate",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setIndexerName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.CategoryProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.CustomSearchRequestMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.CustomSearchRequestMapping$AffectedValue",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.searching.CustomSearchRequestMapping$Mapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.DuplicateDetector",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.IndexerForSearchSelector",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.IndexerForSearchSelector$$EnhancerBySpringCGLIB$$7f2e34e1",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "fields": [
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.InternalSearchResultProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleConfigProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleProvider$$EnhancerBySpringCGLIB$$607b2d6e",
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleProvider$$EnhancerBySpringCGLIB$$607b2d6e$$FastClassBySpringCGLIB$$16a08ece",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.SearchModuleProvider$$FastClassBySpringCGLIB$$dce10131",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.SearchResultAcceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.SearchWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.Searcher",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.cleanup.HistoryCleanupTask",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.cleanup.OldResultsCleanupTask$$EnhancerBySpringCGLIB$$44baa507",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.searching.cleanup.ShortIndexerApiAccessCleanup$$EnhancerBySpringCGLIB$$a09d6178",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.db.IdentifierKeyValuePairCustomizer"
    },
    {
        "name": "org.nzbhydra.searching.db.IdentifierKeyValuePair_"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.db.SearchEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchEntity_"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultEntity_"
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.db.SearchResultSequenceGenerator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.dtoseventsenums.SearchResultItem$DownloadType"
    },
    {
        "name": "org.nzbhydra.searching.dtoseventsenums.SearchType",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.searching.searchrequests.SearchRequest$SearchSource"
    },
    {
        "name": "org.nzbhydra.searching.searchrequests.SearchRequestFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityCustomizer"
    },
    {
        "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntityRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.searching.uniqueness.IndexerUniquenessScoreEntity_"
    },
    {
        "name": "org.nzbhydra.springconfig.AppConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.springconfig.ControllerAdvices",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.springconfig.GracefulSpringShutdown",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.systemcontrol.SystemControl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.systemcontrol.SystemControlWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.tasks.HydraTask",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.tasks.HydraTaskConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.nzbhydra.tasks.HydraTaskScheduler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterSingletonsInstantiated",
                "parameterTypes": []
            },
            {
                "name": "postProcessAfterInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            },
            {
                "name": "postProcessBeforeInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.tasks.HydraTasksWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.update.AutomaticUpdater",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.nzbhydra.update.AutomaticUpdater$$EnhancerBySpringCGLIB$$190e0d9c",
        "fields": [
            {
                "name": "CGLIB$CALLBACK_FILTER"
            },
            {
                "name": "CGLIB$FACTORY_DATA"
            }
        ],
        "queriedMethods": [
            {
                "name": "CGLIB$SET_THREAD_CALLBACKS",
                "parameterTypes": [
                    "org.springframework.cglib.proxy.Callback[]"
                ]
            }
        ]
    },
    {
        "name": "org.nzbhydra.update.UpdateManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.update.UpdatesWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.ErrorHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.HelpWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.Interceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.MainWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.NzbDetailsWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.UrlCalculator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.WebConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.WebSocketConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.web.WelcomeWeb",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.nzbhydra.webaccess.HydraOkHttp3ClientHttpRequestFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "init",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.webaccess.Ssl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "init",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.nzbhydra.webaccess.WebAccess",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.reactivestreams$Publisher"
    },
    {
        "name": "org.reactivestreams.Publisher"
    },
    {
        "name": "org.slf4j.Logger"
    },
    {
        "name": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
        "name": "org.slf4j.helpers.Log4jLoggerFactory"
    },
    {
        "name": "org.slf4j.spi.LocationAwareLogger"
    },
    {
        "name": "org.springdoc.api.AbstractOpenApiResource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addHiddenRestControllers",
                "parameterTypes": [
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "addHiddenRestControllers",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "addRestControllers",
                "parameterTypes": [
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "containsResponseBody",
                "parameterTypes": [
                    "org.springframework.web.method.HandlerMethod"
                ]
            },
            {
                "name": "isHiddenRestControllers",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "setModelAndViewClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springdoc.core.AbstractRequestService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addRequestWrapperToIgnore",
                "parameterTypes": [
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "applyBeanValidatorAnnotations",
                "parameterTypes": [
                    "io.swagger.v3.oas.models.parameters.Parameter",
                    "java.util.List"
                ]
            },
            {
                "name": "applyBeanValidatorAnnotations",
                "parameterTypes": [
                    "io.swagger.v3.oas.models.parameters.RequestBody",
                    "java.util.List",
                    "boolean"
                ]
            },
            {
                "name": "build",
                "parameterTypes": [
                    "org.springframework.web.method.HandlerMethod",
                    "org.springframework.web.bind.annotation.RequestMethod",
                    "io.swagger.v3.oas.models.Operation",
                    "org.springdoc.core.MethodAttributes",
                    "io.swagger.v3.oas.models.OpenAPI"
                ]
            },
            {
                "name": "buildParam",
                "parameterTypes": [
                    "org.springdoc.core.ParameterInfo",
                    "io.swagger.v3.oas.models.Components",
                    "com.fasterxml.jackson.annotation.JsonView"
                ]
            },
            {
                "name": "buildParams",
                "parameterTypes": [
                    "org.springdoc.core.ParameterInfo",
                    "io.swagger.v3.oas.models.Components",
                    "org.springframework.web.bind.annotation.RequestMethod",
                    "com.fasterxml.jackson.annotation.JsonView"
                ]
            },
            {
                "name": "getHeaders",
                "parameterTypes": [
                    "org.springdoc.core.MethodAttributes",
                    "java.util.Map"
                ]
            },
            {
                "name": "getRequestBodyBuilder",
                "parameterTypes": []
            },
            {
                "name": "isParamToIgnore",
                "parameterTypes": [
                    "org.springframework.core.MethodParameter"
                ]
            },
            {
                "name": "isRequestTypeToIgnore",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "isValidParameter",
                "parameterTypes": [
                    "io.swagger.v3.oas.models.parameters.Parameter"
                ]
            },
            {
                "name": "removeRequestWrapperToIgnore",
                "parameterTypes": [
                    "java.lang.Class[]"
                ]
            }
        ]
    },
    {
        "name": "org.springdoc.core.AbstractSwaggerUiConfigProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getConfigUrl",
                "parameterTypes": []
            },
            {
                "name": "getDeepLinking",
                "parameterTypes": []
            },
            {
                "name": "getDefaultModelExpandDepth",
                "parameterTypes": []
            },
            {
                "name": "getDefaultModelRendering",
                "parameterTypes": []
            },
            {
                "name": "getDefaultModelsExpandDepth",
                "parameterTypes": []
            },
            {
                "name": "getDisplayOperationId",
                "parameterTypes": []
            },
            {
                "name": "getDisplayRequestDuration",
                "parameterTypes": []
            },
            {
                "name": "getDocExpansion",
                "parameterTypes": []
            },
            {
                "name": "getFilter",
                "parameterTypes": []
            },
            {
                "name": "getGroupsOrder",
                "parameterTypes": []
            },
            {
                "name": "getLayout",
                "parameterTypes": []
            },
            {
                "name": "getMaxDisplayedTags",
                "parameterTypes": []
            },
            {
                "name": "getOauth2RedirectUrl",
                "parameterTypes": []
            },
            {
                "name": "getOperationsSorter",
                "parameterTypes": []
            },
            {
                "name": "getPath",
                "parameterTypes": []
            },
            {
                "name": "getPersistAuthorization",
                "parameterTypes": []
            },
            {
                "name": "getQueryConfigEnabled",
                "parameterTypes": []
            },
            {
                "name": "getShowCommonExtensions",
                "parameterTypes": []
            },
            {
                "name": "getShowExtensions",
                "parameterTypes": []
            },
            {
                "name": "getSupportedSubmitMethods",
                "parameterTypes": []
            },
            {
                "name": "getTagsSorter",
                "parameterTypes": []
            },
            {
                "name": "getTryItOutEnabled",
                "parameterTypes": []
            },
            {
                "name": "getUrl",
                "parameterTypes": []
            },
            {
                "name": "getUrls",
                "parameterTypes": []
            },
            {
                "name": "getUrlsPrimaryName",
                "parameterTypes": []
            },
            {
                "name": "getValidatorUrl",
                "parameterTypes": []
            },
            {
                "name": "getWithCredentials",
                "parameterTypes": []
            },
            {
                "name": "setConfigUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDeepLinking",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setDefaultModelExpandDepth",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setDefaultModelRendering",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDefaultModelsExpandDepth",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setDisplayOperationId",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setDisplayRequestDuration",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setDocExpansion",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setFilter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setGroupsOrder",
                "parameterTypes": [
                    "org.springdoc.core.AbstractSwaggerUiConfigProperties$Direction"
                ]
            },
            {
                "name": "setLayout",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setMaxDisplayedTags",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setOauth2RedirectUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setOperationsSorter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPersistAuthorization",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setQueryConfigEnabled",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setShowCommonExtensions",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setShowExtensions",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setSupportedSubmitMethods",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setTagsSorter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setTryItOutEnabled",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUrls",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setUrlsPrimaryName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setValidatorUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setWithCredentials",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springdoc.core.Constants",
        "allPublicFields": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.GenericParameterService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.GenericResponseService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.OpenAPIService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.OperationService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.PropertyResolverUtils",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.RequestBodyService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.ReturnTypeParser",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SecurityService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfigProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration$1",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration$OpenApiResourceAdvice",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration$SpringDocPageableConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocConfiguration$WebConversionServiceConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SpringDocProviders",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.SwaggerUiConfigParameters",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springdoc.core.SwaggerUiConfigProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springdoc.core.SwaggerUiConfigProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springdoc.core.SwaggerUiOAuthProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springdoc.core.converters.AdditionalModelsConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.FileSupportConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.ModelConverterRegistrar",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.PageableOpenAPIConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.PolymorphicModelConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.PropertyCustomizingConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.ResponseSupportConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.providers.ObjectMapperProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.providers.RouterFunctionProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.core.providers.SpringWebProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            }
        ]
    },
    {
        "name": "org.springdoc.core.providers.WebConversionServiceProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.ui.AbstractSwaggerIndexTransformer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springdoc.ui.AbstractSwaggerWelcome",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springdoc.webmvc.api.OpenApiResource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.RequestService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.RouterFunctionWebMvcProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.SpringDocWebMvcConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.core.SpringWebMvcProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerConfigResource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.Advisor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.AdvisorCustomizer"
    },
    {
        "name": "org.springframework.aop.PointcutAdvisor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.PointcutAdvisorCustomizer"
    },
    {
        "name": "org.springframework.aop.RawTargetAccess",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.aop.SpringProxy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.TargetClassAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getTargetClass",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.aop.framework.Advised",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "addAdvisor",
                "parameterTypes": [
                    "org.springframework.aop.Advisor"
                ]
            },
            {
                "name": "getTargetSource",
                "parameterTypes": []
            },
            {
                "name": "isFrozen",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.aop.framework.AopInfrastructureBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.framework.AopInfrastructureBeanCustomizer"
    },
    {
        "name": "org.springframework.aop.framework.ProxyConfig",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.framework.ProxyConfigCustomizer"
    },
    {
        "name": "org.springframework.aop.framework.ProxyProcessorSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setOrder",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.aop.framework.ProxyProcessorSupportCustomizer"
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreatorCustomizer"
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreatorCustomizer"
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreatorCustomizer"
    },
    {
        "name": "org.springframework.aop.scope.ScopedObject",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getAdvice",
                "parameterTypes": []
            },
            {
                "name": "getAdviceBeanName",
                "parameterTypes": []
            },
            {
                "name": "setAdvice",
                "parameterTypes": [
                    "org.aopalliance.aop.Advice"
                ]
            },
            {
                "name": "setAdviceBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setOrder",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.aop.support.AbstractPointcutAdvisorCustomizer"
    },
    {
        "name": "org.springframework.aot.ContextBootstrapInitializer",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.aot.StaticSpringFactories"
    },
    {
        "name": "org.springframework.aot.test.context.bootstrap.generator.AotTestContextProcessor"
    },
    {
        "name": "org.springframework.beans.factory.Aware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.AwareCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.BeanClassLoaderAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.BeanClassLoaderAwareCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.BeanFactoryAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.BeanFactoryAwareCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.BeanNameAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.DisposableBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.FactoryBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.FactoryBeanCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.InitializingBean",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.InitializingBeanCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.SmartInitializingSingleton",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.annotation.Autowired",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.beans.factory.annotation.Qualifier",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.beans.factory.annotation.Value",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "getObject",
                "parameterTypes": []
            },
            {
                "name": "isSingleton",
                "parameterTypes": []
            },
            {
                "name": "setBeanClassLoader",
                "parameterTypes": [
                    "java.lang.ClassLoader"
                ]
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "setSingleton",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.beans.factory.config.BeanPostProcessor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.config.BeanPostProcessorCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.config.PropertiesFactoryBeanCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessorCustomizer"
    },
    {
        "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.beans.factory.support.NullBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.LazyInitializationExcludeFilter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "endpoint",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext",
                    "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getExposure",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getInclude",
                "parameterTypes": []
            },
            {
                "name": "setInclude",
                "parameterTypes": [
                    "java.util.Set"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.flyway.FlywayEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "postProcessAfterInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setShowDetails",
                "parameterTypes": [
                    "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "setShowComponents",
                "parameterTypes": [
                    "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "getRoles",
                "parameterTypes": []
            },
            {
                "name": "getShowComponents",
                "parameterTypes": []
            },
            {
                "name": "getStatus",
                "parameterTypes": []
            },
            {
                "name": "setRoles",
                "parameterTypes": [
                    "java.util.Set"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "fallback",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.beans.factory.ObjectProvider"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "postProcessAfterInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.cache.CacheMetricsRegistrarConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "io.micrometer.core.instrument.MeterRegistry",
                    "java.util.Collection",
                    "java.util.Map"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "postProcessBeforeInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.core.env.Environment"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "produces",
                "parameterTypes": []
            },
            {
                "name": "producesFrom",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "enableByDefault",
                "parameterTypes": []
            },
            {
                "name": "id",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getEndpoints",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "endpoint",
                "parameterTypes": []
            },
            {
                "name": "filter",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "produces",
                "parameterTypes": []
            },
            {
                "name": "producesFrom",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "match",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "endpoint",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "enableByDefault",
                "parameterTypes": []
            },
            {
                "name": "id",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "getEndpoints",
                "parameterTypes": []
            },
            {
                "name": "match",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.flyway.FlywayEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "health",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.health.ContributorRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getContributor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "unregisterContributor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "iterator",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthContributor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HealthIndicator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.NamedContributors",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.health.StatusAggregator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.info.InfoEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.cache.CacheMetricsRegistrar",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.cache.CaffeineCacheMeterBinderProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "after",
                "parameterTypes": []
            },
            {
                "name": "before",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "basePackageClasses",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "exclude",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotation",
                "parameterTypes": []
            },
            {
                "name": "parameterizedContainer",
                "parameterTypes": []
            },
            {
                "name": "search",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotation",
                "parameterTypes": []
            },
            {
                "name": "ignored",
                "parameterTypes": []
            },
            {
                "name": "parameterizedContainer",
                "parameterTypes": []
            },
            {
                "name": "search",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "search",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "type",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayDataSource",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationStrategy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywayProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getLocations",
                "parameterTypes": []
            },
            {
                "name": "getSchemas",
                "parameterTypes": []
            },
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLocations",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setSchemas",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setTable",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getDeserialization",
                "parameterTypes": []
            },
            {
                "name": "getSerialization",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setDriverClassName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUrl",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUsername",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "javax.sql.DataSource",
                    "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
                    "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.beans.factory.ObjectProvider"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setDdlAuto",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setUseNewIdGeneratorMappings",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "entityManagerFactory",
                "parameterTypes": [
                    "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder"
                ]
            },
            {
                "name": "entityManagerFactoryBuilder",
                "parameterTypes": [
                    "org.springframework.orm.jpa.JpaVendorAdapter",
                    "org.springframework.beans.factory.ObjectProvider",
                    "org.springframework.beans.factory.ObjectProvider"
                ]
            },
            {
                "name": "jpaVendorAdapter",
                "parameterTypes": []
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "transactionManager",
                "parameterTypes": [
                    "org.springframework.beans.factory.ObjectProvider"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getProperties",
                "parameterTypes": []
            },
            {
                "name": "setDatabasePlatform",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setOpenInView",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            },
            {
                "name": "setProperties",
                "parameterTypes": [
                    "java.util.Map"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.AntPathRequestMatcherProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
                    "org.springframework.context.ApplicationContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setCache",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMode",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getCompression",
                "parameterTypes": []
            },
            {
                "name": "getServlet",
                "parameterTypes": []
            },
            {
                "name": "getSsl",
                "parameterTypes": []
            },
            {
                "name": "getTomcat",
                "parameterTypes": []
            },
            {
                "name": "setAddress",
                "parameterTypes": [
                    "java.net.InetAddress"
                ]
            },
            {
                "name": "setForwardHeadersStrategy",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
                ]
            },
            {
                "name": "setPort",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setShutdown",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Shutdown"
                ]
            },
            {
                "name": "setSsl",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Ssl"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getEncoding",
                "parameterTypes": []
            },
            {
                "name": "getJsp",
                "parameterTypes": []
            },
            {
                "name": "getSession",
                "parameterTypes": []
            },
            {
                "name": "setContextPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getThreads",
                "parameterTypes": []
            },
            {
                "name": "setRedirectContextRoot",
                "parameterTypes": [
                    "java.lang.Boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setMax",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.WebProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getResources",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setStaticLocations",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.web.ServerProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setMaxFileSize",
                "parameterTypes": [
                    "org.springframework.util.unit.DataSize"
                ]
            },
            {
                "name": "setMaxRequestSize",
                "parameterTypes": [
                    "org.springframework.util.unit.DataSize"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.autoconfigure.web.ServerProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext",
                    "org.springframework.boot.autoconfigure.web.WebProperties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration$WebSocketMessageConverterConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.ObjectMapper"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.availability.ApplicationAvailability",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.apache.commons.logging.Log"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.logging.DeferredLogFactory",
                    "org.springframework.boot.ConfigurableBootstrapContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.config.ConfigDataProperties",
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.core.io.ResourceLoader"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.apache.commons.logging.Log",
                    "org.springframework.boot.context.properties.bind.Binder",
                    "org.springframework.core.io.ResourceLoader"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.event.EventPublishingRunListener",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.boot.SpringApplication",
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.context.properties.ConfigurationProperties",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "ignoreInvalidFields",
                "parameterTypes": []
            },
            {
                "name": "ignoreUnknownFields",
                "parameterTypes": []
            },
            {
                "name": "prefix",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinding",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.context.properties.bind.Name",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.convert.DurationUnit",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.apache.commons.logging.Log"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.jackson.JsonComponentModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.jackson.JsonMixinModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.jdbc.AbstractDataSourceInitializerDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.jdbc.SchemaManagementProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "clearCache",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.core.env.Environment"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.core.env.Environment"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "initializeDatabase",
                "parameterTypes": []
            },
            {
                "name": "setResourceLoader",
                "parameterTypes": [
                    "org.springframework.core.io.ResourceLoader"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.task.TaskExecutorBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.task.TaskSchedulerBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.client.RestTemplateCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.ClassLoader"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addErrorPages",
                "parameterTypes": [
                    "org.springframework.boot.web.server.ErrorPage[]"
                ]
            },
            {
                "name": "getAddress",
                "parameterTypes": []
            },
            {
                "name": "getCompression",
                "parameterTypes": []
            },
            {
                "name": "getErrorPages",
                "parameterTypes": []
            },
            {
                "name": "getHttp2",
                "parameterTypes": []
            },
            {
                "name": "getOrCreateSslStoreProvider",
                "parameterTypes": []
            },
            {
                "name": "getPort",
                "parameterTypes": []
            },
            {
                "name": "getServerHeader",
                "parameterTypes": []
            },
            {
                "name": "getShutdown",
                "parameterTypes": []
            },
            {
                "name": "getSsl",
                "parameterTypes": []
            },
            {
                "name": "getSslStoreProvider",
                "parameterTypes": []
            },
            {
                "name": "setAddress",
                "parameterTypes": [
                    "java.net.InetAddress"
                ]
            },
            {
                "name": "setCompression",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Compression"
                ]
            },
            {
                "name": "setErrorPages",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setHttp2",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Http2"
                ]
            },
            {
                "name": "setPort",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setServerHeader",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setShutdown",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Shutdown"
                ]
            },
            {
                "name": "setSsl",
                "parameterTypes": [
                    "org.springframework.boot.web.server.Ssl"
                ]
            },
            {
                "name": "setSslStoreProvider",
                "parameterTypes": [
                    "org.springframework.boot.web.server.SslStoreProvider"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.server.Compression",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.Cookie",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "setMaxAge",
                "parameterTypes": [
                    "java.time.Duration"
                ]
            },
            {
                "name": "setPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.ErrorPageRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.Ssl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setKeyStore",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setKeyStorePassword",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setKeyStoreType",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.server.WebServerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addServletNames",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "addServletRegistrationBeans",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
                ]
            },
            {
                "name": "addUrlPatterns",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "getServletNames",
                "parameterTypes": []
            },
            {
                "name": "getServletRegistrationBeans",
                "parameterTypes": []
            },
            {
                "name": "getUrlPatterns",
                "parameterTypes": []
            },
            {
                "name": "isMatchAfter",
                "parameterTypes": []
            },
            {
                "name": "setDispatcherTypes",
                "parameterTypes": [
                    "java.util.EnumSet"
                ]
            },
            {
                "name": "setDispatcherTypes",
                "parameterTypes": [
                    "javax.servlet.DispatcherType",
                    "javax.servlet.DispatcherType[]"
                ]
            },
            {
                "name": "setMatchAfter",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setServletNames",
                "parameterTypes": [
                    "java.util.Collection"
                ]
            },
            {
                "name": "setServletRegistrationBeans",
                "parameterTypes": [
                    "java.util.Collection"
                ]
            },
            {
                "name": "setUrlPatterns",
                "parameterTypes": [
                    "java.util.Collection"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addInitParameter",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            },
            {
                "name": "getInitParameters",
                "parameterTypes": []
            },
            {
                "name": "isAsyncSupported",
                "parameterTypes": []
            },
            {
                "name": "setAsyncSupported",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setInitParameters",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.RegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getOrder",
                "parameterTypes": []
            },
            {
                "name": "isEnabled",
                "parameterTypes": []
            },
            {
                "name": "onStartup",
                "parameterTypes": [
                    "javax.servlet.ServletContext"
                ]
            },
            {
                "name": "setEnabled",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setOrder",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.ServletRegistrationBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getMultipartConfig",
                "parameterTypes": []
            },
            {
                "name": "getServlet",
                "parameterTypes": []
            },
            {
                "name": "getServletName",
                "parameterTypes": []
            },
            {
                "name": "getUrlMappings",
                "parameterTypes": []
            },
            {
                "name": "setLoadOnStartup",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setMultipartConfig",
                "parameterTypes": [
                    "javax.servlet.MultipartConfigElement"
                ]
            },
            {
                "name": "setServlet",
                "parameterTypes": [
                    "javax.servlet.Servlet"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.error.ErrorController",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addCookieSameSiteSuppliers",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier[]"
                ]
            },
            {
                "name": "addInitializers",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.ServletContextInitializer[]"
                ]
            },
            {
                "name": "addWebListeners",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "getContextPath",
                "parameterTypes": []
            },
            {
                "name": "getCookieSameSiteSuppliers",
                "parameterTypes": []
            },
            {
                "name": "getDisplayName",
                "parameterTypes": []
            },
            {
                "name": "getDocumentRoot",
                "parameterTypes": []
            },
            {
                "name": "getInitParameters",
                "parameterTypes": []
            },
            {
                "name": "getJsp",
                "parameterTypes": []
            },
            {
                "name": "getLocaleCharsetMappings",
                "parameterTypes": []
            },
            {
                "name": "getMimeMappings",
                "parameterTypes": []
            },
            {
                "name": "getSession",
                "parameterTypes": []
            },
            {
                "name": "isRegisterDefaultServlet",
                "parameterTypes": []
            },
            {
                "name": "setContextPath",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setCookieSameSiteSuppliers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setDisplayName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setDocumentRoot",
                "parameterTypes": [
                    "java.io.File"
                ]
            },
            {
                "name": "setInitParameters",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setInitializers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setJsp",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.server.Jsp"
                ]
            },
            {
                "name": "setLocaleCharsetMappings",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setMimeMappings",
                "parameterTypes": [
                    "org.springframework.boot.web.server.MimeMappings"
                ]
            },
            {
                "name": "setRegisterDefaultServlet",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setSession",
                "parameterTypes": [
                    "org.springframework.boot.web.servlet.server.Session"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.server.Encoding",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            },
            {
                "name": "setCharset",
                "parameterTypes": [
                    "java.nio.charset.Charset"
                ]
            },
            {
                "name": "setForce",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.server.Jsp",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "setRegistered",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.boot.web.servlet.server.Session",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "getCookie",
                "parameterTypes": []
            },
            {
                "name": "setTimeout",
                "parameterTypes": [
                    "java.time.Duration"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true
    },
    {
        "name": "org.springframework.cache.CacheManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.cache.annotation.AbstractCachingConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "setImportMetadata",
                "parameterTypes": [
                    "org.springframework.core.type.AnnotationMetadata"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "isCandidateClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.annotation.Cacheable",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "cacheManager",
                "parameterTypes": []
            },
            {
                "name": "cacheNames",
                "parameterTypes": []
            },
            {
                "name": "cacheResolver",
                "parameterTypes": []
            },
            {
                "name": "condition",
                "parameterTypes": []
            },
            {
                "name": "key",
                "parameterTypes": []
            },
            {
                "name": "keyGenerator",
                "parameterTypes": []
            },
            {
                "name": "sync",
                "parameterTypes": []
            },
            {
                "name": "unless",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.cache.annotation.EnableCaching",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "mode",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.cache.annotation.ProxyCachingConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.cache.caffeine.CaffeineCacheManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.cache.interceptor.AbstractCacheInvoker",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getErrorHandler",
                "parameterTypes": []
            },
            {
                "name": "setErrorHandler",
                "parameterTypes": [
                    "org.springframework.cache.interceptor.CacheErrorHandler"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getCacheOperations",
                "parameterTypes": [
                    "java.lang.reflect.Method",
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getPointcut",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.cache.interceptor.CacheAspectSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "afterSingletonsInstantiated",
                "parameterTypes": []
            },
            {
                "name": "configure",
                "parameterTypes": [
                    "java.util.function.Supplier",
                    "java.util.function.Supplier",
                    "java.util.function.Supplier",
                    "java.util.function.Supplier"
                ]
            },
            {
                "name": "getCacheOperationSource",
                "parameterTypes": []
            },
            {
                "name": "getCacheResolver",
                "parameterTypes": []
            },
            {
                "name": "getKeyGenerator",
                "parameterTypes": []
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "setCacheManager",
                "parameterTypes": [
                    "org.springframework.cache.CacheManager"
                ]
            },
            {
                "name": "setCacheOperationSource",
                "parameterTypes": [
                    "org.springframework.cache.interceptor.CacheOperationSource"
                ]
            },
            {
                "name": "setCacheOperationSources",
                "parameterTypes": [
                    "org.springframework.cache.interceptor.CacheOperationSource[]"
                ]
            },
            {
                "name": "setCacheResolver",
                "parameterTypes": [
                    "org.springframework.cache.interceptor.CacheResolver"
                ]
            },
            {
                "name": "setKeyGenerator",
                "parameterTypes": [
                    "org.springframework.cache.interceptor.KeyGenerator"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.interceptor.CacheInterceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "invoke",
                "parameterTypes": [
                    "org.aopalliance.intercept.MethodInvocation"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.cache.interceptor.CacheOperationSource",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.cache.transaction.TransactionAwareCacheDecorator"
    },
    {
        "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
        "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.cglib.proxy.Factory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.cglib.proxy.MethodInterceptor"
    },
    {
        "name": "org.springframework.cglib.proxy.NoOp"
    },
    {
        "name": "org.springframework.context.ApplicationContextAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.ApplicationEventPublisherAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.ApplicationEventPublisherAwareCustomizer"
    },
    {
        "name": "org.springframework.context.ApplicationListener",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.EmbeddedValueResolverAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.EnvironmentAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.Lifecycle",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.LifecycleProcessor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.MessageSourceAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.Phased",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.ResourceLoaderAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.SmartLifecycle",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Bean",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "autowire",
                "parameterTypes": []
            },
            {
                "name": "name",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.annotation.ComponentScan",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "basePackageClasses",
                "parameterTypes": []
            },
            {
                "name": "basePackages",
                "parameterTypes": []
            },
            {
                "name": "nameGenerator",
                "parameterTypes": []
            },
            {
                "name": "scopeResolver",
                "parameterTypes": []
            },
            {
                "name": "scopedProxy",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.annotation.Conditional",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.annotation.Configuration",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.context.annotation.DependsOn",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Import",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.annotation.ImportAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Lazy",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Primary",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Role",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.context.annotation.Scope",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "proxyMode",
                "parameterTypes": []
            },
            {
                "name": "scopeName",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.event.EventListener",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "classes",
                "parameterTypes": []
            },
            {
                "name": "condition",
                "parameterTypes": []
            },
            {
                "name": "id",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.context.event.EventListenerFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.event.EventListenerRegistrar",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.event.SmartApplicationListener",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.support.ApplicationObjectSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.context.support.DefaultLifecycleProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.DecoratingProxy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.Ordered",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.OrderedCustomizer"
    },
    {
        "name": "org.springframework.core.ParameterNameDiscoverer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.annotation.AliasFor",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotation",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.core.annotation.Order",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.core.convert.ConversionService",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.convert.converter.ConverterRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.convert.converter.GenericConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.convert.support.ConfigurableConversionService",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.convert.support.GenericConversionService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addConverter",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class",
                    "org.springframework.core.convert.converter.Converter"
                ]
            },
            {
                "name": "addConverter",
                "parameterTypes": [
                    "org.springframework.core.convert.converter.Converter"
                ]
            },
            {
                "name": "addConverter",
                "parameterTypes": [
                    "org.springframework.core.convert.converter.GenericConverter"
                ]
            },
            {
                "name": "addConverterFactory",
                "parameterTypes": [
                    "org.springframework.core.convert.converter.ConverterFactory"
                ]
            },
            {
                "name": "canBypassConvert",
                "parameterTypes": [
                    "org.springframework.core.convert.TypeDescriptor",
                    "org.springframework.core.convert.TypeDescriptor"
                ]
            },
            {
                "name": "canConvert",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class"
                ]
            },
            {
                "name": "canConvert",
                "parameterTypes": [
                    "org.springframework.core.convert.TypeDescriptor",
                    "org.springframework.core.convert.TypeDescriptor"
                ]
            },
            {
                "name": "convert",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Class"
                ]
            },
            {
                "name": "convert",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.core.convert.TypeDescriptor"
                ]
            },
            {
                "name": "convert",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.core.convert.TypeDescriptor",
                    "org.springframework.core.convert.TypeDescriptor"
                ]
            },
            {
                "name": "removeConvertible",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Class"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.core.env.EnvironmentCapable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.io.Resource",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setIgnoreResourceNotFound",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setLocations",
                "parameterTypes": [
                    "org.springframework.core.io.Resource[]"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.core.io.support.PropertiesLoaderSupportCustomizer"
    },
    {
        "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.task.AsyncTaskExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.core.task.TaskExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.annotation.QueryAnnotation",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.geo.GeoModule",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters$InstantConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.JpaRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.Modifying",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.Query",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "countName",
                "parameterTypes": []
            },
            {
                "name": "countProjection",
                "parameterTypes": []
            },
            {
                "name": "countQuery",
                "parameterTypes": []
            },
            {
                "name": "name",
                "parameterTypes": []
            },
            {
                "name": "nativeQuery",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.util.Set"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "char"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setEntityManager",
                "parameterTypes": [
                    "javax.persistence.EntityManager"
                ]
            },
            {
                "name": "setEscapeCharacter",
                "parameterTypes": [
                    "char"
                ]
            },
            {
                "name": "setMappingContext",
                "parameterTypes": [
                    "org.springframework.data.mapping.context.MappingContext"
                ]
            }
        ],
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBeanCustomizer"
    },
    {
        "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queryAllDeclaredConstructors": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.data.jpa.repository.support.JpaEntityInformation",
                    "javax.persistence.EntityManager"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
    },
    {
        "name": "org.springframework.data.mapping.context.AbstractMappingContext",
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "getManagedTypes",
                "parameterTypes": []
            },
            {
                "name": "getPersistentEntities",
                "parameterTypes": []
            },
            {
                "name": "getPersistentEntity",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "getPersistentEntity",
                "parameterTypes": [
                    "org.springframework.data.mapping.PersistentProperty"
                ]
            },
            {
                "name": "getPersistentEntity",
                "parameterTypes": [
                    "org.springframework.data.util.TypeInformation"
                ]
            },
            {
                "name": "getPersistentPropertyPath",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.Class"
                ]
            },
            {
                "name": "getPersistentPropertyPath",
                "parameterTypes": [
                    "org.springframework.data.mapping.PropertyPath"
                ]
            },
            {
                "name": "initialize",
                "parameterTypes": []
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "setApplicationEventPublisher",
                "parameterTypes": [
                    "org.springframework.context.ApplicationEventPublisher"
                ]
            },
            {
                "name": "setInitialEntitySet",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setSimpleTypeHolder",
                "parameterTypes": [
                    "org.springframework.data.mapping.model.SimpleTypeHolder"
                ]
            },
            {
                "name": "setStrict",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.mapping.context.MappingContext",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
    },
    {
        "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
    },
    {
        "name": "org.springframework.data.repository.CrudRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.NoRepositoryBean",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.repository.PagingAndSortingRepository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.Repository",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.core.NamedQueries",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.util.Properties"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setLazyInit",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setNamedQueries",
                "parameterTypes": [
                    "org.springframework.data.repository.core.NamedQueries"
                ]
            },
            {
                "name": "setQueryLookupStrategyKey",
                "parameterTypes": [
                    "org.springframework.data.repository.query.QueryLookupStrategy$Key"
                ]
            },
            {
                "name": "setRepositoryFragments",
                "parameterTypes": [
                    "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupportCustomizer"
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformationCustomizer"
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "setEnableDefaultTransactions",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setTransactionManager",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupportCustomizer"
    },
    {
        "name": "org.springframework.data.repository.query.Param"
    },
    {
        "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
    },
    {
        "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.spel.spi.ExtensionIdAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.util.Streamable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.PageableArgumentResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "isFallbackPageable",
                "parameterTypes": [
                    "org.springframework.data.domain.Pageable"
                ]
            },
            {
                "name": "setFallbackPageable",
                "parameterTypes": [
                    "org.springframework.data.domain.Pageable"
                ]
            },
            {
                "name": "setMaxPageSize",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setOneIndexedParameters",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setPageParameterName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPrefix",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setQualifierDelimiter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSizeParameterName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.web.SortArgumentResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getPropertyDelimiter",
                "parameterTypes": []
            },
            {
                "name": "setFallbackSort",
                "parameterTypes": [
                    "org.springframework.data.domain.Sort"
                ]
            },
            {
                "name": "setPropertyDelimiter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setQualifierDelimiter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setSortParameter",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.web.config.EnableSpringDataWebSupport",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "postProcessAfterInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            },
            {
                "name": "postProcessBeforeInitialization",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String"
                ]
            },
            {
                "name": "setBeanClassLoader",
                "parameterTypes": [
                    "java.lang.ClassLoader"
                ]
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.config.SpringDataJacksonModules",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext",
                    "org.springframework.beans.factory.ObjectFactory"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.format.FormatterRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.format.support.DefaultFormattingConversionService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.format.support.FormattingConversionService",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addFormatter",
                "parameterTypes": [
                    "org.springframework.format.Formatter"
                ]
            },
            {
                "name": "addFormatterForFieldAnnotation",
                "parameterTypes": [
                    "org.springframework.format.AnnotationFormatterFactory"
                ]
            },
            {
                "name": "addFormatterForFieldType",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.format.Formatter"
                ]
            },
            {
                "name": "addFormatterForFieldType",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.format.Printer",
                    "org.springframework.format.Parser"
                ]
            },
            {
                "name": "addParser",
                "parameterTypes": [
                    "org.springframework.format.Parser"
                ]
            },
            {
                "name": "addPrinter",
                "parameterTypes": [
                    "org.springframework.format.Printer"
                ]
            },
            {
                "name": "setEmbeddedValueResolver",
                "parameterTypes": [
                    "org.springframework.util.StringValueResolver"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
        "name": "org.springframework.http.HttpStatus"
    },
    {
        "name": "org.springframework.http.client.AsyncClientHttpRequestFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.client.ClientHttpRequestFactory",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.client.support.HttpAccessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getClientHttpRequestInitializers",
                "parameterTypes": []
            },
            {
                "name": "setClientHttpRequestInitializers",
                "parameterTypes": [
                    "java.util.List"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.http.client.support.InterceptingHttpAccessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getInterceptors",
                "parameterTypes": []
            },
            {
                "name": "getRequestFactory",
                "parameterTypes": []
            },
            {
                "name": "setInterceptors",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setRequestFactory",
                "parameterTypes": [
                    "org.springframework.http.client.ClientHttpRequestFactory"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "canWrite",
                "parameterTypes": [
                    "java.lang.reflect.Type",
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.reflect.Type",
                    "org.springframework.http.MediaType",
                    "org.springframework.http.HttpOutputMessage"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "canRead",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "canWrite",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "getDefaultCharset",
                "parameterTypes": []
            },
            {
                "name": "getSupportedMediaTypes",
                "parameterTypes": []
            },
            {
                "name": "read",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.http.HttpInputMessage"
                ]
            },
            {
                "name": "setDefaultCharset",
                "parameterTypes": [
                    "java.nio.charset.Charset"
                ]
            },
            {
                "name": "setSupportedMediaTypes",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "write",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.http.MediaType",
                    "org.springframework.http.HttpOutputMessage"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.http.converter.GenericHttpMessageConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.converter.HttpMessageConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.converter.StringHttpMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "canRead",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "canRead",
                "parameterTypes": [
                    "java.lang.reflect.Type",
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "canWrite",
                "parameterTypes": [
                    "java.lang.Class",
                    "org.springframework.http.MediaType"
                ]
            },
            {
                "name": "getObjectMapper",
                "parameterTypes": []
            },
            {
                "name": "getObjectMappersForType",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "getSupportedMediaTypes",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "read",
                "parameterTypes": [
                    "java.lang.reflect.Type",
                    "java.lang.Class",
                    "org.springframework.http.HttpInputMessage"
                ]
            },
            {
                "name": "registerObjectMappersForType",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.util.function.Consumer"
                ]
            },
            {
                "name": "setObjectMapper",
                "parameterTypes": [
                    "com.fasterxml.jackson.databind.ObjectMapper"
                ]
            },
            {
                "name": "setPrettyPrint",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
        "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.instrument$InstrumentationSavingAgent"
    },
    {
        "name": "org.springframework.instrument.InstrumentationSavingAgent"
    },
    {
        "name": "org.springframework.jdbc.core.JdbcOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.jdbc.core.JdbcTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
    },
    {
        "name": "org.springframework.jdbc.support.JdbcAccessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "getDataSource",
                "parameterTypes": []
            },
            {
                "name": "getExceptionTranslator",
                "parameterTypes": []
            },
            {
                "name": "isLazyInit",
                "parameterTypes": []
            },
            {
                "name": "setDataSource",
                "parameterTypes": [
                    "javax.sql.DataSource"
                ]
            },
            {
                "name": "setDatabaseProductName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setExceptionTranslator",
                "parameterTypes": [
                    "org.springframework.jdbc.support.SQLExceptionTranslator"
                ]
            },
            {
                "name": "setLazyInit",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.jndi.JndiObjectFactoryBean"
    },
    {
        "name": "org.springframework.lang.NonNullApi"
    },
    {
        "name": "org.springframework.lang.Nullable"
    },
    {
        "name": "org.springframework.messaging.MessageChannel",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.MessageHandler",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.SubscribableChannel",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.converter.CompositeMessageConverter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.converter.MessageConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.converter.SmartMessageConverter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.core.AbstractMessageSendingTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Object"
                ]
            },
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Object",
                    "java.util.Map"
                ]
            },
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Object",
                    "java.util.Map",
                    "org.springframework.messaging.core.MessagePostProcessor"
                ]
            },
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Object",
                    "org.springframework.messaging.core.MessagePostProcessor"
                ]
            },
            {
                "name": "convertAndSend",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.messaging.core.MessagePostProcessor"
                ]
            },
            {
                "name": "getDefaultDestination",
                "parameterTypes": []
            },
            {
                "name": "getMessageConverter",
                "parameterTypes": []
            },
            {
                "name": "send",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.messaging.Message"
                ]
            },
            {
                "name": "setDefaultDestination",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "setMessageConverter",
                "parameterTypes": [
                    "org.springframework.messaging.converter.MessageConverter"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.messaging.core.MessageSendingOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.handler.annotation.MessageMapping",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.messaging.handler.annotation.SendTo",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
        "queriedMethods": [
            {
                "name": "noMatchingExceptionHandler",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "getArgumentResolvers",
                "parameterTypes": []
            },
            {
                "name": "getCustomArgumentResolvers",
                "parameterTypes": []
            },
            {
                "name": "getCustomReturnValueHandlers",
                "parameterTypes": []
            },
            {
                "name": "getDestinationPrefixes",
                "parameterTypes": []
            },
            {
                "name": "getHandlerMethods",
                "parameterTypes": []
            },
            {
                "name": "getReturnValueHandlers",
                "parameterTypes": []
            },
            {
                "name": "handleMessage",
                "parameterTypes": [
                    "org.springframework.messaging.Message"
                ]
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "setArgumentResolvers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setCustomArgumentResolvers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setCustomReturnValueHandlers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setReturnValueHandlers",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.messaging.simp.SimpMessageSendingOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.SimpMessagingTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getConversionService",
                "parameterTypes": []
            },
            {
                "name": "getHeaderInitializer",
                "parameterTypes": []
            },
            {
                "name": "getMessageConverter",
                "parameterTypes": []
            },
            {
                "name": "getPathMatcher",
                "parameterTypes": []
            },
            {
                "name": "getValidator",
                "parameterTypes": []
            },
            {
                "name": "isRunning",
                "parameterTypes": []
            },
            {
                "name": "setConversionService",
                "parameterTypes": [
                    "org.springframework.core.convert.ConversionService"
                ]
            },
            {
                "name": "setDestinationPrefixes",
                "parameterTypes": [
                    "java.util.Collection"
                ]
            },
            {
                "name": "setEmbeddedValueResolver",
                "parameterTypes": [
                    "org.springframework.util.StringValueResolver"
                ]
            },
            {
                "name": "setHeaderInitializer",
                "parameterTypes": [
                    "org.springframework.messaging.support.MessageHeaderInitializer"
                ]
            },
            {
                "name": "setMessageConverter",
                "parameterTypes": [
                    "org.springframework.messaging.converter.MessageConverter"
                ]
            },
            {
                "name": "setPathMatcher",
                "parameterTypes": [
                    "org.springframework.util.PathMatcher"
                ]
            },
            {
                "name": "setValidator",
                "parameterTypes": [
                    "org.springframework.validation.Validator"
                ]
            },
            {
                "name": "start",
                "parameterTypes": []
            },
            {
                "name": "stop",
                "parameterTypes": []
            },
            {
                "name": "stop",
                "parameterTypes": [
                    "java.lang.Runnable"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getApplicationEventPublisher",
                "parameterTypes": []
            },
            {
                "name": "getBrokerChannel",
                "parameterTypes": []
            },
            {
                "name": "getClientInboundChannel",
                "parameterTypes": []
            },
            {
                "name": "getClientOutboundChannel",
                "parameterTypes": []
            },
            {
                "name": "getDestinationPrefixes",
                "parameterTypes": []
            },
            {
                "name": "handleMessage",
                "parameterTypes": [
                    "org.springframework.messaging.Message"
                ]
            },
            {
                "name": "isAutoStartup",
                "parameterTypes": []
            },
            {
                "name": "isBrokerAvailable",
                "parameterTypes": []
            },
            {
                "name": "isPreservePublishOrder",
                "parameterTypes": []
            },
            {
                "name": "isRunning",
                "parameterTypes": []
            },
            {
                "name": "setApplicationEventPublisher",
                "parameterTypes": [
                    "org.springframework.context.ApplicationEventPublisher"
                ]
            },
            {
                "name": "setAutoStartup",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setPreservePublishOrder",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUserDestinationPredicate",
                "parameterTypes": [
                    "java.util.function.Predicate"
                ]
            },
            {
                "name": "start",
                "parameterTypes": []
            },
            {
                "name": "stop",
                "parameterTypes": []
            },
            {
                "name": "stop",
                "parameterTypes": [
                    "java.lang.Runnable"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "brokerChannel",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.core.task.TaskExecutor"
                ]
            },
            {
                "name": "brokerChannelExecutor",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel"
                ]
            },
            {
                "name": "brokerMessageConverter",
                "parameterTypes": []
            },
            {
                "name": "brokerMessagingTemplate",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.converter.CompositeMessageConverter"
                ]
            },
            {
                "name": "clientInboundChannel",
                "parameterTypes": [
                    "org.springframework.core.task.TaskExecutor"
                ]
            },
            {
                "name": "clientInboundChannelExecutor",
                "parameterTypes": []
            },
            {
                "name": "clientOutboundChannel",
                "parameterTypes": [
                    "org.springframework.core.task.TaskExecutor"
                ]
            },
            {
                "name": "clientOutboundChannelExecutor",
                "parameterTypes": []
            },
            {
                "name": "getApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "getPathMatcher",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel"
                ]
            },
            {
                "name": "getValidator",
                "parameterTypes": []
            },
            {
                "name": "messageBrokerTaskScheduler",
                "parameterTypes": []
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "simpAnnotationMethodMessageHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.simp.SimpMessagingTemplate",
                    "org.springframework.messaging.converter.CompositeMessageConverter"
                ]
            },
            {
                "name": "simpleBrokerMessageHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.simp.user.UserDestinationResolver"
                ]
            },
            {
                "name": "stompBrokerRelayMessageHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
                    "org.springframework.messaging.MessageHandler",
                    "org.springframework.messaging.simp.user.UserDestinationResolver"
                ]
            },
            {
                "name": "userDestinationMessageHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.simp.user.UserDestinationResolver"
                ]
            },
            {
                "name": "userDestinationResolver",
                "parameterTypes": [
                    "org.springframework.messaging.simp.user.SimpUserRegistry",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel"
                ]
            },
            {
                "name": "userRegistry",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel"
                ]
            },
            {
                "name": "userRegistryMessageHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.simp.user.SimpUserRegistry",
                    "org.springframework.messaging.simp.SimpMessagingTemplate",
                    "org.springframework.scheduling.TaskScheduler"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.user.SimpUserRegistry",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.simp.user.UserDestinationResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.support.AbstractMessageChannel",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getBeanName",
                "parameterTypes": []
            },
            {
                "name": "getInterceptors",
                "parameterTypes": []
            },
            {
                "name": "getLogger",
                "parameterTypes": []
            },
            {
                "name": "removeInterceptor",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "removeInterceptor",
                "parameterTypes": [
                    "org.springframework.messaging.support.ChannelInterceptor"
                ]
            },
            {
                "name": "send",
                "parameterTypes": [
                    "org.springframework.messaging.Message"
                ]
            },
            {
                "name": "send",
                "parameterTypes": [
                    "org.springframework.messaging.Message",
                    "long"
                ]
            },
            {
                "name": "setBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLogger",
                "parameterTypes": [
                    "org.apache.commons.logging.Log"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.messaging.support.AbstractSubscribableChannel",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getSubscribers",
                "parameterTypes": []
            },
            {
                "name": "hasSubscription",
                "parameterTypes": [
                    "org.springframework.messaging.MessageHandler"
                ]
            },
            {
                "name": "subscribe",
                "parameterTypes": [
                    "org.springframework.messaging.MessageHandler"
                ]
            },
            {
                "name": "unsubscribe",
                "parameterTypes": [
                    "org.springframework.messaging.MessageHandler"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.messaging.support.ExecutorSubscribableChannel",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.messaging.support.InterceptableChannel",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.orm.hibernate5.SpringSessionContext",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.hibernate.engine.spi.SessionFactoryImplementor"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "createNativeEntityManager",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "getBeanClassLoader",
                "parameterTypes": []
            },
            {
                "name": "getBootstrapExecutor",
                "parameterTypes": []
            },
            {
                "name": "getEntityManagerInterface",
                "parameterTypes": []
            },
            {
                "name": "getJpaDialect",
                "parameterTypes": []
            },
            {
                "name": "getJpaPropertyMap",
                "parameterTypes": []
            },
            {
                "name": "getJpaVendorAdapter",
                "parameterTypes": []
            },
            {
                "name": "getNativeEntityManagerFactory",
                "parameterTypes": []
            },
            {
                "name": "getObject",
                "parameterTypes": []
            },
            {
                "name": "getObjectType",
                "parameterTypes": []
            },
            {
                "name": "getPersistenceProvider",
                "parameterTypes": []
            },
            {
                "name": "isSingleton",
                "parameterTypes": []
            },
            {
                "name": "setBeanClassLoader",
                "parameterTypes": [
                    "java.lang.ClassLoader"
                ]
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "setBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setBootstrapExecutor",
                "parameterTypes": [
                    "org.springframework.core.task.AsyncTaskExecutor"
                ]
            },
            {
                "name": "setEntityManagerFactoryInterface",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "setEntityManagerInitializer",
                "parameterTypes": [
                    "java.util.function.Consumer"
                ]
            },
            {
                "name": "setEntityManagerInterface",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "setJpaDialect",
                "parameterTypes": [
                    "org.springframework.orm.jpa.JpaDialect"
                ]
            },
            {
                "name": "setJpaProperties",
                "parameterTypes": [
                    "java.util.Properties"
                ]
            },
            {
                "name": "setJpaPropertyMap",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setJpaVendorAdapter",
                "parameterTypes": [
                    "org.springframework.orm.jpa.JpaVendorAdapter"
                ]
            },
            {
                "name": "setPersistenceProvider",
                "parameterTypes": [
                    "javax.persistence.spi.PersistenceProvider"
                ]
            },
            {
                "name": "setPersistenceProviderClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "translateExceptionIfPossible",
                "parameterTypes": [
                    "java.lang.RuntimeException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "createNativeEntityManager",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "getBeanClassLoader",
                "parameterTypes": []
            },
            {
                "name": "getDataSource",
                "parameterTypes": []
            },
            {
                "name": "getEntityManagerInterface",
                "parameterTypes": []
            },
            {
                "name": "getJpaDialect",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.orm.jpa.EntityManagerProxy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.orm.jpa.JpaTransactionManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.orm.jpa.JpaVendorAdapter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "postProcessEntityManager",
                "parameterTypes": [
                    "javax.persistence.EntityManager"
                ]
            },
            {
                "name": "postProcessEntityManagerFactory",
                "parameterTypes": [
                    "javax.persistence.EntityManagerFactory"
                ]
            },
            {
                "name": "setDatabase",
                "parameterTypes": [
                    "org.springframework.orm.jpa.vendor.Database"
                ]
            },
            {
                "name": "setDatabasePlatform",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setGenerateDdl",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setShowSql",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.GenericMarshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.GenericUnmarshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.Marshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.Unmarshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.jaxb.Jaxb2Marshaller",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.mime.MimeMarshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.oxm.mime.MimeUnmarshaller",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.scheduling.SchedulingTaskExecutor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.scheduling.TaskScheduler",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.Async",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.EnableAsync",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotation",
                "parameterTypes": []
            },
            {
                "name": "mode",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.scheduling.annotation.EnableScheduling",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.Schedules",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "newThread",
                "parameterTypes": [
                    "java.lang.Runnable"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "initialize",
                "parameterTypes": []
            },
            {
                "name": "setAwaitTerminationMillis",
                "parameterTypes": [
                    "long"
                ]
            },
            {
                "name": "setAwaitTerminationSeconds",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRejectedExecutionHandler",
                "parameterTypes": [
                    "java.util.concurrent.RejectedExecutionHandler"
                ]
            },
            {
                "name": "setThreadFactory",
                "parameterTypes": [
                    "java.util.concurrent.ThreadFactory"
                ]
            },
            {
                "name": "setThreadNamePrefix",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setWaitForTasksToCompleteOnShutdown",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "shutdown",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.annotation.Secured",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.access.expression.AbstractSecurityExpressionHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionHandler",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.intercept.AbstractSecurityInterceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "getAccessDecisionManager",
                "parameterTypes": []
            },
            {
                "name": "getAfterInvocationManager",
                "parameterTypes": []
            },
            {
                "name": "getAuthenticationManager",
                "parameterTypes": []
            },
            {
                "name": "getRunAsManager",
                "parameterTypes": []
            },
            {
                "name": "isAlwaysReauthenticate",
                "parameterTypes": []
            },
            {
                "name": "isRejectPublicInvocations",
                "parameterTypes": []
            },
            {
                "name": "isValidateConfigAttributes",
                "parameterTypes": []
            },
            {
                "name": "setAccessDecisionManager",
                "parameterTypes": [
                    "org.springframework.security.access.AccessDecisionManager"
                ]
            },
            {
                "name": "setAfterInvocationManager",
                "parameterTypes": [
                    "org.springframework.security.access.intercept.AfterInvocationManager"
                ]
            },
            {
                "name": "setAlwaysReauthenticate",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setApplicationEventPublisher",
                "parameterTypes": [
                    "org.springframework.context.ApplicationEventPublisher"
                ]
            },
            {
                "name": "setAuthenticationManager",
                "parameterTypes": [
                    "org.springframework.security.authentication.AuthenticationManager"
                ]
            },
            {
                "name": "setMessageSource",
                "parameterTypes": [
                    "org.springframework.context.MessageSource"
                ]
            },
            {
                "name": "setPublishAuthorizationSuccess",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRejectPublicInvocations",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRunAsManager",
                "parameterTypes": [
                    "org.springframework.security.access.intercept.RunAsManager"
                ]
            },
            {
                "name": "setValidateConfigAttributes",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "org.springframework.security.access.method.MethodSecurityMetadataSource",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisorCustomizer"
    },
    {
        "name": "org.springframework.security.access.method.AbstractMethodSecurityMetadataSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.access.method.MethodSecurityMetadataSource",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.AnonymousAuthenticationProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.AuthenticationManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.AuthenticationProvider",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.ProviderManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "authenticate",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication"
                ]
            },
            {
                "name": "getUserCache",
                "parameterTypes": []
            },
            {
                "name": "isForcePrincipalAsString",
                "parameterTypes": []
            },
            {
                "name": "isHideUserNotFoundExceptions",
                "parameterTypes": []
            },
            {
                "name": "setAuthoritiesMapper",
                "parameterTypes": [
                    "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper"
                ]
            },
            {
                "name": "setForcePrincipalAsString",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setHideUserNotFoundExceptions",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setMessageSource",
                "parameterTypes": [
                    "org.springframework.context.MessageSource"
                ]
            },
            {
                "name": "setPostAuthenticationChecks",
                "parameterTypes": [
                    "org.springframework.security.core.userdetails.UserDetailsChecker"
                ]
            },
            {
                "name": "setPreAuthenticationChecks",
                "parameterTypes": [
                    "org.springframework.security.core.userdetails.UserDetailsChecker"
                ]
            },
            {
                "name": "setUserCache",
                "parameterTypes": [
                    "org.springframework.security.core.userdetails.UserCache"
                ]
            },
            {
                "name": "supports",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.dao.DaoAuthenticationProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
        "queriedMethods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "org.springframework.security.core.AuthenticationException"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "apply",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.SecurityConfigurer"
                ]
            },
            {
                "name": "apply",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.SecurityConfigurerAdapter"
                ]
            },
            {
                "name": "getConfigurer",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "getConfigurers",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "getOrBuild",
                "parameterTypes": []
            },
            {
                "name": "getSharedObject",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "getSharedObjects",
                "parameterTypes": []
            },
            {
                "name": "objectPostProcessor",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.ObjectPostProcessor"
                ]
            },
            {
                "name": "removeConfigurer",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "removeConfigurers",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "setSharedObject",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.AbstractSecurityBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "build",
                "parameterTypes": []
            },
            {
                "name": "getObject",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.SecurityBuilder",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.SecurityConfigurer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "authenticationEventPublisher",
                "parameterTypes": [
                    "org.springframework.security.authentication.AuthenticationEventPublisher"
                ]
            },
            {
                "name": "authenticationProvider",
                "parameterTypes": [
                    "org.springframework.security.authentication.AuthenticationProvider"
                ]
            },
            {
                "name": "eraseCredentials",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "getDefaultUserDetailsService",
                "parameterTypes": []
            },
            {
                "name": "isConfigured",
                "parameterTypes": []
            },
            {
                "name": "ldapAuthentication",
                "parameterTypes": []
            },
            {
                "name": "parentAuthenticationManager",
                "parameterTypes": [
                    "org.springframework.security.authentication.AuthenticationManager"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$DefaultPasswordEncoderAuthenticationManagerBuilder",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "configure",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.SecurityBuilder"
                ]
            },
            {
                "name": "configure",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterSingletonsInstantiated",
                "parameterTypes": []
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "postProcess",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "jsr250Enabled",
                "parameterTypes": []
            },
            {
                "name": "mode",
                "parameterTypes": []
            },
            {
                "name": "order",
                "parameterTypes": []
            },
            {
                "name": "prePostEnabled",
                "parameterTypes": []
            },
            {
                "name": "proxyTargetClass",
                "parameterTypes": []
            },
            {
                "name": "securedEnabled",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterSingletonsInstantiated",
                "parameterTypes": []
            },
            {
                "name": "methodSecurityInterceptor",
                "parameterTypes": [
                    "org.springframework.security.access.method.MethodSecurityMetadataSource"
                ]
            },
            {
                "name": "preInvocationAuthorizationAdvice",
                "parameterTypes": []
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "setImportMetadata",
                "parameterTypes": [
                    "org.springframework.core.type.AnnotationMetadata"
                ]
            },
            {
                "name": "setMethodSecurityExpressionHandler",
                "parameterTypes": [
                    "java.util.List"
                ]
            },
            {
                "name": "setObjectPostProcessor",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.ObjectPostProcessor"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.web.WebSecurityConfigurer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.builders.WebSecurity",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "init",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.SecurityBuilder"
                ]
            },
            {
                "name": "init",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.web.builders.WebSecurity"
                ]
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "setAuthenticationConfiguration",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
                ]
            },
            {
                "name": "setContentNegotationStrategy",
                "parameterTypes": [
                    "org.springframework.web.accept.ContentNegotiationStrategy"
                ]
            },
            {
                "name": "setObjectPostProcessor",
                "parameterTypes": [
                    "org.springframework.security.config.annotation.ObjectPostProcessor"
                ]
            },
            {
                "name": "setTrustResolver",
                "parameterTypes": [
                    "org.springframework.security.authentication.AuthenticationTrustResolver"
                ]
            },
            {
                "name": "userDetailsServiceBean",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.context.DelegatingApplicationListener",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.core.userdetails.UserDetailsService",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.provisioning.UserDetailsManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.FilterChainProxy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.access.AccessDeniedHandler",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.access.AccessDeniedHandlerImpl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "setErrorPage",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.web.access.ExceptionTranslationFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.access.RequestMatcherDelegatingWebInvocationPrivilegeEvaluator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.AnonymousAuthenticationFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.logout.LogoutFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.logout.LogoutHandler",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.logout.LogoutSuccessEventPublishingLogoutHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "onAuthentication",
                "parameterTypes": [
                    "org.springframework.security.core.Authentication",
                    "javax.servlet.http.HttpServletRequest",
                    "javax.servlet.http.HttpServletResponse"
                ]
            },
            {
                "name": "setAlwaysCreateSession",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setApplicationEventPublisher",
                "parameterTypes": [
                    "org.springframework.context.ApplicationEventPublisher"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.context.SecurityContextPersistenceFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.firewall.DefaultHttpFirewall",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.firewall.HttpFirewall",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.header.HeaderWriterFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.savedrequest.RequestCacheAwareFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.security.web.session.SessionManagementFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.stereotype.Component",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.stereotype.Controller",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.stereotype.Indexed",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.stereotype.Repository",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.transaction.PlatformTransactionManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.TransactionDefinition",
        "allPublicFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.TransactionManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "setImportMetadata",
                "parameterTypes": [
                    "org.springframework.core.type.AnnotationMetadata"
                ]
            },
            {
                "name": "transactionalEventListenerFactory",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "equals",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "isCandidateClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "mode",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.transaction.annotation.Transactional",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "isolation",
                "parameterTypes": []
            },
            {
                "name": "label",
                "parameterTypes": []
            },
            {
                "name": "noRollbackFor",
                "parameterTypes": []
            },
            {
                "name": "noRollbackForClassName",
                "parameterTypes": []
            },
            {
                "name": "propagation",
                "parameterTypes": []
            },
            {
                "name": "readOnly",
                "parameterTypes": []
            },
            {
                "name": "rollbackFor",
                "parameterTypes": []
            },
            {
                "name": "rollbackForClassName",
                "parameterTypes": []
            },
            {
                "name": "timeout",
                "parameterTypes": []
            },
            {
                "name": "timeoutString",
                "parameterTypes": []
            },
            {
                "name": "transactionManager",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getTransactionAttribute",
                "parameterTypes": [
                    "java.lang.reflect.Method",
                    "java.lang.Class"
                ]
            },
            {
                "name": "setEmbeddedValueResolver",
                "parameterTypes": [
                    "org.springframework.util.StringValueResolver"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getPointcut",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "currentTransactionStatus",
                "parameterTypes": []
            },
            {
                "name": "getTransactionAttributeSource",
                "parameterTypes": []
            },
            {
                "name": "getTransactionManager",
                "parameterTypes": []
            },
            {
                "name": "setBeanFactory",
                "parameterTypes": [
                    "org.springframework.beans.factory.BeanFactory"
                ]
            },
            {
                "name": "setTransactionAttributeSource",
                "parameterTypes": [
                    "org.springframework.transaction.interceptor.TransactionAttributeSource"
                ]
            },
            {
                "name": "setTransactionAttributeSources",
                "parameterTypes": [
                    "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
                ]
            },
            {
                "name": "setTransactionAttributes",
                "parameterTypes": [
                    "java.util.Properties"
                ]
            },
            {
                "name": "setTransactionManager",
                "parameterTypes": [
                    "org.springframework.transaction.TransactionManager"
                ]
            },
            {
                "name": "setTransactionManagerBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "invoke",
                "parameterTypes": [
                    "org.aopalliance.intercept.MethodInvocation"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.transaction.interceptor.TransactionalProxy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
        "allDeclaredFields": true,
        "allPublicFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "commit",
                "parameterTypes": [
                    "org.springframework.transaction.TransactionStatus"
                ]
            },
            {
                "name": "getDefaultTimeout",
                "parameterTypes": []
            },
            {
                "name": "getTransaction",
                "parameterTypes": [
                    "org.springframework.transaction.TransactionDefinition"
                ]
            },
            {
                "name": "getTransactionSynchronization",
                "parameterTypes": []
            },
            {
                "name": "isFailEarlyOnGlobalRollbackOnly",
                "parameterTypes": []
            },
            {
                "name": "isGlobalRollbackOnParticipationFailure",
                "parameterTypes": []
            },
            {
                "name": "isNestedTransactionAllowed",
                "parameterTypes": []
            },
            {
                "name": "isRollbackOnCommitFailure",
                "parameterTypes": []
            },
            {
                "name": "isValidateExistingTransaction",
                "parameterTypes": []
            },
            {
                "name": "rollback",
                "parameterTypes": [
                    "org.springframework.transaction.TransactionStatus"
                ]
            },
            {
                "name": "setDefaultTimeout",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setFailEarlyOnGlobalRollbackOnly",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setGlobalRollbackOnParticipationFailure",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setNestedTransactionAllowed",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setRollbackOnCommitFailure",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setTransactionSynchronization",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setTransactionSynchronizationName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setValidateExistingTransaction",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getIsolationLevel",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getPropagationBehavior",
                "parameterTypes": []
            },
            {
                "name": "getTimeout",
                "parameterTypes": []
            },
            {
                "name": "hashCode",
                "parameterTypes": []
            },
            {
                "name": "isReadOnly",
                "parameterTypes": []
            },
            {
                "name": "setIsolationLevel",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setIsolationLevelName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPropagationBehavior",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setPropagationBehaviorName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setReadOnly",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setTimeout",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "toString",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.transaction.support.ResourceTransactionManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.support.TransactionOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.transaction.support.TransactionTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.util.AntPathMatcher",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.util.Assert"
    },
    {
        "name": "org.springframework.util.CustomizableThreadCreator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "createThread",
                "parameterTypes": [
                    "java.lang.Runnable"
                ]
            },
            {
                "name": "getThreadGroup",
                "parameterTypes": []
            },
            {
                "name": "getThreadNamePrefix",
                "parameterTypes": []
            },
            {
                "name": "getThreadPriority",
                "parameterTypes": []
            },
            {
                "name": "isDaemon",
                "parameterTypes": []
            },
            {
                "name": "setDaemon",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setThreadGroup",
                "parameterTypes": [
                    "java.lang.ThreadGroup"
                ]
            },
            {
                "name": "setThreadGroupName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setThreadPriority",
                "parameterTypes": [
                    "int"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.util.PathMatcher",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.validation.SmartValidator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.validation.Validator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "forExecutables",
                "parameterTypes": []
            },
            {
                "name": "getConstraintsForClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "supports",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "validate",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.validation.Errors"
                ]
            },
            {
                "name": "validate",
                "parameterTypes": [
                    "java.lang.Object",
                    "org.springframework.validation.Errors",
                    "java.lang.Object[]"
                ]
            },
            {
                "name": "validate",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "validateProperty",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.String",
                    "java.lang.Class[]"
                ]
            },
            {
                "name": "validateValue",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.String",
                    "java.lang.Object",
                    "org.springframework.validation.Errors",
                    "java.lang.Object[]"
                ]
            },
            {
                "name": "validateValue",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.String",
                    "java.lang.Object",
                    "java.lang.Class[]"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.accept.ContentNegotiationManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.accept.ContentNegotiationStrategy",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.ControllerAdvice",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotations",
                "parameterTypes": []
            },
            {
                "name": "assignableTypes",
                "parameterTypes": []
            },
            {
                "name": "basePackageClasses",
                "parameterTypes": []
            },
            {
                "name": "basePackages",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.CrossOrigin",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "allowCredentials",
                "parameterTypes": []
            },
            {
                "name": "allowedHeaders",
                "parameterTypes": []
            },
            {
                "name": "exposedHeaders",
                "parameterTypes": []
            },
            {
                "name": "maxAge",
                "parameterTypes": []
            },
            {
                "name": "methods",
                "parameterTypes": []
            },
            {
                "name": "originPatterns",
                "parameterTypes": []
            },
            {
                "name": "origins",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.ExceptionHandler",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.GetMapping",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "consumes",
                "parameterTypes": []
            },
            {
                "name": "headers",
                "parameterTypes": []
            },
            {
                "name": "name",
                "parameterTypes": []
            },
            {
                "name": "params",
                "parameterTypes": []
            },
            {
                "name": "path",
                "parameterTypes": []
            },
            {
                "name": "produces",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.InitBinder",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.Mapping",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.PathVariable",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.RequestBody",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "required",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.RequestMapping",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "consumes",
                "parameterTypes": []
            },
            {
                "name": "headers",
                "parameterTypes": []
            },
            {
                "name": "method",
                "parameterTypes": []
            },
            {
                "name": "name",
                "parameterTypes": []
            },
            {
                "name": "params",
                "parameterTypes": []
            },
            {
                "name": "path",
                "parameterTypes": []
            },
            {
                "name": "produces",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.RequestMethod"
    },
    {
        "name": "org.springframework.web.bind.annotation.ResponseBody",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.ResponseStatus",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "code",
                "parameterTypes": []
            },
            {
                "name": "reason",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.bind.annotation.RestController",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.bind.annotation.RestControllerAdvice",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "annotations",
                "parameterTypes": []
            },
            {
                "name": "assignableTypes",
                "parameterTypes": []
            },
            {
                "name": "basePackageClasses",
                "parameterTypes": []
            },
            {
                "name": "basePackages",
                "parameterTypes": []
            },
            {
                "name": "value",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.client.RestOperations",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.client.RestTemplate",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
        "name": "org.springframework.web.context.ServletContextAware",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.context.annotation.RequestScope",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "proxyMode",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.context.support.WebApplicationObjectSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "setServletContext",
                "parameterTypes": [
                    "javax.servlet.ServletContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.filter.CharacterEncodingFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getEncoding",
                "parameterTypes": []
            },
            {
                "name": "isForceRequestEncoding",
                "parameterTypes": []
            },
            {
                "name": "isForceResponseEncoding",
                "parameterTypes": []
            },
            {
                "name": "setEncoding",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setForceEncoding",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setForceRequestEncoding",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setForceResponseEncoding",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.filter.DelegatingFilterProxy",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.filter.GenericFilterBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "afterPropertiesSet",
                "parameterTypes": []
            },
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "getEnvironment",
                "parameterTypes": []
            },
            {
                "name": "getFilterConfig",
                "parameterTypes": []
            },
            {
                "name": "init",
                "parameterTypes": [
                    "javax.servlet.FilterConfig"
                ]
            },
            {
                "name": "setBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setEnvironment",
                "parameterTypes": [
                    "org.springframework.core.env.Environment"
                ]
            },
            {
                "name": "setServletContext",
                "parameterTypes": [
                    "javax.servlet.ServletContext"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.filter.OncePerRequestFilter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "doFilter",
                "parameterTypes": [
                    "javax.servlet.ServletRequest",
                    "javax.servlet.ServletResponse",
                    "javax.servlet.FilterChain"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
        "queriedMethods": [
            {
                "name": "noMatchingExceptionHandler",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.method.support.UriComponentsContributor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.multipart.MultipartResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.reactive$DispatcherHandler"
    },
    {
        "name": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
        "name": "org.springframework.web.reactive.result.view.View"
    },
    {
        "name": "org.springframework.web.servlet.AsyncHandlerInterceptor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.DispatcherServlet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.FlashMapManager",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.FrameworkServlet",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "destroy",
                "parameterTypes": []
            },
            {
                "name": "getContextAttribute",
                "parameterTypes": []
            },
            {
                "name": "getContextClass",
                "parameterTypes": []
            },
            {
                "name": "getContextConfigLocation",
                "parameterTypes": []
            },
            {
                "name": "getContextId",
                "parameterTypes": []
            },
            {
                "name": "getNamespace",
                "parameterTypes": []
            },
            {
                "name": "getServletContextAttributeName",
                "parameterTypes": []
            },
            {
                "name": "getWebApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "isEnableLoggingRequestDetails",
                "parameterTypes": []
            },
            {
                "name": "onApplicationEvent",
                "parameterTypes": [
                    "org.springframework.context.event.ContextRefreshedEvent"
                ]
            },
            {
                "name": "refresh",
                "parameterTypes": []
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "setContextAttribute",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setContextClass",
                "parameterTypes": [
                    "java.lang.Class"
                ]
            },
            {
                "name": "setContextConfigLocation",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setContextId",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setContextInitializerClasses",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setContextInitializers",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContextInitializer[]"
                ]
            },
            {
                "name": "setDispatchOptionsRequest",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setDispatchTraceRequest",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setEnableLoggingRequestDetails",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setNamespace",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setPublishContext",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setPublishEvents",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setThreadContextInheritable",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.HandlerAdapter",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.HandlerExceptionResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.HandlerInterceptor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.HandlerMapping",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.HttpServletBean",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getEnvironment",
                "parameterTypes": []
            },
            {
                "name": "getServletName",
                "parameterTypes": []
            },
            {
                "name": "init",
                "parameterTypes": []
            },
            {
                "name": "setEnvironment",
                "parameterTypes": [
                    "org.springframework.core.env.Environment"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.LocaleResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.ThemeResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.View"
    },
    {
        "name": "org.springframework.web.servlet.ViewResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "beanNameHandlerMapping",
                "parameterTypes": [
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.web.servlet.resource.ResourceUrlProvider"
                ]
            },
            {
                "name": "defaultServletHandlerMapping",
                "parameterTypes": []
            },
            {
                "name": "flashMapManager",
                "parameterTypes": []
            },
            {
                "name": "getApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "getServletContext",
                "parameterTypes": []
            },
            {
                "name": "handlerExceptionResolver",
                "parameterTypes": [
                    "org.springframework.web.accept.ContentNegotiationManager"
                ]
            },
            {
                "name": "handlerFunctionAdapter",
                "parameterTypes": []
            },
            {
                "name": "httpRequestHandlerAdapter",
                "parameterTypes": []
            },
            {
                "name": "localeResolver",
                "parameterTypes": []
            },
            {
                "name": "mvcContentNegotiationManager",
                "parameterTypes": []
            },
            {
                "name": "mvcConversionService",
                "parameterTypes": []
            },
            {
                "name": "mvcHandlerMappingIntrospector",
                "parameterTypes": []
            },
            {
                "name": "mvcPathMatcher",
                "parameterTypes": []
            },
            {
                "name": "mvcPatternParser",
                "parameterTypes": []
            },
            {
                "name": "mvcResourceUrlProvider",
                "parameterTypes": []
            },
            {
                "name": "mvcUriComponentsContributor",
                "parameterTypes": [
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
                ]
            },
            {
                "name": "mvcUrlPathHelper",
                "parameterTypes": []
            },
            {
                "name": "mvcValidator",
                "parameterTypes": []
            },
            {
                "name": "mvcViewResolver",
                "parameterTypes": [
                    "org.springframework.web.accept.ContentNegotiationManager"
                ]
            },
            {
                "name": "requestMappingHandlerAdapter",
                "parameterTypes": [
                    "org.springframework.web.accept.ContentNegotiationManager",
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.validation.Validator"
                ]
            },
            {
                "name": "resourceHandlerMapping",
                "parameterTypes": [
                    "org.springframework.web.accept.ContentNegotiationManager",
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.web.servlet.resource.ResourceUrlProvider"
                ]
            },
            {
                "name": "routerFunctionMapping",
                "parameterTypes": [
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.web.servlet.resource.ResourceUrlProvider"
                ]
            },
            {
                "name": "setApplicationContext",
                "parameterTypes": [
                    "org.springframework.context.ApplicationContext"
                ]
            },
            {
                "name": "setServletContext",
                "parameterTypes": [
                    "javax.servlet.ServletContext"
                ]
            },
            {
                "name": "simpleControllerHandlerAdapter",
                "parameterTypes": []
            },
            {
                "name": "themeResolver",
                "parameterTypes": []
            },
            {
                "name": "viewControllerHandlerMapping",
                "parameterTypes": [
                    "org.springframework.format.support.FormattingConversionService",
                    "org.springframework.web.servlet.resource.ResourceUrlProvider"
                ]
            },
            {
                "name": "viewNameTranslator",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "initApplicationContext",
                "parameterTypes": []
            },
            {
                "name": "setDetectHandlersInAncestorContexts",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getCorsConfigurationSource",
                "parameterTypes": []
            },
            {
                "name": "getCorsProcessor",
                "parameterTypes": []
            },
            {
                "name": "getDefaultHandler",
                "parameterTypes": []
            },
            {
                "name": "getHandler",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest"
                ]
            },
            {
                "name": "getOrder",
                "parameterTypes": []
            },
            {
                "name": "getPathMatcher",
                "parameterTypes": []
            },
            {
                "name": "getPatternParser",
                "parameterTypes": []
            },
            {
                "name": "getUrlPathHelper",
                "parameterTypes": []
            },
            {
                "name": "setAlwaysUseFullPath",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setBeanName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setCorsConfigurationSource",
                "parameterTypes": [
                    "org.springframework.web.cors.CorsConfigurationSource"
                ]
            },
            {
                "name": "setCorsConfigurations",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setCorsProcessor",
                "parameterTypes": [
                    "org.springframework.web.cors.CorsProcessor"
                ]
            },
            {
                "name": "setDefaultHandler",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "setInterceptors",
                "parameterTypes": [
                    "java.lang.Object[]"
                ]
            },
            {
                "name": "setOrder",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setPathMatcher",
                "parameterTypes": [
                    "org.springframework.util.PathMatcher"
                ]
            },
            {
                "name": "setPatternParser",
                "parameterTypes": [
                    "org.springframework.web.util.pattern.PathPatternParser"
                ]
            },
            {
                "name": "setRemoveSemicolonContent",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUrlDecode",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUrlPathHelper",
                "parameterTypes": [
                    "org.springframework.web.util.UrlPathHelper"
                ]
            },
            {
                "name": "usesPathPatterns",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getHandlerMethods",
                "parameterTypes": []
            },
            {
                "name": "getHandlerMethodsForMappingName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getNamingStrategy",
                "parameterTypes": []
            },
            {
                "name": "registerMapping",
                "parameterTypes": [
                    "java.lang.Object",
                    "java.lang.Object",
                    "java.lang.reflect.Method"
                ]
            },
            {
                "name": "setDetectHandlerMethodsInAncestorContexts",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setHandlerMethodMappingNamingStrategy",
                "parameterTypes": [
                    "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
                ]
            },
            {
                "name": "setPatternParser",
                "parameterTypes": [
                    "org.springframework.web.util.pattern.PathPatternParser"
                ]
            },
            {
                "name": "unregisterMapping",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
        "queriedMethods": [
            {
                "name": "handle",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getHandlerMap",
                "parameterTypes": []
            },
            {
                "name": "getPathPatternHandlerMap",
                "parameterTypes": []
            },
            {
                "name": "getRootHandler",
                "parameterTypes": []
            },
            {
                "name": "match",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest",
                    "java.lang.String"
                ]
            },
            {
                "name": "setLazyInitHandlers",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setPatternParser",
                "parameterTypes": [
                    "org.springframework.web.util.pattern.PathPatternParser"
                ]
            },
            {
                "name": "setRootHandler",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            },
            {
                "name": "setUseTrailingSlashMatch",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "useTrailingSlashMatch",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.handler.HandlerInterceptorAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getLastModified",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest",
                    "java.lang.Object"
                ]
            },
            {
                "name": "getOrder",
                "parameterTypes": []
            },
            {
                "name": "handle",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest",
                    "javax.servlet.http.HttpServletResponse",
                    "java.lang.Object"
                ]
            },
            {
                "name": "setOrder",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "supports",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
        "queriedMethods": [
            {
                "name": "handle",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.resource.ResourceTransformer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.support.AbstractFlashMapManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getFlashMapTimeout",
                "parameterTypes": []
            },
            {
                "name": "getUrlPathHelper",
                "parameterTypes": []
            },
            {
                "name": "retrieveAndUpdate",
                "parameterTypes": [
                    "javax.servlet.http.HttpServletRequest",
                    "javax.servlet.http.HttpServletResponse"
                ]
            },
            {
                "name": "saveOutputFlashMap",
                "parameterTypes": [
                    "org.springframework.web.servlet.FlashMap",
                    "javax.servlet.http.HttpServletRequest",
                    "javax.servlet.http.HttpServletResponse"
                ]
            },
            {
                "name": "setFlashMapTimeout",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setUrlPathHelper",
                "parameterTypes": [
                    "org.springframework.web.util.UrlPathHelper"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.support.SessionFlashMapManager",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.support.WebContentGenerator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getCacheControl",
                "parameterTypes": []
            },
            {
                "name": "getCacheSeconds",
                "parameterTypes": []
            },
            {
                "name": "getSupportedMethods",
                "parameterTypes": []
            },
            {
                "name": "getVaryByRequestHeaders",
                "parameterTypes": []
            },
            {
                "name": "isAlwaysMustRevalidate",
                "parameterTypes": []
            },
            {
                "name": "isRequireSession",
                "parameterTypes": []
            },
            {
                "name": "isUseCacheControlHeader",
                "parameterTypes": []
            },
            {
                "name": "isUseCacheControlNoStore",
                "parameterTypes": []
            },
            {
                "name": "isUseExpiresHeader",
                "parameterTypes": []
            },
            {
                "name": "setAlwaysMustRevalidate",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setCacheControl",
                "parameterTypes": [
                    "org.springframework.http.CacheControl"
                ]
            },
            {
                "name": "setCacheSeconds",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setRequireSession",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setSupportedMethods",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            },
            {
                "name": "setUseCacheControlHeader",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUseCacheControlNoStore",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setUseExpiresHeader",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setVaryByRequestHeaders",
                "parameterTypes": [
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.theme.AbstractThemeResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getDefaultThemeName",
                "parameterTypes": []
            },
            {
                "name": "setDefaultThemeName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.theme.FixedThemeResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "clearCache",
                "parameterTypes": []
            },
            {
                "name": "getCacheFilter",
                "parameterTypes": []
            },
            {
                "name": "getCacheLimit",
                "parameterTypes": []
            },
            {
                "name": "isCache",
                "parameterTypes": []
            },
            {
                "name": "isCacheUnresolved",
                "parameterTypes": []
            },
            {
                "name": "removeFromCache",
                "parameterTypes": [
                    "java.lang.String",
                    "java.util.Locale"
                ]
            },
            {
                "name": "resolveViewName",
                "parameterTypes": [
                    "java.lang.String",
                    "java.util.Locale"
                ]
            },
            {
                "name": "setCache",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setCacheFilter",
                "parameterTypes": [
                    "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
                ]
            },
            {
                "name": "setCacheLimit",
                "parameterTypes": [
                    "int"
                ]
            },
            {
                "name": "setCacheUnresolved",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.servlet.view.ViewResolverComposite",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.SubProtocolCapable",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.WebSocketHandler",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker",
        "queryAllDeclaredMethods": true
    },
    {
        "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "stompWebSocketHandlerMapping",
                "parameterTypes": [
                    "org.springframework.web.socket.WebSocketHandler",
                    "org.springframework.scheduling.TaskScheduler"
                ]
            },
            {
                "name": "subProtocolWebSocketHandler",
                "parameterTypes": [
                    "org.springframework.messaging.support.AbstractSubscribableChannel",
                    "org.springframework.messaging.support.AbstractSubscribableChannel"
                ]
            },
            {
                "name": "webSocketMessageBrokerStats",
                "parameterTypes": [
                    "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler",
                    "org.springframework.web.socket.WebSocketHandler",
                    "org.springframework.core.task.TaskExecutor",
                    "org.springframework.core.task.TaskExecutor",
                    "org.springframework.scheduling.TaskScheduler"
                ]
            },
            {
                "name": "webSocketScopeConfigurer",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.util.UrlPathHelper",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.springframework.web.util.pattern.PathPatternParser",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.ITemplateEngine",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.TemplateEngine",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addDialect",
                "parameterTypes": [
                    "java.lang.String",
                    "org.thymeleaf.dialect.IDialect"
                ]
            },
            {
                "name": "addDialect",
                "parameterTypes": [
                    "org.thymeleaf.dialect.IDialect"
                ]
            },
            {
                "name": "addLinkBuilder",
                "parameterTypes": [
                    "org.thymeleaf.linkbuilder.ILinkBuilder"
                ]
            },
            {
                "name": "addMessageResolver",
                "parameterTypes": [
                    "org.thymeleaf.messageresolver.IMessageResolver"
                ]
            },
            {
                "name": "addTemplateResolver",
                "parameterTypes": [
                    "org.thymeleaf.templateresolver.ITemplateResolver"
                ]
            },
            {
                "name": "clearDialects",
                "parameterTypes": []
            },
            {
                "name": "clearTemplateCache",
                "parameterTypes": []
            },
            {
                "name": "clearTemplateCacheFor",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getCacheManager",
                "parameterTypes": []
            },
            {
                "name": "getConfiguration",
                "parameterTypes": []
            },
            {
                "name": "getDecoupledTemplateLogicResolver",
                "parameterTypes": []
            },
            {
                "name": "getDialects",
                "parameterTypes": []
            },
            {
                "name": "getDialectsByPrefix",
                "parameterTypes": []
            },
            {
                "name": "getEngineContextFactory",
                "parameterTypes": []
            },
            {
                "name": "getLinkBuilders",
                "parameterTypes": []
            },
            {
                "name": "getMessageResolvers",
                "parameterTypes": []
            },
            {
                "name": "getTemplateResolvers",
                "parameterTypes": []
            },
            {
                "name": "isInitialized",
                "parameterTypes": []
            },
            {
                "name": "process",
                "parameterTypes": [
                    "java.lang.String",
                    "java.util.Set",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "process",
                "parameterTypes": [
                    "java.lang.String",
                    "java.util.Set",
                    "org.thymeleaf.context.IContext",
                    "java.io.Writer"
                ]
            },
            {
                "name": "process",
                "parameterTypes": [
                    "java.lang.String",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "process",
                "parameterTypes": [
                    "java.lang.String",
                    "org.thymeleaf.context.IContext",
                    "java.io.Writer"
                ]
            },
            {
                "name": "process",
                "parameterTypes": [
                    "org.thymeleaf.TemplateSpec",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "process",
                "parameterTypes": [
                    "org.thymeleaf.TemplateSpec",
                    "org.thymeleaf.context.IContext",
                    "java.io.Writer"
                ]
            },
            {
                "name": "processThrottled",
                "parameterTypes": [
                    "java.lang.String",
                    "java.util.Set",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "processThrottled",
                "parameterTypes": [
                    "java.lang.String",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "processThrottled",
                "parameterTypes": [
                    "org.thymeleaf.TemplateSpec",
                    "org.thymeleaf.context.IContext"
                ]
            },
            {
                "name": "setAdditionalDialects",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setCacheManager",
                "parameterTypes": [
                    "org.thymeleaf.cache.ICacheManager"
                ]
            },
            {
                "name": "setDecoupledTemplateLogicResolver",
                "parameterTypes": [
                    "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
                ]
            },
            {
                "name": "setDialect",
                "parameterTypes": [
                    "org.thymeleaf.dialect.IDialect"
                ]
            },
            {
                "name": "setDialects",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setDialectsByPrefix",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setEngineContextFactory",
                "parameterTypes": [
                    "org.thymeleaf.context.IEngineContextFactory"
                ]
            },
            {
                "name": "setLinkBuilder",
                "parameterTypes": [
                    "org.thymeleaf.linkbuilder.ILinkBuilder"
                ]
            },
            {
                "name": "setLinkBuilders",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setMessageResolver",
                "parameterTypes": [
                    "org.thymeleaf.messageresolver.IMessageResolver"
                ]
            },
            {
                "name": "setMessageResolvers",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setTemplateResolver",
                "parameterTypes": [
                    "org.thymeleaf.templateresolver.ITemplateResolver"
                ]
            },
            {
                "name": "setTemplateResolvers",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "threadIndex",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.thymeleaf.dialect.AbstractDialect",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getName",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "org.thymeleaf.dialect.IDialect",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.dialect.IExpressionObjectDialect",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.extras.java8time.dialect.Java8TimeDialect",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.spring5.ISpringTemplateEngine",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.spring5.SpringTemplateEngine",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.spring5.view.ThymeleafViewResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "addTemplateAlias",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            },
            {
                "name": "clearTemplateAliases",
                "parameterTypes": []
            },
            {
                "name": "getCSSTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getCSSTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getCacheTTLMs",
                "parameterTypes": []
            },
            {
                "name": "getCacheablePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getCacheablePatterns",
                "parameterTypes": []
            },
            {
                "name": "getCharacterEncoding",
                "parameterTypes": []
            },
            {
                "name": "getForceSuffix",
                "parameterTypes": []
            },
            {
                "name": "getForceTemplateMode",
                "parameterTypes": []
            },
            {
                "name": "getHtml5TemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getHtml5TemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getHtmlTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getHtmlTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getJavaScriptTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getJavaScriptTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getLegacyHtml5TemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getLegacyHtml5TemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getNonCacheablePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getNonCacheablePatterns",
                "parameterTypes": []
            },
            {
                "name": "getPrefix",
                "parameterTypes": []
            },
            {
                "name": "getRawTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getRawTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getSuffix",
                "parameterTypes": []
            },
            {
                "name": "getTemplateAliases",
                "parameterTypes": []
            },
            {
                "name": "getTemplateMode",
                "parameterTypes": []
            },
            {
                "name": "getTextTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getTextTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getValidXhtmlTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getValidXhtmlTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getValidXmlTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getValidXmlTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getXhtmlTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getXhtmlTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "getXmlTemplateModePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getXmlTemplateModePatterns",
                "parameterTypes": []
            },
            {
                "name": "isCacheable",
                "parameterTypes": []
            },
            {
                "name": "setCSSTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setCacheTTLMs",
                "parameterTypes": [
                    "java.lang.Long"
                ]
            },
            {
                "name": "setCacheable",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setCacheablePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setCharacterEncoding",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setForceSuffix",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setForceTemplateMode",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setHtml5TemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setHtmlTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setJavaScriptTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setLegacyHtml5TemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setNonCacheablePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setPrefix",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setRawTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setSuffix",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setTemplateAliases",
                "parameterTypes": [
                    "java.util.Map"
                ]
            },
            {
                "name": "setTemplateMode",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setTemplateMode",
                "parameterTypes": [
                    "org.thymeleaf.templatemode.TemplateMode"
                ]
            },
            {
                "name": "setTextTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setValidXhtmlTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setValidXmlTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setXhtmlTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setXmlTemplateModePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            }
        ]
    },
    {
        "name": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queriedMethods": [
            {
                "name": "getCheckExistence",
                "parameterTypes": []
            },
            {
                "name": "getName",
                "parameterTypes": []
            },
            {
                "name": "getOrder",
                "parameterTypes": []
            },
            {
                "name": "getResolvablePatternSpec",
                "parameterTypes": []
            },
            {
                "name": "getResolvablePatterns",
                "parameterTypes": []
            },
            {
                "name": "getUseDecoupledLogic",
                "parameterTypes": []
            },
            {
                "name": "resolveTemplate",
                "parameterTypes": [
                    "org.thymeleaf.IEngineConfiguration",
                    "java.lang.String",
                    "java.lang.String",
                    "java.util.Map"
                ]
            },
            {
                "name": "setCheckExistence",
                "parameterTypes": [
                    "boolean"
                ]
            },
            {
                "name": "setName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setOrder",
                "parameterTypes": [
                    "java.lang.Integer"
                ]
            },
            {
                "name": "setResolvablePatterns",
                "parameterTypes": [
                    "java.util.Set"
                ]
            },
            {
                "name": "setUseDecoupledLogic",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "org.thymeleaf.templateresolver.ITemplateResolver",
        "queryAllDeclaredMethods": true,
        "queryAllPublicMethods": true
    },
    {
        "name": "org.webjars.WebJarAssetLocator"
    },
    {
        "name": "reactor.core.publisher$Flux"
    },
    {
        "name": "reactor.core.publisher$Mono"
    },
    {
        "name": "reactor.core.publisher.Flux"
    },
    {
        "name": "reactor.core.publisher.Mono"
    },
    {
        "name": "reactor.tools.agent$ReactorDebugAgent"
    },
    {
        "name": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
        "name": "reactor.util.lang$NonNullApi"
    },
    {
        "name": "reactor.util.lang.NonNullApi"
    },
    {
        "name": "rx$Observable"
    },
    {
        "name": "rx.Observable"
    },
    {
        "name": "scala$Option"
    },
    {
        "name": "scala.Option"
    },
    {
        "name": "sun.management.ClassLoadingImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.CompilationImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.ManagementFactoryHelper$1",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryManagerImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryPoolImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.RuntimeImpl",
        "allDeclaredFields": true,
        "queryAllDeclaredMethods": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.misc.Unsafe",
        "fields": [
            {
                "name": "theUnsafe"
            }
        ],
        "methods": [
            {
                "name": "invokeCleaner",
                "parameterTypes": [
                    "java.nio.ByteBuffer"
                ]
            }
        ]
    },
    {
        "name": "sun.reflect.ReflectionFactory",
        "methods": [
            {
                "name": "getReflectionFactory",
                "parameterTypes": []
            },
            {
                "name": "newConstructorForSerialization",
                "parameterTypes": [
                    "java.lang.Class",
                    "java.lang.reflect.Constructor"
                ]
            }
        ]
    },
    {
        "name": "sun.security.pkcs12.PKCS12KeyStore",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.provider.DRBG",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.security.SecureRandomParameters"
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.JavaKeyStore$JKS",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.provider.MD5",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA2$SHA256",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.provider.X509Factory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.rsa.RSAKeyFactory$Legacy",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.ssl.SSLContextImpl$TLSContext",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": []
            }
        ]
    },
    {
        "name": "sun.security.x509.AuthorityInfoAccessExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.BasicConstraintsExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.CRLDistributionPointsExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.CertificatePoliciesExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.ExtendedKeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.IssuerAlternativeNameExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.KeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.NetscapeCertTypeExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.PrivateKeyUsageExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.SubjectAlternativeNameExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "sun.security.x509.SubjectKeyIdentifierExtension",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.Boolean",
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "weblogic.websocket.tyrus$TyrusServletWriter"
    },
    {
        "name": "weblogic.websocket.tyrus.TyrusServletWriter"
    }
]
